### YamlMime:XRefMap
sorted: true
references:
- uid: User.Microservice
  name: User.Microservice
  href: api/User.Microservice.html
  commentId: N:User.Microservice
  fullName: User.Microservice
  nameWithType: User.Microservice
- uid: User.Microservice.APIResponses
  name: User.Microservice.APIResponses
  href: api/User.Microservice.APIResponses.html
  commentId: N:User.Microservice.APIResponses
  fullName: User.Microservice.APIResponses
  nameWithType: User.Microservice.APIResponses
- uid: User.Microservice.APIResponses.ApiResponse`1
  name: ApiResponse<T>
  href: api/User.Microservice.APIResponses.ApiResponse-1.html
  commentId: T:User.Microservice.APIResponses.ApiResponse`1
  name.vb: ApiResponse(Of T)
  fullName: User.Microservice.APIResponses.ApiResponse<T>
  fullName.vb: User.Microservice.APIResponses.ApiResponse(Of T)
  nameWithType: ApiResponse<T>
  nameWithType.vb: ApiResponse(Of T)
- uid: User.Microservice.APIResponses.ApiResponse`1.Data
  name: Data
  href: api/User.Microservice.APIResponses.ApiResponse-1.html#User_Microservice_APIResponses_ApiResponse_1_Data
  commentId: P:User.Microservice.APIResponses.ApiResponse`1.Data
  fullName: User.Microservice.APIResponses.ApiResponse<T>.Data
  fullName.vb: User.Microservice.APIResponses.ApiResponse(Of T).Data
  nameWithType: ApiResponse<T>.Data
  nameWithType.vb: ApiResponse(Of T).Data
- uid: User.Microservice.APIResponses.ApiResponse`1.Data*
  name: Data
  href: api/User.Microservice.APIResponses.ApiResponse-1.html#User_Microservice_APIResponses_ApiResponse_1_Data_
  commentId: Overload:User.Microservice.APIResponses.ApiResponse`1.Data
  isSpec: "True"
  fullName: User.Microservice.APIResponses.ApiResponse<T>.Data
  fullName.vb: User.Microservice.APIResponses.ApiResponse(Of T).Data
  nameWithType: ApiResponse<T>.Data
  nameWithType.vb: ApiResponse(Of T).Data
- uid: User.Microservice.APIResponses.ApiResponse`1.Fail(System.String)
  name: Fail(string)
  href: api/User.Microservice.APIResponses.ApiResponse-1.html#User_Microservice_APIResponses_ApiResponse_1_Fail_System_String_
  commentId: M:User.Microservice.APIResponses.ApiResponse`1.Fail(System.String)
  name.vb: Fail(String)
  fullName: User.Microservice.APIResponses.ApiResponse<T>.Fail(string)
  fullName.vb: User.Microservice.APIResponses.ApiResponse(Of T).Fail(String)
  nameWithType: ApiResponse<T>.Fail(string)
  nameWithType.vb: ApiResponse(Of T).Fail(String)
- uid: User.Microservice.APIResponses.ApiResponse`1.Fail*
  name: Fail
  href: api/User.Microservice.APIResponses.ApiResponse-1.html#User_Microservice_APIResponses_ApiResponse_1_Fail_
  commentId: Overload:User.Microservice.APIResponses.ApiResponse`1.Fail
  isSpec: "True"
  fullName: User.Microservice.APIResponses.ApiResponse<T>.Fail
  fullName.vb: User.Microservice.APIResponses.ApiResponse(Of T).Fail
  nameWithType: ApiResponse<T>.Fail
  nameWithType.vb: ApiResponse(Of T).Fail
- uid: User.Microservice.APIResponses.ApiResponse`1.Message
  name: Message
  href: api/User.Microservice.APIResponses.ApiResponse-1.html#User_Microservice_APIResponses_ApiResponse_1_Message
  commentId: P:User.Microservice.APIResponses.ApiResponse`1.Message
  fullName: User.Microservice.APIResponses.ApiResponse<T>.Message
  fullName.vb: User.Microservice.APIResponses.ApiResponse(Of T).Message
  nameWithType: ApiResponse<T>.Message
  nameWithType.vb: ApiResponse(Of T).Message
- uid: User.Microservice.APIResponses.ApiResponse`1.Message*
  name: Message
  href: api/User.Microservice.APIResponses.ApiResponse-1.html#User_Microservice_APIResponses_ApiResponse_1_Message_
  commentId: Overload:User.Microservice.APIResponses.ApiResponse`1.Message
  isSpec: "True"
  fullName: User.Microservice.APIResponses.ApiResponse<T>.Message
  fullName.vb: User.Microservice.APIResponses.ApiResponse(Of T).Message
  nameWithType: ApiResponse<T>.Message
  nameWithType.vb: ApiResponse(Of T).Message
- uid: User.Microservice.APIResponses.ApiResponse`1.Succeeded
  name: Succeeded
  href: api/User.Microservice.APIResponses.ApiResponse-1.html#User_Microservice_APIResponses_ApiResponse_1_Succeeded
  commentId: P:User.Microservice.APIResponses.ApiResponse`1.Succeeded
  fullName: User.Microservice.APIResponses.ApiResponse<T>.Succeeded
  fullName.vb: User.Microservice.APIResponses.ApiResponse(Of T).Succeeded
  nameWithType: ApiResponse<T>.Succeeded
  nameWithType.vb: ApiResponse(Of T).Succeeded
- uid: User.Microservice.APIResponses.ApiResponse`1.Succeeded*
  name: Succeeded
  href: api/User.Microservice.APIResponses.ApiResponse-1.html#User_Microservice_APIResponses_ApiResponse_1_Succeeded_
  commentId: Overload:User.Microservice.APIResponses.ApiResponse`1.Succeeded
  isSpec: "True"
  fullName: User.Microservice.APIResponses.ApiResponse<T>.Succeeded
  fullName.vb: User.Microservice.APIResponses.ApiResponse(Of T).Succeeded
  nameWithType: ApiResponse<T>.Succeeded
  nameWithType.vb: ApiResponse(Of T).Succeeded
- uid: User.Microservice.APIResponses.ApiResponse`1.Success(`0)
  name: Success(T)
  href: api/User.Microservice.APIResponses.ApiResponse-1.html#User_Microservice_APIResponses_ApiResponse_1_Success__0_
  commentId: M:User.Microservice.APIResponses.ApiResponse`1.Success(`0)
  fullName: User.Microservice.APIResponses.ApiResponse<T>.Success(T)
  fullName.vb: User.Microservice.APIResponses.ApiResponse(Of T).Success(T)
  nameWithType: ApiResponse<T>.Success(T)
  nameWithType.vb: ApiResponse(Of T).Success(T)
- uid: User.Microservice.APIResponses.ApiResponse`1.Success*
  name: Success
  href: api/User.Microservice.APIResponses.ApiResponse-1.html#User_Microservice_APIResponses_ApiResponse_1_Success_
  commentId: Overload:User.Microservice.APIResponses.ApiResponse`1.Success
  isSpec: "True"
  fullName: User.Microservice.APIResponses.ApiResponse<T>.Success
  fullName.vb: User.Microservice.APIResponses.ApiResponse(Of T).Success
  nameWithType: ApiResponse<T>.Success
  nameWithType.vb: ApiResponse(Of T).Success
- uid: User.Microservice.APIResponses.ApplicationExceptions
  name: ApplicationExceptions
  href: api/User.Microservice.APIResponses.ApplicationExceptions.html
  commentId: T:User.Microservice.APIResponses.ApplicationExceptions
  fullName: User.Microservice.APIResponses.ApplicationExceptions
  nameWithType: ApplicationExceptions
- uid: User.Microservice.APIResponses.ApplicationExceptions.#ctor
  name: ApplicationExceptions()
  href: api/User.Microservice.APIResponses.ApplicationExceptions.html#User_Microservice_APIResponses_ApplicationExceptions__ctor
  commentId: M:User.Microservice.APIResponses.ApplicationExceptions.#ctor
  name.vb: New()
  fullName: User.Microservice.APIResponses.ApplicationExceptions.ApplicationExceptions()
  fullName.vb: User.Microservice.APIResponses.ApplicationExceptions.New()
  nameWithType: ApplicationExceptions.ApplicationExceptions()
  nameWithType.vb: ApplicationExceptions.New()
- uid: User.Microservice.APIResponses.ApplicationExceptions.#ctor(System.String,System.Object[])
  name: ApplicationExceptions(string, params object[])
  href: api/User.Microservice.APIResponses.ApplicationExceptions.html#User_Microservice_APIResponses_ApplicationExceptions__ctor_System_String_System_Object___
  commentId: M:User.Microservice.APIResponses.ApplicationExceptions.#ctor(System.String,System.Object[])
  name.vb: New(String, ParamArray Object())
  fullName: User.Microservice.APIResponses.ApplicationExceptions.ApplicationExceptions(string, params object[])
  fullName.vb: User.Microservice.APIResponses.ApplicationExceptions.New(String, ParamArray Object())
  nameWithType: ApplicationExceptions.ApplicationExceptions(string, params object[])
  nameWithType.vb: ApplicationExceptions.New(String, ParamArray Object())
- uid: User.Microservice.APIResponses.ApplicationExceptions.#ctor(System.String)
  name: ApplicationExceptions(string)
  href: api/User.Microservice.APIResponses.ApplicationExceptions.html#User_Microservice_APIResponses_ApplicationExceptions__ctor_System_String_
  commentId: M:User.Microservice.APIResponses.ApplicationExceptions.#ctor(System.String)
  name.vb: New(String)
  fullName: User.Microservice.APIResponses.ApplicationExceptions.ApplicationExceptions(string)
  fullName.vb: User.Microservice.APIResponses.ApplicationExceptions.New(String)
  nameWithType: ApplicationExceptions.ApplicationExceptions(string)
  nameWithType.vb: ApplicationExceptions.New(String)
- uid: User.Microservice.APIResponses.ApplicationExceptions.#ctor*
  name: ApplicationExceptions
  href: api/User.Microservice.APIResponses.ApplicationExceptions.html#User_Microservice_APIResponses_ApplicationExceptions__ctor_
  commentId: Overload:User.Microservice.APIResponses.ApplicationExceptions.#ctor
  isSpec: "True"
  name.vb: New
  fullName: User.Microservice.APIResponses.ApplicationExceptions.ApplicationExceptions
  fullName.vb: User.Microservice.APIResponses.ApplicationExceptions.New
  nameWithType: ApplicationExceptions.ApplicationExceptions
  nameWithType.vb: ApplicationExceptions.New
- uid: User.Microservice.Configurations
  name: User.Microservice.Configurations
  href: api/User.Microservice.Configurations.html
  commentId: N:User.Microservice.Configurations
  fullName: User.Microservice.Configurations
  nameWithType: User.Microservice.Configurations
- uid: User.Microservice.Configurations.ConfigureConnections
  name: ConfigureConnections
  href: api/User.Microservice.Configurations.ConfigureConnections.html
  commentId: T:User.Microservice.Configurations.ConfigureConnections
  fullName: User.Microservice.Configurations.ConfigureConnections
  nameWithType: ConfigureConnections
- uid: User.Microservice.Configurations.ConfigureConnections.AddConnectionProvider(Microsoft.Extensions.DependencyInjection.IServiceCollection,Microsoft.Extensions.Configuration.IConfiguration)
  name: AddConnectionProvider(IServiceCollection, IConfiguration)
  href: api/User.Microservice.Configurations.ConfigureConnections.html#User_Microservice_Configurations_ConfigureConnections_AddConnectionProvider_Microsoft_Extensions_DependencyInjection_IServiceCollection_Microsoft_Extensions_Configuration_IConfiguration_
  commentId: M:User.Microservice.Configurations.ConfigureConnections.AddConnectionProvider(Microsoft.Extensions.DependencyInjection.IServiceCollection,Microsoft.Extensions.Configuration.IConfiguration)
  fullName: User.Microservice.Configurations.ConfigureConnections.AddConnectionProvider(Microsoft.Extensions.DependencyInjection.IServiceCollection, Microsoft.Extensions.Configuration.IConfiguration)
  nameWithType: ConfigureConnections.AddConnectionProvider(IServiceCollection, IConfiguration)
- uid: User.Microservice.Configurations.ConfigureConnections.AddConnectionProvider*
  name: AddConnectionProvider
  href: api/User.Microservice.Configurations.ConfigureConnections.html#User_Microservice_Configurations_ConfigureConnections_AddConnectionProvider_
  commentId: Overload:User.Microservice.Configurations.ConfigureConnections.AddConnectionProvider
  isSpec: "True"
  fullName: User.Microservice.Configurations.ConfigureConnections.AddConnectionProvider
  nameWithType: ConfigureConnections.AddConnectionProvider
- uid: User.Microservice.Configurations.ServicesConfiguration
  name: ServicesConfiguration
  href: api/User.Microservice.Configurations.ServicesConfiguration.html
  commentId: T:User.Microservice.Configurations.ServicesConfiguration
  fullName: User.Microservice.Configurations.ServicesConfiguration
  nameWithType: ServicesConfiguration
- uid: User.Microservice.Configurations.ServicesConfiguration.AddCaching(Microsoft.Extensions.DependencyInjection.IServiceCollection)
  name: AddCaching(IServiceCollection)
  href: api/User.Microservice.Configurations.ServicesConfiguration.html#User_Microservice_Configurations_ServicesConfiguration_AddCaching_Microsoft_Extensions_DependencyInjection_IServiceCollection_
  commentId: M:User.Microservice.Configurations.ServicesConfiguration.AddCaching(Microsoft.Extensions.DependencyInjection.IServiceCollection)
  fullName: User.Microservice.Configurations.ServicesConfiguration.AddCaching(Microsoft.Extensions.DependencyInjection.IServiceCollection)
  nameWithType: ServicesConfiguration.AddCaching(IServiceCollection)
- uid: User.Microservice.Configurations.ServicesConfiguration.AddCaching*
  name: AddCaching
  href: api/User.Microservice.Configurations.ServicesConfiguration.html#User_Microservice_Configurations_ServicesConfiguration_AddCaching_
  commentId: Overload:User.Microservice.Configurations.ServicesConfiguration.AddCaching
  isSpec: "True"
  fullName: User.Microservice.Configurations.ServicesConfiguration.AddCaching
  nameWithType: ServicesConfiguration.AddCaching
- uid: User.Microservice.Configurations.ServicesConfiguration.AddCORS(Microsoft.Extensions.DependencyInjection.IServiceCollection)
  name: AddCORS(IServiceCollection)
  href: api/User.Microservice.Configurations.ServicesConfiguration.html#User_Microservice_Configurations_ServicesConfiguration_AddCORS_Microsoft_Extensions_DependencyInjection_IServiceCollection_
  commentId: M:User.Microservice.Configurations.ServicesConfiguration.AddCORS(Microsoft.Extensions.DependencyInjection.IServiceCollection)
  fullName: User.Microservice.Configurations.ServicesConfiguration.AddCORS(Microsoft.Extensions.DependencyInjection.IServiceCollection)
  nameWithType: ServicesConfiguration.AddCORS(IServiceCollection)
- uid: User.Microservice.Configurations.ServicesConfiguration.AddCORS*
  name: AddCORS
  href: api/User.Microservice.Configurations.ServicesConfiguration.html#User_Microservice_Configurations_ServicesConfiguration_AddCORS_
  commentId: Overload:User.Microservice.Configurations.ServicesConfiguration.AddCORS
  isSpec: "True"
  fullName: User.Microservice.Configurations.ServicesConfiguration.AddCORS
  nameWithType: ServicesConfiguration.AddCORS
- uid: User.Microservice.Configurations.ServicesConfiguration.AddLogging(Microsoft.Extensions.DependencyInjection.IServiceCollection)
  name: AddLogging(IServiceCollection)
  href: api/User.Microservice.Configurations.ServicesConfiguration.html#User_Microservice_Configurations_ServicesConfiguration_AddLogging_Microsoft_Extensions_DependencyInjection_IServiceCollection_
  commentId: M:User.Microservice.Configurations.ServicesConfiguration.AddLogging(Microsoft.Extensions.DependencyInjection.IServiceCollection)
  fullName: User.Microservice.Configurations.ServicesConfiguration.AddLogging(Microsoft.Extensions.DependencyInjection.IServiceCollection)
  nameWithType: ServicesConfiguration.AddLogging(IServiceCollection)
- uid: User.Microservice.Configurations.ServicesConfiguration.AddLogging*
  name: AddLogging
  href: api/User.Microservice.Configurations.ServicesConfiguration.html#User_Microservice_Configurations_ServicesConfiguration_AddLogging_
  commentId: Overload:User.Microservice.Configurations.ServicesConfiguration.AddLogging
  isSpec: "True"
  fullName: User.Microservice.Configurations.ServicesConfiguration.AddLogging
  nameWithType: ServicesConfiguration.AddLogging
- uid: User.Microservice.Configurations.ServicesConfiguration.AddMiddleware(Microsoft.Extensions.DependencyInjection.IServiceCollection)
  name: AddMiddleware(IServiceCollection)
  href: api/User.Microservice.Configurations.ServicesConfiguration.html#User_Microservice_Configurations_ServicesConfiguration_AddMiddleware_Microsoft_Extensions_DependencyInjection_IServiceCollection_
  commentId: M:User.Microservice.Configurations.ServicesConfiguration.AddMiddleware(Microsoft.Extensions.DependencyInjection.IServiceCollection)
  fullName: User.Microservice.Configurations.ServicesConfiguration.AddMiddleware(Microsoft.Extensions.DependencyInjection.IServiceCollection)
  nameWithType: ServicesConfiguration.AddMiddleware(IServiceCollection)
- uid: User.Microservice.Configurations.ServicesConfiguration.AddMiddleware*
  name: AddMiddleware
  href: api/User.Microservice.Configurations.ServicesConfiguration.html#User_Microservice_Configurations_ServicesConfiguration_AddMiddleware_
  commentId: Overload:User.Microservice.Configurations.ServicesConfiguration.AddMiddleware
  isSpec: "True"
  fullName: User.Microservice.Configurations.ServicesConfiguration.AddMiddleware
  nameWithType: ServicesConfiguration.AddMiddleware
- uid: User.Microservice.Configurations.ServicesConfiguration.ConfigureRepositories(Microsoft.Extensions.DependencyInjection.IServiceCollection)
  name: ConfigureRepositories(IServiceCollection)
  href: api/User.Microservice.Configurations.ServicesConfiguration.html#User_Microservice_Configurations_ServicesConfiguration_ConfigureRepositories_Microsoft_Extensions_DependencyInjection_IServiceCollection_
  commentId: M:User.Microservice.Configurations.ServicesConfiguration.ConfigureRepositories(Microsoft.Extensions.DependencyInjection.IServiceCollection)
  fullName: User.Microservice.Configurations.ServicesConfiguration.ConfigureRepositories(Microsoft.Extensions.DependencyInjection.IServiceCollection)
  nameWithType: ServicesConfiguration.ConfigureRepositories(IServiceCollection)
- uid: User.Microservice.Configurations.ServicesConfiguration.ConfigureRepositories*
  name: ConfigureRepositories
  href: api/User.Microservice.Configurations.ServicesConfiguration.html#User_Microservice_Configurations_ServicesConfiguration_ConfigureRepositories_
  commentId: Overload:User.Microservice.Configurations.ServicesConfiguration.ConfigureRepositories
  isSpec: "True"
  fullName: User.Microservice.Configurations.ServicesConfiguration.ConfigureRepositories
  nameWithType: ServicesConfiguration.ConfigureRepositories
- uid: User.Microservice.Controllers
  name: User.Microservice.Controllers
  href: api/User.Microservice.Controllers.html
  commentId: N:User.Microservice.Controllers
  fullName: User.Microservice.Controllers
  nameWithType: User.Microservice.Controllers
- uid: User.Microservice.Controllers.CommonsController
  name: CommonsController
  href: api/User.Microservice.Controllers.CommonsController.html
  commentId: T:User.Microservice.Controllers.CommonsController
  fullName: User.Microservice.Controllers.CommonsController
  nameWithType: CommonsController
- uid: User.Microservice.Controllers.CommonsController.#ctor(Microsoft.Extensions.Logging.ILogger{User.Microservice.Controllers.CommonsController},User.Microservice.Interfaces.IRepository{User.Microservice.Models.RoleStatusModel},User.Microservice.Interfaces.IRepository{User.Microservice.Models.PersonaStatusModel},User.Microservice.Interfaces.IRepository{User.Microservice.Models.PersonaStateModel},User.Microservice.Interfaces.IRepository{User.Microservice.Models.PersonaCountyModel},User.Microservice.Interfaces.IRepository{User.Microservice.Models.PermissionStatusModel})
  name: CommonsController(ILogger<CommonsController>, IRepository<RoleStatusModel>, IRepository<PersonaStatusModel>, IRepository<PersonaStateModel>, IRepository<PersonaCountyModel>, IRepository<PermissionStatusModel>)
  href: api/User.Microservice.Controllers.CommonsController.html#User_Microservice_Controllers_CommonsController__ctor_Microsoft_Extensions_Logging_ILogger_User_Microservice_Controllers_CommonsController__User_Microservice_Interfaces_IRepository_User_Microservice_Models_RoleStatusModel__User_Microservice_Interfaces_IRepository_User_Microservice_Models_PersonaStatusModel__User_Microservice_Interfaces_IRepository_User_Microservice_Models_PersonaStateModel__User_Microservice_Interfaces_IRepository_User_Microservice_Models_PersonaCountyModel__User_Microservice_Interfaces_IRepository_User_Microservice_Models_PermissionStatusModel__
  commentId: M:User.Microservice.Controllers.CommonsController.#ctor(Microsoft.Extensions.Logging.ILogger{User.Microservice.Controllers.CommonsController},User.Microservice.Interfaces.IRepository{User.Microservice.Models.RoleStatusModel},User.Microservice.Interfaces.IRepository{User.Microservice.Models.PersonaStatusModel},User.Microservice.Interfaces.IRepository{User.Microservice.Models.PersonaStateModel},User.Microservice.Interfaces.IRepository{User.Microservice.Models.PersonaCountyModel},User.Microservice.Interfaces.IRepository{User.Microservice.Models.PermissionStatusModel})
  name.vb: New(ILogger(Of CommonsController), IRepository(Of RoleStatusModel), IRepository(Of PersonaStatusModel), IRepository(Of PersonaStateModel), IRepository(Of PersonaCountyModel), IRepository(Of PermissionStatusModel))
  fullName: User.Microservice.Controllers.CommonsController.CommonsController(Microsoft.Extensions.Logging.ILogger<User.Microservice.Controllers.CommonsController>, User.Microservice.Interfaces.IRepository<User.Microservice.Models.RoleStatusModel>, User.Microservice.Interfaces.IRepository<User.Microservice.Models.PersonaStatusModel>, User.Microservice.Interfaces.IRepository<User.Microservice.Models.PersonaStateModel>, User.Microservice.Interfaces.IRepository<User.Microservice.Models.PersonaCountyModel>, User.Microservice.Interfaces.IRepository<User.Microservice.Models.PermissionStatusModel>)
  fullName.vb: User.Microservice.Controllers.CommonsController.New(Microsoft.Extensions.Logging.ILogger(Of User.Microservice.Controllers.CommonsController), User.Microservice.Interfaces.IRepository(Of User.Microservice.Models.RoleStatusModel), User.Microservice.Interfaces.IRepository(Of User.Microservice.Models.PersonaStatusModel), User.Microservice.Interfaces.IRepository(Of User.Microservice.Models.PersonaStateModel), User.Microservice.Interfaces.IRepository(Of User.Microservice.Models.PersonaCountyModel), User.Microservice.Interfaces.IRepository(Of User.Microservice.Models.PermissionStatusModel))
  nameWithType: CommonsController.CommonsController(ILogger<CommonsController>, IRepository<RoleStatusModel>, IRepository<PersonaStatusModel>, IRepository<PersonaStateModel>, IRepository<PersonaCountyModel>, IRepository<PermissionStatusModel>)
  nameWithType.vb: CommonsController.New(ILogger(Of CommonsController), IRepository(Of RoleStatusModel), IRepository(Of PersonaStatusModel), IRepository(Of PersonaStateModel), IRepository(Of PersonaCountyModel), IRepository(Of PermissionStatusModel))
- uid: User.Microservice.Controllers.CommonsController.#ctor*
  name: CommonsController
  href: api/User.Microservice.Controllers.CommonsController.html#User_Microservice_Controllers_CommonsController__ctor_
  commentId: Overload:User.Microservice.Controllers.CommonsController.#ctor
  isSpec: "True"
  name.vb: New
  fullName: User.Microservice.Controllers.CommonsController.CommonsController
  fullName.vb: User.Microservice.Controllers.CommonsController.New
  nameWithType: CommonsController.CommonsController
  nameWithType.vb: CommonsController.New
- uid: User.Microservice.Controllers.CommonsController.GetAllPermissionStatus
  name: GetAllPermissionStatus()
  href: api/User.Microservice.Controllers.CommonsController.html#User_Microservice_Controllers_CommonsController_GetAllPermissionStatus
  commentId: M:User.Microservice.Controllers.CommonsController.GetAllPermissionStatus
  fullName: User.Microservice.Controllers.CommonsController.GetAllPermissionStatus()
  nameWithType: CommonsController.GetAllPermissionStatus()
- uid: User.Microservice.Controllers.CommonsController.GetAllPermissionStatus*
  name: GetAllPermissionStatus
  href: api/User.Microservice.Controllers.CommonsController.html#User_Microservice_Controllers_CommonsController_GetAllPermissionStatus_
  commentId: Overload:User.Microservice.Controllers.CommonsController.GetAllPermissionStatus
  isSpec: "True"
  fullName: User.Microservice.Controllers.CommonsController.GetAllPermissionStatus
  nameWithType: CommonsController.GetAllPermissionStatus
- uid: User.Microservice.Controllers.CommonsController.GetAllPersonaCounty
  name: GetAllPersonaCounty()
  href: api/User.Microservice.Controllers.CommonsController.html#User_Microservice_Controllers_CommonsController_GetAllPersonaCounty
  commentId: M:User.Microservice.Controllers.CommonsController.GetAllPersonaCounty
  fullName: User.Microservice.Controllers.CommonsController.GetAllPersonaCounty()
  nameWithType: CommonsController.GetAllPersonaCounty()
- uid: User.Microservice.Controllers.CommonsController.GetAllPersonaCounty*
  name: GetAllPersonaCounty
  href: api/User.Microservice.Controllers.CommonsController.html#User_Microservice_Controllers_CommonsController_GetAllPersonaCounty_
  commentId: Overload:User.Microservice.Controllers.CommonsController.GetAllPersonaCounty
  isSpec: "True"
  fullName: User.Microservice.Controllers.CommonsController.GetAllPersonaCounty
  nameWithType: CommonsController.GetAllPersonaCounty
- uid: User.Microservice.Controllers.CommonsController.GetAllPersonaState
  name: GetAllPersonaState()
  href: api/User.Microservice.Controllers.CommonsController.html#User_Microservice_Controllers_CommonsController_GetAllPersonaState
  commentId: M:User.Microservice.Controllers.CommonsController.GetAllPersonaState
  fullName: User.Microservice.Controllers.CommonsController.GetAllPersonaState()
  nameWithType: CommonsController.GetAllPersonaState()
- uid: User.Microservice.Controllers.CommonsController.GetAllPersonaState*
  name: GetAllPersonaState
  href: api/User.Microservice.Controllers.CommonsController.html#User_Microservice_Controllers_CommonsController_GetAllPersonaState_
  commentId: Overload:User.Microservice.Controllers.CommonsController.GetAllPersonaState
  isSpec: "True"
  fullName: User.Microservice.Controllers.CommonsController.GetAllPersonaState
  nameWithType: CommonsController.GetAllPersonaState
- uid: User.Microservice.Controllers.CommonsController.GetAllPersonaStatus
  name: GetAllPersonaStatus()
  href: api/User.Microservice.Controllers.CommonsController.html#User_Microservice_Controllers_CommonsController_GetAllPersonaStatus
  commentId: M:User.Microservice.Controllers.CommonsController.GetAllPersonaStatus
  fullName: User.Microservice.Controllers.CommonsController.GetAllPersonaStatus()
  nameWithType: CommonsController.GetAllPersonaStatus()
- uid: User.Microservice.Controllers.CommonsController.GetAllPersonaStatus*
  name: GetAllPersonaStatus
  href: api/User.Microservice.Controllers.CommonsController.html#User_Microservice_Controllers_CommonsController_GetAllPersonaStatus_
  commentId: Overload:User.Microservice.Controllers.CommonsController.GetAllPersonaStatus
  isSpec: "True"
  fullName: User.Microservice.Controllers.CommonsController.GetAllPersonaStatus
  nameWithType: CommonsController.GetAllPersonaStatus
- uid: User.Microservice.Controllers.CommonsController.GetAllRoleStatus
  name: GetAllRoleStatus()
  href: api/User.Microservice.Controllers.CommonsController.html#User_Microservice_Controllers_CommonsController_GetAllRoleStatus
  commentId: M:User.Microservice.Controllers.CommonsController.GetAllRoleStatus
  fullName: User.Microservice.Controllers.CommonsController.GetAllRoleStatus()
  nameWithType: CommonsController.GetAllRoleStatus()
- uid: User.Microservice.Controllers.CommonsController.GetAllRoleStatus*
  name: GetAllRoleStatus
  href: api/User.Microservice.Controllers.CommonsController.html#User_Microservice_Controllers_CommonsController_GetAllRoleStatus_
  commentId: Overload:User.Microservice.Controllers.CommonsController.GetAllRoleStatus
  isSpec: "True"
  fullName: User.Microservice.Controllers.CommonsController.GetAllRoleStatus
  nameWithType: CommonsController.GetAllRoleStatus
- uid: User.Microservice.Controllers.PermissionsController
  name: PermissionsController
  href: api/User.Microservice.Controllers.PermissionsController.html
  commentId: T:User.Microservice.Controllers.PermissionsController
  fullName: User.Microservice.Controllers.PermissionsController
  nameWithType: PermissionsController
- uid: User.Microservice.Controllers.PermissionsController.#ctor(User.Microservice.Interfaces.IPermissionsRepository,Microsoft.Extensions.Logging.ILogger{User.Microservice.Controllers.PermissionsController})
  name: PermissionsController(IPermissionsRepository, ILogger<PermissionsController>)
  href: api/User.Microservice.Controllers.PermissionsController.html#User_Microservice_Controllers_PermissionsController__ctor_User_Microservice_Interfaces_IPermissionsRepository_Microsoft_Extensions_Logging_ILogger_User_Microservice_Controllers_PermissionsController__
  commentId: M:User.Microservice.Controllers.PermissionsController.#ctor(User.Microservice.Interfaces.IPermissionsRepository,Microsoft.Extensions.Logging.ILogger{User.Microservice.Controllers.PermissionsController})
  name.vb: New(IPermissionsRepository, ILogger(Of PermissionsController))
  fullName: User.Microservice.Controllers.PermissionsController.PermissionsController(User.Microservice.Interfaces.IPermissionsRepository, Microsoft.Extensions.Logging.ILogger<User.Microservice.Controllers.PermissionsController>)
  fullName.vb: User.Microservice.Controllers.PermissionsController.New(User.Microservice.Interfaces.IPermissionsRepository, Microsoft.Extensions.Logging.ILogger(Of User.Microservice.Controllers.PermissionsController))
  nameWithType: PermissionsController.PermissionsController(IPermissionsRepository, ILogger<PermissionsController>)
  nameWithType.vb: PermissionsController.New(IPermissionsRepository, ILogger(Of PermissionsController))
- uid: User.Microservice.Controllers.PermissionsController.#ctor*
  name: PermissionsController
  href: api/User.Microservice.Controllers.PermissionsController.html#User_Microservice_Controllers_PermissionsController__ctor_
  commentId: Overload:User.Microservice.Controllers.PermissionsController.#ctor
  isSpec: "True"
  name.vb: New
  fullName: User.Microservice.Controllers.PermissionsController.PermissionsController
  fullName.vb: User.Microservice.Controllers.PermissionsController.New
  nameWithType: PermissionsController.PermissionsController
  nameWithType.vb: PermissionsController.New
- uid: User.Microservice.Controllers.PermissionsController.AddPermission(User.Microservice.Models.PermissionsModel)
  name: AddPermission(PermissionsModel)
  href: api/User.Microservice.Controllers.PermissionsController.html#User_Microservice_Controllers_PermissionsController_AddPermission_User_Microservice_Models_PermissionsModel_
  commentId: M:User.Microservice.Controllers.PermissionsController.AddPermission(User.Microservice.Models.PermissionsModel)
  fullName: User.Microservice.Controllers.PermissionsController.AddPermission(User.Microservice.Models.PermissionsModel)
  nameWithType: PermissionsController.AddPermission(PermissionsModel)
- uid: User.Microservice.Controllers.PermissionsController.AddPermission*
  name: AddPermission
  href: api/User.Microservice.Controllers.PermissionsController.html#User_Microservice_Controllers_PermissionsController_AddPermission_
  commentId: Overload:User.Microservice.Controllers.PermissionsController.AddPermission
  isSpec: "True"
  fullName: User.Microservice.Controllers.PermissionsController.AddPermission
  nameWithType: PermissionsController.AddPermission
- uid: User.Microservice.Controllers.PermissionsController.DeletePermission(System.Int32)
  name: DeletePermission(int)
  href: api/User.Microservice.Controllers.PermissionsController.html#User_Microservice_Controllers_PermissionsController_DeletePermission_System_Int32_
  commentId: M:User.Microservice.Controllers.PermissionsController.DeletePermission(System.Int32)
  name.vb: DeletePermission(Integer)
  fullName: User.Microservice.Controllers.PermissionsController.DeletePermission(int)
  fullName.vb: User.Microservice.Controllers.PermissionsController.DeletePermission(Integer)
  nameWithType: PermissionsController.DeletePermission(int)
  nameWithType.vb: PermissionsController.DeletePermission(Integer)
- uid: User.Microservice.Controllers.PermissionsController.DeletePermission*
  name: DeletePermission
  href: api/User.Microservice.Controllers.PermissionsController.html#User_Microservice_Controllers_PermissionsController_DeletePermission_
  commentId: Overload:User.Microservice.Controllers.PermissionsController.DeletePermission
  isSpec: "True"
  fullName: User.Microservice.Controllers.PermissionsController.DeletePermission
  nameWithType: PermissionsController.DeletePermission
- uid: User.Microservice.Controllers.PermissionsController.GetAllPermissions
  name: GetAllPermissions()
  href: api/User.Microservice.Controllers.PermissionsController.html#User_Microservice_Controllers_PermissionsController_GetAllPermissions
  commentId: M:User.Microservice.Controllers.PermissionsController.GetAllPermissions
  fullName: User.Microservice.Controllers.PermissionsController.GetAllPermissions()
  nameWithType: PermissionsController.GetAllPermissions()
- uid: User.Microservice.Controllers.PermissionsController.GetAllPermissions*
  name: GetAllPermissions
  href: api/User.Microservice.Controllers.PermissionsController.html#User_Microservice_Controllers_PermissionsController_GetAllPermissions_
  commentId: Overload:User.Microservice.Controllers.PermissionsController.GetAllPermissions
  isSpec: "True"
  fullName: User.Microservice.Controllers.PermissionsController.GetAllPermissions
  nameWithType: PermissionsController.GetAllPermissions
- uid: User.Microservice.Controllers.PermissionsController.GetPermissionById(System.Int32)
  name: GetPermissionById(int)
  href: api/User.Microservice.Controllers.PermissionsController.html#User_Microservice_Controllers_PermissionsController_GetPermissionById_System_Int32_
  commentId: M:User.Microservice.Controllers.PermissionsController.GetPermissionById(System.Int32)
  name.vb: GetPermissionById(Integer)
  fullName: User.Microservice.Controllers.PermissionsController.GetPermissionById(int)
  fullName.vb: User.Microservice.Controllers.PermissionsController.GetPermissionById(Integer)
  nameWithType: PermissionsController.GetPermissionById(int)
  nameWithType.vb: PermissionsController.GetPermissionById(Integer)
- uid: User.Microservice.Controllers.PermissionsController.GetPermissionById*
  name: GetPermissionById
  href: api/User.Microservice.Controllers.PermissionsController.html#User_Microservice_Controllers_PermissionsController_GetPermissionById_
  commentId: Overload:User.Microservice.Controllers.PermissionsController.GetPermissionById
  isSpec: "True"
  fullName: User.Microservice.Controllers.PermissionsController.GetPermissionById
  nameWithType: PermissionsController.GetPermissionById
- uid: User.Microservice.Controllers.PermissionsController.UpdatePermission(System.Int32,User.Microservice.Models.PermissionsModel)
  name: UpdatePermission(int, PermissionsModel)
  href: api/User.Microservice.Controllers.PermissionsController.html#User_Microservice_Controllers_PermissionsController_UpdatePermission_System_Int32_User_Microservice_Models_PermissionsModel_
  commentId: M:User.Microservice.Controllers.PermissionsController.UpdatePermission(System.Int32,User.Microservice.Models.PermissionsModel)
  name.vb: UpdatePermission(Integer, PermissionsModel)
  fullName: User.Microservice.Controllers.PermissionsController.UpdatePermission(int, User.Microservice.Models.PermissionsModel)
  fullName.vb: User.Microservice.Controllers.PermissionsController.UpdatePermission(Integer, User.Microservice.Models.PermissionsModel)
  nameWithType: PermissionsController.UpdatePermission(int, PermissionsModel)
  nameWithType.vb: PermissionsController.UpdatePermission(Integer, PermissionsModel)
- uid: User.Microservice.Controllers.PermissionsController.UpdatePermission*
  name: UpdatePermission
  href: api/User.Microservice.Controllers.PermissionsController.html#User_Microservice_Controllers_PermissionsController_UpdatePermission_
  commentId: Overload:User.Microservice.Controllers.PermissionsController.UpdatePermission
  isSpec: "True"
  fullName: User.Microservice.Controllers.PermissionsController.UpdatePermission
  nameWithType: PermissionsController.UpdatePermission
- uid: User.Microservice.Controllers.PermissionsMappingsController
  name: PermissionsMappingsController
  href: api/User.Microservice.Controllers.PermissionsMappingsController.html
  commentId: T:User.Microservice.Controllers.PermissionsMappingsController
  fullName: User.Microservice.Controllers.PermissionsMappingsController
  nameWithType: PermissionsMappingsController
- uid: User.Microservice.Controllers.PermissionsMappingsController.#ctor(User.Microservice.Repositories.PermissionsMappingRepository,Microsoft.Extensions.Logging.ILogger{User.Microservice.Controllers.PermissionsMappingsController})
  name: PermissionsMappingsController(PermissionsMappingRepository, ILogger<PermissionsMappingsController>)
  href: api/User.Microservice.Controllers.PermissionsMappingsController.html#User_Microservice_Controllers_PermissionsMappingsController__ctor_User_Microservice_Repositories_PermissionsMappingRepository_Microsoft_Extensions_Logging_ILogger_User_Microservice_Controllers_PermissionsMappingsController__
  commentId: M:User.Microservice.Controllers.PermissionsMappingsController.#ctor(User.Microservice.Repositories.PermissionsMappingRepository,Microsoft.Extensions.Logging.ILogger{User.Microservice.Controllers.PermissionsMappingsController})
  name.vb: New(PermissionsMappingRepository, ILogger(Of PermissionsMappingsController))
  fullName: User.Microservice.Controllers.PermissionsMappingsController.PermissionsMappingsController(User.Microservice.Repositories.PermissionsMappingRepository, Microsoft.Extensions.Logging.ILogger<User.Microservice.Controllers.PermissionsMappingsController>)
  fullName.vb: User.Microservice.Controllers.PermissionsMappingsController.New(User.Microservice.Repositories.PermissionsMappingRepository, Microsoft.Extensions.Logging.ILogger(Of User.Microservice.Controllers.PermissionsMappingsController))
  nameWithType: PermissionsMappingsController.PermissionsMappingsController(PermissionsMappingRepository, ILogger<PermissionsMappingsController>)
  nameWithType.vb: PermissionsMappingsController.New(PermissionsMappingRepository, ILogger(Of PermissionsMappingsController))
- uid: User.Microservice.Controllers.PermissionsMappingsController.#ctor*
  name: PermissionsMappingsController
  href: api/User.Microservice.Controllers.PermissionsMappingsController.html#User_Microservice_Controllers_PermissionsMappingsController__ctor_
  commentId: Overload:User.Microservice.Controllers.PermissionsMappingsController.#ctor
  isSpec: "True"
  name.vb: New
  fullName: User.Microservice.Controllers.PermissionsMappingsController.PermissionsMappingsController
  fullName.vb: User.Microservice.Controllers.PermissionsMappingsController.New
  nameWithType: PermissionsMappingsController.PermissionsMappingsController
  nameWithType.vb: PermissionsMappingsController.New
- uid: User.Microservice.Controllers.PermissionsMappingsController.AddPermissionMapping(User.Microservice.Models.PermissionsMappingModel)
  name: AddPermissionMapping(PermissionsMappingModel)
  href: api/User.Microservice.Controllers.PermissionsMappingsController.html#User_Microservice_Controllers_PermissionsMappingsController_AddPermissionMapping_User_Microservice_Models_PermissionsMappingModel_
  commentId: M:User.Microservice.Controllers.PermissionsMappingsController.AddPermissionMapping(User.Microservice.Models.PermissionsMappingModel)
  fullName: User.Microservice.Controllers.PermissionsMappingsController.AddPermissionMapping(User.Microservice.Models.PermissionsMappingModel)
  nameWithType: PermissionsMappingsController.AddPermissionMapping(PermissionsMappingModel)
- uid: User.Microservice.Controllers.PermissionsMappingsController.AddPermissionMapping*
  name: AddPermissionMapping
  href: api/User.Microservice.Controllers.PermissionsMappingsController.html#User_Microservice_Controllers_PermissionsMappingsController_AddPermissionMapping_
  commentId: Overload:User.Microservice.Controllers.PermissionsMappingsController.AddPermissionMapping
  isSpec: "True"
  fullName: User.Microservice.Controllers.PermissionsMappingsController.AddPermissionMapping
  nameWithType: PermissionsMappingsController.AddPermissionMapping
- uid: User.Microservice.Controllers.PermissionsMappingsController.DeletePermissionMapping(System.Int32)
  name: DeletePermissionMapping(int)
  href: api/User.Microservice.Controllers.PermissionsMappingsController.html#User_Microservice_Controllers_PermissionsMappingsController_DeletePermissionMapping_System_Int32_
  commentId: M:User.Microservice.Controllers.PermissionsMappingsController.DeletePermissionMapping(System.Int32)
  name.vb: DeletePermissionMapping(Integer)
  fullName: User.Microservice.Controllers.PermissionsMappingsController.DeletePermissionMapping(int)
  fullName.vb: User.Microservice.Controllers.PermissionsMappingsController.DeletePermissionMapping(Integer)
  nameWithType: PermissionsMappingsController.DeletePermissionMapping(int)
  nameWithType.vb: PermissionsMappingsController.DeletePermissionMapping(Integer)
- uid: User.Microservice.Controllers.PermissionsMappingsController.DeletePermissionMapping*
  name: DeletePermissionMapping
  href: api/User.Microservice.Controllers.PermissionsMappingsController.html#User_Microservice_Controllers_PermissionsMappingsController_DeletePermissionMapping_
  commentId: Overload:User.Microservice.Controllers.PermissionsMappingsController.DeletePermissionMapping
  isSpec: "True"
  fullName: User.Microservice.Controllers.PermissionsMappingsController.DeletePermissionMapping
  nameWithType: PermissionsMappingsController.DeletePermissionMapping
- uid: User.Microservice.Controllers.PermissionsMappingsController.GetAllPermissionMapping
  name: GetAllPermissionMapping()
  href: api/User.Microservice.Controllers.PermissionsMappingsController.html#User_Microservice_Controllers_PermissionsMappingsController_GetAllPermissionMapping
  commentId: M:User.Microservice.Controllers.PermissionsMappingsController.GetAllPermissionMapping
  fullName: User.Microservice.Controllers.PermissionsMappingsController.GetAllPermissionMapping()
  nameWithType: PermissionsMappingsController.GetAllPermissionMapping()
- uid: User.Microservice.Controllers.PermissionsMappingsController.GetAllPermissionMapping*
  name: GetAllPermissionMapping
  href: api/User.Microservice.Controllers.PermissionsMappingsController.html#User_Microservice_Controllers_PermissionsMappingsController_GetAllPermissionMapping_
  commentId: Overload:User.Microservice.Controllers.PermissionsMappingsController.GetAllPermissionMapping
  isSpec: "True"
  fullName: User.Microservice.Controllers.PermissionsMappingsController.GetAllPermissionMapping
  nameWithType: PermissionsMappingsController.GetAllPermissionMapping
- uid: User.Microservice.Controllers.PermissionsMappingsController.GetPermissionMappingById(System.Int32,System.Int32,System.Int32)
  name: GetPermissionMappingById(int, int, int)
  href: api/User.Microservice.Controllers.PermissionsMappingsController.html#User_Microservice_Controllers_PermissionsMappingsController_GetPermissionMappingById_System_Int32_System_Int32_System_Int32_
  commentId: M:User.Microservice.Controllers.PermissionsMappingsController.GetPermissionMappingById(System.Int32,System.Int32,System.Int32)
  name.vb: GetPermissionMappingById(Integer, Integer, Integer)
  fullName: User.Microservice.Controllers.PermissionsMappingsController.GetPermissionMappingById(int, int, int)
  fullName.vb: User.Microservice.Controllers.PermissionsMappingsController.GetPermissionMappingById(Integer, Integer, Integer)
  nameWithType: PermissionsMappingsController.GetPermissionMappingById(int, int, int)
  nameWithType.vb: PermissionsMappingsController.GetPermissionMappingById(Integer, Integer, Integer)
- uid: User.Microservice.Controllers.PermissionsMappingsController.GetPermissionMappingById*
  name: GetPermissionMappingById
  href: api/User.Microservice.Controllers.PermissionsMappingsController.html#User_Microservice_Controllers_PermissionsMappingsController_GetPermissionMappingById_
  commentId: Overload:User.Microservice.Controllers.PermissionsMappingsController.GetPermissionMappingById
  isSpec: "True"
  fullName: User.Microservice.Controllers.PermissionsMappingsController.GetPermissionMappingById
  nameWithType: PermissionsMappingsController.GetPermissionMappingById
- uid: User.Microservice.Controllers.PermissionsMappingsController.IsPermissionMappingExists(User.Microservice.Models.PermissionsMappingModel)
  name: IsPermissionMappingExists(PermissionsMappingModel)
  href: api/User.Microservice.Controllers.PermissionsMappingsController.html#User_Microservice_Controllers_PermissionsMappingsController_IsPermissionMappingExists_User_Microservice_Models_PermissionsMappingModel_
  commentId: M:User.Microservice.Controllers.PermissionsMappingsController.IsPermissionMappingExists(User.Microservice.Models.PermissionsMappingModel)
  fullName: User.Microservice.Controllers.PermissionsMappingsController.IsPermissionMappingExists(User.Microservice.Models.PermissionsMappingModel)
  nameWithType: PermissionsMappingsController.IsPermissionMappingExists(PermissionsMappingModel)
- uid: User.Microservice.Controllers.PermissionsMappingsController.IsPermissionMappingExists*
  name: IsPermissionMappingExists
  href: api/User.Microservice.Controllers.PermissionsMappingsController.html#User_Microservice_Controllers_PermissionsMappingsController_IsPermissionMappingExists_
  commentId: Overload:User.Microservice.Controllers.PermissionsMappingsController.IsPermissionMappingExists
  isSpec: "True"
  fullName: User.Microservice.Controllers.PermissionsMappingsController.IsPermissionMappingExists
  nameWithType: PermissionsMappingsController.IsPermissionMappingExists
- uid: User.Microservice.Controllers.PermissionsMappingsController.UpdatePermissionMapping(User.Microservice.Models.PermissionsMappingModel)
  name: UpdatePermissionMapping(PermissionsMappingModel)
  href: api/User.Microservice.Controllers.PermissionsMappingsController.html#User_Microservice_Controllers_PermissionsMappingsController_UpdatePermissionMapping_User_Microservice_Models_PermissionsMappingModel_
  commentId: M:User.Microservice.Controllers.PermissionsMappingsController.UpdatePermissionMapping(User.Microservice.Models.PermissionsMappingModel)
  fullName: User.Microservice.Controllers.PermissionsMappingsController.UpdatePermissionMapping(User.Microservice.Models.PermissionsMappingModel)
  nameWithType: PermissionsMappingsController.UpdatePermissionMapping(PermissionsMappingModel)
- uid: User.Microservice.Controllers.PermissionsMappingsController.UpdatePermissionMapping*
  name: UpdatePermissionMapping
  href: api/User.Microservice.Controllers.PermissionsMappingsController.html#User_Microservice_Controllers_PermissionsMappingsController_UpdatePermissionMapping_
  commentId: Overload:User.Microservice.Controllers.PermissionsMappingsController.UpdatePermissionMapping
  isSpec: "True"
  fullName: User.Microservice.Controllers.PermissionsMappingsController.UpdatePermissionMapping
  nameWithType: PermissionsMappingsController.UpdatePermissionMapping
- uid: User.Microservice.Controllers.PersonasController
  name: PersonasController
  href: api/User.Microservice.Controllers.PersonasController.html
  commentId: T:User.Microservice.Controllers.PersonasController
  fullName: User.Microservice.Controllers.PersonasController
  nameWithType: PersonasController
- uid: User.Microservice.Controllers.PersonasController.#ctor(User.Microservice.Interfaces.IPersonaRepository,Microsoft.Extensions.Logging.ILogger{User.Microservice.Controllers.PersonasController})
  name: PersonasController(IPersonaRepository, ILogger<PersonasController>)
  href: api/User.Microservice.Controllers.PersonasController.html#User_Microservice_Controllers_PersonasController__ctor_User_Microservice_Interfaces_IPersonaRepository_Microsoft_Extensions_Logging_ILogger_User_Microservice_Controllers_PersonasController__
  commentId: M:User.Microservice.Controllers.PersonasController.#ctor(User.Microservice.Interfaces.IPersonaRepository,Microsoft.Extensions.Logging.ILogger{User.Microservice.Controllers.PersonasController})
  name.vb: New(IPersonaRepository, ILogger(Of PersonasController))
  fullName: User.Microservice.Controllers.PersonasController.PersonasController(User.Microservice.Interfaces.IPersonaRepository, Microsoft.Extensions.Logging.ILogger<User.Microservice.Controllers.PersonasController>)
  fullName.vb: User.Microservice.Controllers.PersonasController.New(User.Microservice.Interfaces.IPersonaRepository, Microsoft.Extensions.Logging.ILogger(Of User.Microservice.Controllers.PersonasController))
  nameWithType: PersonasController.PersonasController(IPersonaRepository, ILogger<PersonasController>)
  nameWithType.vb: PersonasController.New(IPersonaRepository, ILogger(Of PersonasController))
- uid: User.Microservice.Controllers.PersonasController.#ctor*
  name: PersonasController
  href: api/User.Microservice.Controllers.PersonasController.html#User_Microservice_Controllers_PersonasController__ctor_
  commentId: Overload:User.Microservice.Controllers.PersonasController.#ctor
  isSpec: "True"
  name.vb: New
  fullName: User.Microservice.Controllers.PersonasController.PersonasController
  fullName.vb: User.Microservice.Controllers.PersonasController.New
  nameWithType: PersonasController.PersonasController
  nameWithType.vb: PersonasController.New
- uid: User.Microservice.Controllers.PersonasController.AddPersona(User.Microservice.Models.PersonaModel)
  name: AddPersona(PersonaModel)
  href: api/User.Microservice.Controllers.PersonasController.html#User_Microservice_Controllers_PersonasController_AddPersona_User_Microservice_Models_PersonaModel_
  commentId: M:User.Microservice.Controllers.PersonasController.AddPersona(User.Microservice.Models.PersonaModel)
  fullName: User.Microservice.Controllers.PersonasController.AddPersona(User.Microservice.Models.PersonaModel)
  nameWithType: PersonasController.AddPersona(PersonaModel)
- uid: User.Microservice.Controllers.PersonasController.AddPersona*
  name: AddPersona
  href: api/User.Microservice.Controllers.PersonasController.html#User_Microservice_Controllers_PersonasController_AddPersona_
  commentId: Overload:User.Microservice.Controllers.PersonasController.AddPersona
  isSpec: "True"
  fullName: User.Microservice.Controllers.PersonasController.AddPersona
  nameWithType: PersonasController.AddPersona
- uid: User.Microservice.Controllers.PersonasController.DeletePersona(System.Int32)
  name: DeletePersona(int)
  href: api/User.Microservice.Controllers.PersonasController.html#User_Microservice_Controllers_PersonasController_DeletePersona_System_Int32_
  commentId: M:User.Microservice.Controllers.PersonasController.DeletePersona(System.Int32)
  name.vb: DeletePersona(Integer)
  fullName: User.Microservice.Controllers.PersonasController.DeletePersona(int)
  fullName.vb: User.Microservice.Controllers.PersonasController.DeletePersona(Integer)
  nameWithType: PersonasController.DeletePersona(int)
  nameWithType.vb: PersonasController.DeletePersona(Integer)
- uid: User.Microservice.Controllers.PersonasController.DeletePersona*
  name: DeletePersona
  href: api/User.Microservice.Controllers.PersonasController.html#User_Microservice_Controllers_PersonasController_DeletePersona_
  commentId: Overload:User.Microservice.Controllers.PersonasController.DeletePersona
  isSpec: "True"
  fullName: User.Microservice.Controllers.PersonasController.DeletePersona
  nameWithType: PersonasController.DeletePersona
- uid: User.Microservice.Controllers.PersonasController.GetAllPersona
  name: GetAllPersona()
  href: api/User.Microservice.Controllers.PersonasController.html#User_Microservice_Controllers_PersonasController_GetAllPersona
  commentId: M:User.Microservice.Controllers.PersonasController.GetAllPersona
  fullName: User.Microservice.Controllers.PersonasController.GetAllPersona()
  nameWithType: PersonasController.GetAllPersona()
- uid: User.Microservice.Controllers.PersonasController.GetAllPersona*
  name: GetAllPersona
  href: api/User.Microservice.Controllers.PersonasController.html#User_Microservice_Controllers_PersonasController_GetAllPersona_
  commentId: Overload:User.Microservice.Controllers.PersonasController.GetAllPersona
  isSpec: "True"
  fullName: User.Microservice.Controllers.PersonasController.GetAllPersona
  nameWithType: PersonasController.GetAllPersona
- uid: User.Microservice.Controllers.PersonasController.GetPersonaById(System.String)
  name: GetPersonaById(string)
  href: api/User.Microservice.Controllers.PersonasController.html#User_Microservice_Controllers_PersonasController_GetPersonaById_System_String_
  commentId: M:User.Microservice.Controllers.PersonasController.GetPersonaById(System.String)
  name.vb: GetPersonaById(String)
  fullName: User.Microservice.Controllers.PersonasController.GetPersonaById(string)
  fullName.vb: User.Microservice.Controllers.PersonasController.GetPersonaById(String)
  nameWithType: PersonasController.GetPersonaById(string)
  nameWithType.vb: PersonasController.GetPersonaById(String)
- uid: User.Microservice.Controllers.PersonasController.GetPersonaById*
  name: GetPersonaById
  href: api/User.Microservice.Controllers.PersonasController.html#User_Microservice_Controllers_PersonasController_GetPersonaById_
  commentId: Overload:User.Microservice.Controllers.PersonasController.GetPersonaById
  isSpec: "True"
  fullName: User.Microservice.Controllers.PersonasController.GetPersonaById
  nameWithType: PersonasController.GetPersonaById
- uid: User.Microservice.Controllers.PersonasController.UpdatePersona(System.String,User.Microservice.Models.PersonaModel)
  name: UpdatePersona(string, PersonaModel)
  href: api/User.Microservice.Controllers.PersonasController.html#User_Microservice_Controllers_PersonasController_UpdatePersona_System_String_User_Microservice_Models_PersonaModel_
  commentId: M:User.Microservice.Controllers.PersonasController.UpdatePersona(System.String,User.Microservice.Models.PersonaModel)
  name.vb: UpdatePersona(String, PersonaModel)
  fullName: User.Microservice.Controllers.PersonasController.UpdatePersona(string, User.Microservice.Models.PersonaModel)
  fullName.vb: User.Microservice.Controllers.PersonasController.UpdatePersona(String, User.Microservice.Models.PersonaModel)
  nameWithType: PersonasController.UpdatePersona(string, PersonaModel)
  nameWithType.vb: PersonasController.UpdatePersona(String, PersonaModel)
- uid: User.Microservice.Controllers.PersonasController.UpdatePersona*
  name: UpdatePersona
  href: api/User.Microservice.Controllers.PersonasController.html#User_Microservice_Controllers_PersonasController_UpdatePersona_
  commentId: Overload:User.Microservice.Controllers.PersonasController.UpdatePersona
  isSpec: "True"
  fullName: User.Microservice.Controllers.PersonasController.UpdatePersona
  nameWithType: PersonasController.UpdatePersona
- uid: User.Microservice.Controllers.PortalsController
  name: PortalsController
  href: api/User.Microservice.Controllers.PortalsController.html
  commentId: T:User.Microservice.Controllers.PortalsController
  fullName: User.Microservice.Controllers.PortalsController
  nameWithType: PortalsController
- uid: User.Microservice.Controllers.PortalsController.#ctor(User.Microservice.Repositories.PortalRepository,Microsoft.Extensions.Logging.ILogger{User.Microservice.Controllers.PortalsController})
  name: PortalsController(PortalRepository, ILogger<PortalsController>)
  href: api/User.Microservice.Controllers.PortalsController.html#User_Microservice_Controllers_PortalsController__ctor_User_Microservice_Repositories_PortalRepository_Microsoft_Extensions_Logging_ILogger_User_Microservice_Controllers_PortalsController__
  commentId: M:User.Microservice.Controllers.PortalsController.#ctor(User.Microservice.Repositories.PortalRepository,Microsoft.Extensions.Logging.ILogger{User.Microservice.Controllers.PortalsController})
  name.vb: New(PortalRepository, ILogger(Of PortalsController))
  fullName: User.Microservice.Controllers.PortalsController.PortalsController(User.Microservice.Repositories.PortalRepository, Microsoft.Extensions.Logging.ILogger<User.Microservice.Controllers.PortalsController>)
  fullName.vb: User.Microservice.Controllers.PortalsController.New(User.Microservice.Repositories.PortalRepository, Microsoft.Extensions.Logging.ILogger(Of User.Microservice.Controllers.PortalsController))
  nameWithType: PortalsController.PortalsController(PortalRepository, ILogger<PortalsController>)
  nameWithType.vb: PortalsController.New(PortalRepository, ILogger(Of PortalsController))
- uid: User.Microservice.Controllers.PortalsController.#ctor*
  name: PortalsController
  href: api/User.Microservice.Controllers.PortalsController.html#User_Microservice_Controllers_PortalsController__ctor_
  commentId: Overload:User.Microservice.Controllers.PortalsController.#ctor
  isSpec: "True"
  name.vb: New
  fullName: User.Microservice.Controllers.PortalsController.PortalsController
  fullName.vb: User.Microservice.Controllers.PortalsController.New
  nameWithType: PortalsController.PortalsController
  nameWithType.vb: PortalsController.New
- uid: User.Microservice.Controllers.PortalsController.AddPortal(User.Microservice.Models.PortalModel)
  name: AddPortal(PortalModel)
  href: api/User.Microservice.Controllers.PortalsController.html#User_Microservice_Controllers_PortalsController_AddPortal_User_Microservice_Models_PortalModel_
  commentId: M:User.Microservice.Controllers.PortalsController.AddPortal(User.Microservice.Models.PortalModel)
  fullName: User.Microservice.Controllers.PortalsController.AddPortal(User.Microservice.Models.PortalModel)
  nameWithType: PortalsController.AddPortal(PortalModel)
- uid: User.Microservice.Controllers.PortalsController.AddPortal*
  name: AddPortal
  href: api/User.Microservice.Controllers.PortalsController.html#User_Microservice_Controllers_PortalsController_AddPortal_
  commentId: Overload:User.Microservice.Controllers.PortalsController.AddPortal
  isSpec: "True"
  fullName: User.Microservice.Controllers.PortalsController.AddPortal
  nameWithType: PortalsController.AddPortal
- uid: User.Microservice.Controllers.PortalsController.DeletePortal(System.Int32)
  name: DeletePortal(int)
  href: api/User.Microservice.Controllers.PortalsController.html#User_Microservice_Controllers_PortalsController_DeletePortal_System_Int32_
  commentId: M:User.Microservice.Controllers.PortalsController.DeletePortal(System.Int32)
  name.vb: DeletePortal(Integer)
  fullName: User.Microservice.Controllers.PortalsController.DeletePortal(int)
  fullName.vb: User.Microservice.Controllers.PortalsController.DeletePortal(Integer)
  nameWithType: PortalsController.DeletePortal(int)
  nameWithType.vb: PortalsController.DeletePortal(Integer)
- uid: User.Microservice.Controllers.PortalsController.DeletePortal*
  name: DeletePortal
  href: api/User.Microservice.Controllers.PortalsController.html#User_Microservice_Controllers_PortalsController_DeletePortal_
  commentId: Overload:User.Microservice.Controllers.PortalsController.DeletePortal
  isSpec: "True"
  fullName: User.Microservice.Controllers.PortalsController.DeletePortal
  nameWithType: PortalsController.DeletePortal
- uid: User.Microservice.Controllers.PortalsController.GetAllPortals
  name: GetAllPortals()
  href: api/User.Microservice.Controllers.PortalsController.html#User_Microservice_Controllers_PortalsController_GetAllPortals
  commentId: M:User.Microservice.Controllers.PortalsController.GetAllPortals
  fullName: User.Microservice.Controllers.PortalsController.GetAllPortals()
  nameWithType: PortalsController.GetAllPortals()
- uid: User.Microservice.Controllers.PortalsController.GetAllPortals*
  name: GetAllPortals
  href: api/User.Microservice.Controllers.PortalsController.html#User_Microservice_Controllers_PortalsController_GetAllPortals_
  commentId: Overload:User.Microservice.Controllers.PortalsController.GetAllPortals
  isSpec: "True"
  fullName: User.Microservice.Controllers.PortalsController.GetAllPortals
  nameWithType: PortalsController.GetAllPortals
- uid: User.Microservice.Controllers.PortalsController.GetPortalById(System.Int32)
  name: GetPortalById(int)
  href: api/User.Microservice.Controllers.PortalsController.html#User_Microservice_Controllers_PortalsController_GetPortalById_System_Int32_
  commentId: M:User.Microservice.Controllers.PortalsController.GetPortalById(System.Int32)
  name.vb: GetPortalById(Integer)
  fullName: User.Microservice.Controllers.PortalsController.GetPortalById(int)
  fullName.vb: User.Microservice.Controllers.PortalsController.GetPortalById(Integer)
  nameWithType: PortalsController.GetPortalById(int)
  nameWithType.vb: PortalsController.GetPortalById(Integer)
- uid: User.Microservice.Controllers.PortalsController.GetPortalById*
  name: GetPortalById
  href: api/User.Microservice.Controllers.PortalsController.html#User_Microservice_Controllers_PortalsController_GetPortalById_
  commentId: Overload:User.Microservice.Controllers.PortalsController.GetPortalById
  isSpec: "True"
  fullName: User.Microservice.Controllers.PortalsController.GetPortalById
  nameWithType: PortalsController.GetPortalById
- uid: User.Microservice.Controllers.PortalsController.IsPortalExists(User.Microservice.Models.PortalModel)
  name: IsPortalExists(PortalModel)
  href: api/User.Microservice.Controllers.PortalsController.html#User_Microservice_Controllers_PortalsController_IsPortalExists_User_Microservice_Models_PortalModel_
  commentId: M:User.Microservice.Controllers.PortalsController.IsPortalExists(User.Microservice.Models.PortalModel)
  fullName: User.Microservice.Controllers.PortalsController.IsPortalExists(User.Microservice.Models.PortalModel)
  nameWithType: PortalsController.IsPortalExists(PortalModel)
- uid: User.Microservice.Controllers.PortalsController.IsPortalExists*
  name: IsPortalExists
  href: api/User.Microservice.Controllers.PortalsController.html#User_Microservice_Controllers_PortalsController_IsPortalExists_
  commentId: Overload:User.Microservice.Controllers.PortalsController.IsPortalExists
  isSpec: "True"
  fullName: User.Microservice.Controllers.PortalsController.IsPortalExists
  nameWithType: PortalsController.IsPortalExists
- uid: User.Microservice.Controllers.PortalsController.UpdatePortal(System.String,User.Microservice.Models.PortalModel)
  name: UpdatePortal(string, PortalModel)
  href: api/User.Microservice.Controllers.PortalsController.html#User_Microservice_Controllers_PortalsController_UpdatePortal_System_String_User_Microservice_Models_PortalModel_
  commentId: M:User.Microservice.Controllers.PortalsController.UpdatePortal(System.String,User.Microservice.Models.PortalModel)
  name.vb: UpdatePortal(String, PortalModel)
  fullName: User.Microservice.Controllers.PortalsController.UpdatePortal(string, User.Microservice.Models.PortalModel)
  fullName.vb: User.Microservice.Controllers.PortalsController.UpdatePortal(String, User.Microservice.Models.PortalModel)
  nameWithType: PortalsController.UpdatePortal(string, PortalModel)
  nameWithType.vb: PortalsController.UpdatePortal(String, PortalModel)
- uid: User.Microservice.Controllers.PortalsController.UpdatePortal*
  name: UpdatePortal
  href: api/User.Microservice.Controllers.PortalsController.html#User_Microservice_Controllers_PortalsController_UpdatePortal_
  commentId: Overload:User.Microservice.Controllers.PortalsController.UpdatePortal
  isSpec: "True"
  fullName: User.Microservice.Controllers.PortalsController.UpdatePortal
  nameWithType: PortalsController.UpdatePortal
- uid: User.Microservice.Controllers.RolesController
  name: RolesController
  href: api/User.Microservice.Controllers.RolesController.html
  commentId: T:User.Microservice.Controllers.RolesController
  fullName: User.Microservice.Controllers.RolesController
  nameWithType: RolesController
- uid: User.Microservice.Controllers.RolesController.#ctor(User.Microservice.Interfaces.IRolesRepository,Microsoft.Extensions.Logging.ILogger{User.Microservice.Controllers.RolesController})
  name: RolesController(IRolesRepository, ILogger<RolesController>)
  href: api/User.Microservice.Controllers.RolesController.html#User_Microservice_Controllers_RolesController__ctor_User_Microservice_Interfaces_IRolesRepository_Microsoft_Extensions_Logging_ILogger_User_Microservice_Controllers_RolesController__
  commentId: M:User.Microservice.Controllers.RolesController.#ctor(User.Microservice.Interfaces.IRolesRepository,Microsoft.Extensions.Logging.ILogger{User.Microservice.Controllers.RolesController})
  name.vb: New(IRolesRepository, ILogger(Of RolesController))
  fullName: User.Microservice.Controllers.RolesController.RolesController(User.Microservice.Interfaces.IRolesRepository, Microsoft.Extensions.Logging.ILogger<User.Microservice.Controllers.RolesController>)
  fullName.vb: User.Microservice.Controllers.RolesController.New(User.Microservice.Interfaces.IRolesRepository, Microsoft.Extensions.Logging.ILogger(Of User.Microservice.Controllers.RolesController))
  nameWithType: RolesController.RolesController(IRolesRepository, ILogger<RolesController>)
  nameWithType.vb: RolesController.New(IRolesRepository, ILogger(Of RolesController))
- uid: User.Microservice.Controllers.RolesController.#ctor*
  name: RolesController
  href: api/User.Microservice.Controllers.RolesController.html#User_Microservice_Controllers_RolesController__ctor_
  commentId: Overload:User.Microservice.Controllers.RolesController.#ctor
  isSpec: "True"
  name.vb: New
  fullName: User.Microservice.Controllers.RolesController.RolesController
  fullName.vb: User.Microservice.Controllers.RolesController.New
  nameWithType: RolesController.RolesController
  nameWithType.vb: RolesController.New
- uid: User.Microservice.Controllers.RolesController.AddRole(User.Microservice.Models.RolesModel)
  name: AddRole(RolesModel)
  href: api/User.Microservice.Controllers.RolesController.html#User_Microservice_Controllers_RolesController_AddRole_User_Microservice_Models_RolesModel_
  commentId: M:User.Microservice.Controllers.RolesController.AddRole(User.Microservice.Models.RolesModel)
  fullName: User.Microservice.Controllers.RolesController.AddRole(User.Microservice.Models.RolesModel)
  nameWithType: RolesController.AddRole(RolesModel)
- uid: User.Microservice.Controllers.RolesController.AddRole*
  name: AddRole
  href: api/User.Microservice.Controllers.RolesController.html#User_Microservice_Controllers_RolesController_AddRole_
  commentId: Overload:User.Microservice.Controllers.RolesController.AddRole
  isSpec: "True"
  fullName: User.Microservice.Controllers.RolesController.AddRole
  nameWithType: RolesController.AddRole
- uid: User.Microservice.Controllers.RolesController.DeleteRole(System.Int32)
  name: DeleteRole(int)
  href: api/User.Microservice.Controllers.RolesController.html#User_Microservice_Controllers_RolesController_DeleteRole_System_Int32_
  commentId: M:User.Microservice.Controllers.RolesController.DeleteRole(System.Int32)
  name.vb: DeleteRole(Integer)
  fullName: User.Microservice.Controllers.RolesController.DeleteRole(int)
  fullName.vb: User.Microservice.Controllers.RolesController.DeleteRole(Integer)
  nameWithType: RolesController.DeleteRole(int)
  nameWithType.vb: RolesController.DeleteRole(Integer)
- uid: User.Microservice.Controllers.RolesController.DeleteRole*
  name: DeleteRole
  href: api/User.Microservice.Controllers.RolesController.html#User_Microservice_Controllers_RolesController_DeleteRole_
  commentId: Overload:User.Microservice.Controllers.RolesController.DeleteRole
  isSpec: "True"
  fullName: User.Microservice.Controllers.RolesController.DeleteRole
  nameWithType: RolesController.DeleteRole
- uid: User.Microservice.Controllers.RolesController.GetAllRoles
  name: GetAllRoles()
  href: api/User.Microservice.Controllers.RolesController.html#User_Microservice_Controllers_RolesController_GetAllRoles
  commentId: M:User.Microservice.Controllers.RolesController.GetAllRoles
  fullName: User.Microservice.Controllers.RolesController.GetAllRoles()
  nameWithType: RolesController.GetAllRoles()
- uid: User.Microservice.Controllers.RolesController.GetAllRoles*
  name: GetAllRoles
  href: api/User.Microservice.Controllers.RolesController.html#User_Microservice_Controllers_RolesController_GetAllRoles_
  commentId: Overload:User.Microservice.Controllers.RolesController.GetAllRoles
  isSpec: "True"
  fullName: User.Microservice.Controllers.RolesController.GetAllRoles
  nameWithType: RolesController.GetAllRoles
- uid: User.Microservice.Controllers.RolesController.GetRoleById(System.Int32)
  name: GetRoleById(int)
  href: api/User.Microservice.Controllers.RolesController.html#User_Microservice_Controllers_RolesController_GetRoleById_System_Int32_
  commentId: M:User.Microservice.Controllers.RolesController.GetRoleById(System.Int32)
  name.vb: GetRoleById(Integer)
  fullName: User.Microservice.Controllers.RolesController.GetRoleById(int)
  fullName.vb: User.Microservice.Controllers.RolesController.GetRoleById(Integer)
  nameWithType: RolesController.GetRoleById(int)
  nameWithType.vb: RolesController.GetRoleById(Integer)
- uid: User.Microservice.Controllers.RolesController.GetRoleById*
  name: GetRoleById
  href: api/User.Microservice.Controllers.RolesController.html#User_Microservice_Controllers_RolesController_GetRoleById_
  commentId: Overload:User.Microservice.Controllers.RolesController.GetRoleById
  isSpec: "True"
  fullName: User.Microservice.Controllers.RolesController.GetRoleById
  nameWithType: RolesController.GetRoleById
- uid: User.Microservice.Controllers.RolesController.UpdateRole(System.Int32,User.Microservice.Models.RolesModel)
  name: UpdateRole(int, RolesModel)
  href: api/User.Microservice.Controllers.RolesController.html#User_Microservice_Controllers_RolesController_UpdateRole_System_Int32_User_Microservice_Models_RolesModel_
  commentId: M:User.Microservice.Controllers.RolesController.UpdateRole(System.Int32,User.Microservice.Models.RolesModel)
  name.vb: UpdateRole(Integer, RolesModel)
  fullName: User.Microservice.Controllers.RolesController.UpdateRole(int, User.Microservice.Models.RolesModel)
  fullName.vb: User.Microservice.Controllers.RolesController.UpdateRole(Integer, User.Microservice.Models.RolesModel)
  nameWithType: RolesController.UpdateRole(int, RolesModel)
  nameWithType.vb: RolesController.UpdateRole(Integer, RolesModel)
- uid: User.Microservice.Controllers.RolesController.UpdateRole*
  name: UpdateRole
  href: api/User.Microservice.Controllers.RolesController.html#User_Microservice_Controllers_RolesController_UpdateRole_
  commentId: Overload:User.Microservice.Controllers.RolesController.UpdateRole
  isSpec: "True"
  fullName: User.Microservice.Controllers.RolesController.UpdateRole
  nameWithType: RolesController.UpdateRole
- uid: User.Microservice.Controllers.RolesMappingsController
  name: RolesMappingsController
  href: api/User.Microservice.Controllers.RolesMappingsController.html
  commentId: T:User.Microservice.Controllers.RolesMappingsController
  fullName: User.Microservice.Controllers.RolesMappingsController
  nameWithType: RolesMappingsController
- uid: User.Microservice.Controllers.RolesMappingsController.#ctor(User.Microservice.Interfaces.IRolesMappingRepository,Microsoft.Extensions.Logging.ILogger{User.Microservice.Controllers.RolesMappingsController})
  name: RolesMappingsController(IRolesMappingRepository, ILogger<RolesMappingsController>)
  href: api/User.Microservice.Controllers.RolesMappingsController.html#User_Microservice_Controllers_RolesMappingsController__ctor_User_Microservice_Interfaces_IRolesMappingRepository_Microsoft_Extensions_Logging_ILogger_User_Microservice_Controllers_RolesMappingsController__
  commentId: M:User.Microservice.Controllers.RolesMappingsController.#ctor(User.Microservice.Interfaces.IRolesMappingRepository,Microsoft.Extensions.Logging.ILogger{User.Microservice.Controllers.RolesMappingsController})
  name.vb: New(IRolesMappingRepository, ILogger(Of RolesMappingsController))
  fullName: User.Microservice.Controllers.RolesMappingsController.RolesMappingsController(User.Microservice.Interfaces.IRolesMappingRepository, Microsoft.Extensions.Logging.ILogger<User.Microservice.Controllers.RolesMappingsController>)
  fullName.vb: User.Microservice.Controllers.RolesMappingsController.New(User.Microservice.Interfaces.IRolesMappingRepository, Microsoft.Extensions.Logging.ILogger(Of User.Microservice.Controllers.RolesMappingsController))
  nameWithType: RolesMappingsController.RolesMappingsController(IRolesMappingRepository, ILogger<RolesMappingsController>)
  nameWithType.vb: RolesMappingsController.New(IRolesMappingRepository, ILogger(Of RolesMappingsController))
- uid: User.Microservice.Controllers.RolesMappingsController.#ctor*
  name: RolesMappingsController
  href: api/User.Microservice.Controllers.RolesMappingsController.html#User_Microservice_Controllers_RolesMappingsController__ctor_
  commentId: Overload:User.Microservice.Controllers.RolesMappingsController.#ctor
  isSpec: "True"
  name.vb: New
  fullName: User.Microservice.Controllers.RolesMappingsController.RolesMappingsController
  fullName.vb: User.Microservice.Controllers.RolesMappingsController.New
  nameWithType: RolesMappingsController.RolesMappingsController
  nameWithType.vb: RolesMappingsController.New
- uid: User.Microservice.Controllers.RolesMappingsController.AddRoleMapping(User.Microservice.Models.RolesMappingModel)
  name: AddRoleMapping(RolesMappingModel)
  href: api/User.Microservice.Controllers.RolesMappingsController.html#User_Microservice_Controllers_RolesMappingsController_AddRoleMapping_User_Microservice_Models_RolesMappingModel_
  commentId: M:User.Microservice.Controllers.RolesMappingsController.AddRoleMapping(User.Microservice.Models.RolesMappingModel)
  fullName: User.Microservice.Controllers.RolesMappingsController.AddRoleMapping(User.Microservice.Models.RolesMappingModel)
  nameWithType: RolesMappingsController.AddRoleMapping(RolesMappingModel)
- uid: User.Microservice.Controllers.RolesMappingsController.AddRoleMapping*
  name: AddRoleMapping
  href: api/User.Microservice.Controllers.RolesMappingsController.html#User_Microservice_Controllers_RolesMappingsController_AddRoleMapping_
  commentId: Overload:User.Microservice.Controllers.RolesMappingsController.AddRoleMapping
  isSpec: "True"
  fullName: User.Microservice.Controllers.RolesMappingsController.AddRoleMapping
  nameWithType: RolesMappingsController.AddRoleMapping
- uid: User.Microservice.Controllers.RolesMappingsController.DeleteRoleMapping(System.Int32)
  name: DeleteRoleMapping(int)
  href: api/User.Microservice.Controllers.RolesMappingsController.html#User_Microservice_Controllers_RolesMappingsController_DeleteRoleMapping_System_Int32_
  commentId: M:User.Microservice.Controllers.RolesMappingsController.DeleteRoleMapping(System.Int32)
  name.vb: DeleteRoleMapping(Integer)
  fullName: User.Microservice.Controllers.RolesMappingsController.DeleteRoleMapping(int)
  fullName.vb: User.Microservice.Controllers.RolesMappingsController.DeleteRoleMapping(Integer)
  nameWithType: RolesMappingsController.DeleteRoleMapping(int)
  nameWithType.vb: RolesMappingsController.DeleteRoleMapping(Integer)
- uid: User.Microservice.Controllers.RolesMappingsController.DeleteRoleMapping*
  name: DeleteRoleMapping
  href: api/User.Microservice.Controllers.RolesMappingsController.html#User_Microservice_Controllers_RolesMappingsController_DeleteRoleMapping_
  commentId: Overload:User.Microservice.Controllers.RolesMappingsController.DeleteRoleMapping
  isSpec: "True"
  fullName: User.Microservice.Controllers.RolesMappingsController.DeleteRoleMapping
  nameWithType: RolesMappingsController.DeleteRoleMapping
- uid: User.Microservice.Controllers.RolesMappingsController.GetAllRolesMapping
  name: GetAllRolesMapping()
  href: api/User.Microservice.Controllers.RolesMappingsController.html#User_Microservice_Controllers_RolesMappingsController_GetAllRolesMapping
  commentId: M:User.Microservice.Controllers.RolesMappingsController.GetAllRolesMapping
  fullName: User.Microservice.Controllers.RolesMappingsController.GetAllRolesMapping()
  nameWithType: RolesMappingsController.GetAllRolesMapping()
- uid: User.Microservice.Controllers.RolesMappingsController.GetAllRolesMapping*
  name: GetAllRolesMapping
  href: api/User.Microservice.Controllers.RolesMappingsController.html#User_Microservice_Controllers_RolesMappingsController_GetAllRolesMapping_
  commentId: Overload:User.Microservice.Controllers.RolesMappingsController.GetAllRolesMapping
  isSpec: "True"
  fullName: User.Microservice.Controllers.RolesMappingsController.GetAllRolesMapping
  nameWithType: RolesMappingsController.GetAllRolesMapping
- uid: User.Microservice.Controllers.RolesMappingsController.GetRoleMappingById(System.Int32,System.Int32,System.String)
  name: GetRoleMappingById(int, int, string)
  href: api/User.Microservice.Controllers.RolesMappingsController.html#User_Microservice_Controllers_RolesMappingsController_GetRoleMappingById_System_Int32_System_Int32_System_String_
  commentId: M:User.Microservice.Controllers.RolesMappingsController.GetRoleMappingById(System.Int32,System.Int32,System.String)
  name.vb: GetRoleMappingById(Integer, Integer, String)
  fullName: User.Microservice.Controllers.RolesMappingsController.GetRoleMappingById(int, int, string)
  fullName.vb: User.Microservice.Controllers.RolesMappingsController.GetRoleMappingById(Integer, Integer, String)
  nameWithType: RolesMappingsController.GetRoleMappingById(int, int, string)
  nameWithType.vb: RolesMappingsController.GetRoleMappingById(Integer, Integer, String)
- uid: User.Microservice.Controllers.RolesMappingsController.GetRoleMappingById*
  name: GetRoleMappingById
  href: api/User.Microservice.Controllers.RolesMappingsController.html#User_Microservice_Controllers_RolesMappingsController_GetRoleMappingById_
  commentId: Overload:User.Microservice.Controllers.RolesMappingsController.GetRoleMappingById
  isSpec: "True"
  fullName: User.Microservice.Controllers.RolesMappingsController.GetRoleMappingById
  nameWithType: RolesMappingsController.GetRoleMappingById
- uid: User.Microservice.Controllers.RolesMappingsController.UpdateRoleMapping(System.Int32,User.Microservice.Models.RolesMappingModel)
  name: UpdateRoleMapping(int, RolesMappingModel)
  href: api/User.Microservice.Controllers.RolesMappingsController.html#User_Microservice_Controllers_RolesMappingsController_UpdateRoleMapping_System_Int32_User_Microservice_Models_RolesMappingModel_
  commentId: M:User.Microservice.Controllers.RolesMappingsController.UpdateRoleMapping(System.Int32,User.Microservice.Models.RolesMappingModel)
  name.vb: UpdateRoleMapping(Integer, RolesMappingModel)
  fullName: User.Microservice.Controllers.RolesMappingsController.UpdateRoleMapping(int, User.Microservice.Models.RolesMappingModel)
  fullName.vb: User.Microservice.Controllers.RolesMappingsController.UpdateRoleMapping(Integer, User.Microservice.Models.RolesMappingModel)
  nameWithType: RolesMappingsController.UpdateRoleMapping(int, RolesMappingModel)
  nameWithType.vb: RolesMappingsController.UpdateRoleMapping(Integer, RolesMappingModel)
- uid: User.Microservice.Controllers.RolesMappingsController.UpdateRoleMapping*
  name: UpdateRoleMapping
  href: api/User.Microservice.Controllers.RolesMappingsController.html#User_Microservice_Controllers_RolesMappingsController_UpdateRoleMapping_
  commentId: Overload:User.Microservice.Controllers.RolesMappingsController.UpdateRoleMapping
  isSpec: "True"
  fullName: User.Microservice.Controllers.RolesMappingsController.UpdateRoleMapping
  nameWithType: RolesMappingsController.UpdateRoleMapping
- uid: User.Microservice.ErrorHandlerMiddleware
  name: ErrorHandlerMiddleware
  href: api/User.Microservice.ErrorHandlerMiddleware.html
  commentId: T:User.Microservice.ErrorHandlerMiddleware
  fullName: User.Microservice.ErrorHandlerMiddleware
  nameWithType: ErrorHandlerMiddleware
- uid: User.Microservice.ErrorHandlerMiddleware.#ctor(Microsoft.AspNetCore.Http.RequestDelegate)
  name: ErrorHandlerMiddleware(RequestDelegate)
  href: api/User.Microservice.ErrorHandlerMiddleware.html#User_Microservice_ErrorHandlerMiddleware__ctor_Microsoft_AspNetCore_Http_RequestDelegate_
  commentId: M:User.Microservice.ErrorHandlerMiddleware.#ctor(Microsoft.AspNetCore.Http.RequestDelegate)
  name.vb: New(RequestDelegate)
  fullName: User.Microservice.ErrorHandlerMiddleware.ErrorHandlerMiddleware(Microsoft.AspNetCore.Http.RequestDelegate)
  fullName.vb: User.Microservice.ErrorHandlerMiddleware.New(Microsoft.AspNetCore.Http.RequestDelegate)
  nameWithType: ErrorHandlerMiddleware.ErrorHandlerMiddleware(RequestDelegate)
  nameWithType.vb: ErrorHandlerMiddleware.New(RequestDelegate)
- uid: User.Microservice.ErrorHandlerMiddleware.#ctor*
  name: ErrorHandlerMiddleware
  href: api/User.Microservice.ErrorHandlerMiddleware.html#User_Microservice_ErrorHandlerMiddleware__ctor_
  commentId: Overload:User.Microservice.ErrorHandlerMiddleware.#ctor
  isSpec: "True"
  name.vb: New
  fullName: User.Microservice.ErrorHandlerMiddleware.ErrorHandlerMiddleware
  fullName.vb: User.Microservice.ErrorHandlerMiddleware.New
  nameWithType: ErrorHandlerMiddleware.ErrorHandlerMiddleware
  nameWithType.vb: ErrorHandlerMiddleware.New
- uid: User.Microservice.ErrorHandlerMiddleware.Invoke(Microsoft.AspNetCore.Http.HttpContext)
  name: Invoke(HttpContext)
  href: api/User.Microservice.ErrorHandlerMiddleware.html#User_Microservice_ErrorHandlerMiddleware_Invoke_Microsoft_AspNetCore_Http_HttpContext_
  commentId: M:User.Microservice.ErrorHandlerMiddleware.Invoke(Microsoft.AspNetCore.Http.HttpContext)
  fullName: User.Microservice.ErrorHandlerMiddleware.Invoke(Microsoft.AspNetCore.Http.HttpContext)
  nameWithType: ErrorHandlerMiddleware.Invoke(HttpContext)
- uid: User.Microservice.ErrorHandlerMiddleware.Invoke*
  name: Invoke
  href: api/User.Microservice.ErrorHandlerMiddleware.html#User_Microservice_ErrorHandlerMiddleware_Invoke_
  commentId: Overload:User.Microservice.ErrorHandlerMiddleware.Invoke
  isSpec: "True"
  fullName: User.Microservice.ErrorHandlerMiddleware.Invoke
  nameWithType: ErrorHandlerMiddleware.Invoke
- uid: User.Microservice.Interfaces
  name: User.Microservice.Interfaces
  href: api/User.Microservice.Interfaces.html
  commentId: N:User.Microservice.Interfaces
  fullName: User.Microservice.Interfaces
  nameWithType: User.Microservice.Interfaces
- uid: User.Microservice.Interfaces.IPermissionsMappingRepository
  name: IPermissionsMappingRepository
  href: api/User.Microservice.Interfaces.IPermissionsMappingRepository.html
  commentId: T:User.Microservice.Interfaces.IPermissionsMappingRepository
  fullName: User.Microservice.Interfaces.IPermissionsMappingRepository
  nameWithType: IPermissionsMappingRepository
- uid: User.Microservice.Interfaces.IPermissionsMappingRepository.AddPermissionMapping(User.Microservice.Models.PermissionsMappingModel)
  name: AddPermissionMapping(PermissionsMappingModel)
  href: api/User.Microservice.Interfaces.IPermissionsMappingRepository.html#User_Microservice_Interfaces_IPermissionsMappingRepository_AddPermissionMapping_User_Microservice_Models_PermissionsMappingModel_
  commentId: M:User.Microservice.Interfaces.IPermissionsMappingRepository.AddPermissionMapping(User.Microservice.Models.PermissionsMappingModel)
  fullName: User.Microservice.Interfaces.IPermissionsMappingRepository.AddPermissionMapping(User.Microservice.Models.PermissionsMappingModel)
  nameWithType: IPermissionsMappingRepository.AddPermissionMapping(PermissionsMappingModel)
- uid: User.Microservice.Interfaces.IPermissionsMappingRepository.AddPermissionMapping*
  name: AddPermissionMapping
  href: api/User.Microservice.Interfaces.IPermissionsMappingRepository.html#User_Microservice_Interfaces_IPermissionsMappingRepository_AddPermissionMapping_
  commentId: Overload:User.Microservice.Interfaces.IPermissionsMappingRepository.AddPermissionMapping
  isSpec: "True"
  fullName: User.Microservice.Interfaces.IPermissionsMappingRepository.AddPermissionMapping
  nameWithType: IPermissionsMappingRepository.AddPermissionMapping
- uid: User.Microservice.Interfaces.IPermissionsMappingRepository.DeletePermissionMapping(System.Int32)
  name: DeletePermissionMapping(int)
  href: api/User.Microservice.Interfaces.IPermissionsMappingRepository.html#User_Microservice_Interfaces_IPermissionsMappingRepository_DeletePermissionMapping_System_Int32_
  commentId: M:User.Microservice.Interfaces.IPermissionsMappingRepository.DeletePermissionMapping(System.Int32)
  name.vb: DeletePermissionMapping(Integer)
  fullName: User.Microservice.Interfaces.IPermissionsMappingRepository.DeletePermissionMapping(int)
  fullName.vb: User.Microservice.Interfaces.IPermissionsMappingRepository.DeletePermissionMapping(Integer)
  nameWithType: IPermissionsMappingRepository.DeletePermissionMapping(int)
  nameWithType.vb: IPermissionsMappingRepository.DeletePermissionMapping(Integer)
- uid: User.Microservice.Interfaces.IPermissionsMappingRepository.DeletePermissionMapping*
  name: DeletePermissionMapping
  href: api/User.Microservice.Interfaces.IPermissionsMappingRepository.html#User_Microservice_Interfaces_IPermissionsMappingRepository_DeletePermissionMapping_
  commentId: Overload:User.Microservice.Interfaces.IPermissionsMappingRepository.DeletePermissionMapping
  isSpec: "True"
  fullName: User.Microservice.Interfaces.IPermissionsMappingRepository.DeletePermissionMapping
  nameWithType: IPermissionsMappingRepository.DeletePermissionMapping
- uid: User.Microservice.Interfaces.IPermissionsMappingRepository.GetAllPermissionMapping
  name: GetAllPermissionMapping()
  href: api/User.Microservice.Interfaces.IPermissionsMappingRepository.html#User_Microservice_Interfaces_IPermissionsMappingRepository_GetAllPermissionMapping
  commentId: M:User.Microservice.Interfaces.IPermissionsMappingRepository.GetAllPermissionMapping
  fullName: User.Microservice.Interfaces.IPermissionsMappingRepository.GetAllPermissionMapping()
  nameWithType: IPermissionsMappingRepository.GetAllPermissionMapping()
- uid: User.Microservice.Interfaces.IPermissionsMappingRepository.GetAllPermissionMapping*
  name: GetAllPermissionMapping
  href: api/User.Microservice.Interfaces.IPermissionsMappingRepository.html#User_Microservice_Interfaces_IPermissionsMappingRepository_GetAllPermissionMapping_
  commentId: Overload:User.Microservice.Interfaces.IPermissionsMappingRepository.GetAllPermissionMapping
  isSpec: "True"
  fullName: User.Microservice.Interfaces.IPermissionsMappingRepository.GetAllPermissionMapping
  nameWithType: IPermissionsMappingRepository.GetAllPermissionMapping
- uid: User.Microservice.Interfaces.IPermissionsMappingRepository.GetPermissionMappingById(System.Int32,System.Int32,System.Int32)
  name: GetPermissionMappingById(int, int, int)
  href: api/User.Microservice.Interfaces.IPermissionsMappingRepository.html#User_Microservice_Interfaces_IPermissionsMappingRepository_GetPermissionMappingById_System_Int32_System_Int32_System_Int32_
  commentId: M:User.Microservice.Interfaces.IPermissionsMappingRepository.GetPermissionMappingById(System.Int32,System.Int32,System.Int32)
  name.vb: GetPermissionMappingById(Integer, Integer, Integer)
  fullName: User.Microservice.Interfaces.IPermissionsMappingRepository.GetPermissionMappingById(int, int, int)
  fullName.vb: User.Microservice.Interfaces.IPermissionsMappingRepository.GetPermissionMappingById(Integer, Integer, Integer)
  nameWithType: IPermissionsMappingRepository.GetPermissionMappingById(int, int, int)
  nameWithType.vb: IPermissionsMappingRepository.GetPermissionMappingById(Integer, Integer, Integer)
- uid: User.Microservice.Interfaces.IPermissionsMappingRepository.GetPermissionMappingById*
  name: GetPermissionMappingById
  href: api/User.Microservice.Interfaces.IPermissionsMappingRepository.html#User_Microservice_Interfaces_IPermissionsMappingRepository_GetPermissionMappingById_
  commentId: Overload:User.Microservice.Interfaces.IPermissionsMappingRepository.GetPermissionMappingById
  isSpec: "True"
  fullName: User.Microservice.Interfaces.IPermissionsMappingRepository.GetPermissionMappingById
  nameWithType: IPermissionsMappingRepository.GetPermissionMappingById
- uid: User.Microservice.Interfaces.IPermissionsMappingRepository.IsPermissionMappingExists(User.Microservice.Models.PermissionsMappingModel)
  name: IsPermissionMappingExists(PermissionsMappingModel)
  href: api/User.Microservice.Interfaces.IPermissionsMappingRepository.html#User_Microservice_Interfaces_IPermissionsMappingRepository_IsPermissionMappingExists_User_Microservice_Models_PermissionsMappingModel_
  commentId: M:User.Microservice.Interfaces.IPermissionsMappingRepository.IsPermissionMappingExists(User.Microservice.Models.PermissionsMappingModel)
  fullName: User.Microservice.Interfaces.IPermissionsMappingRepository.IsPermissionMappingExists(User.Microservice.Models.PermissionsMappingModel)
  nameWithType: IPermissionsMappingRepository.IsPermissionMappingExists(PermissionsMappingModel)
- uid: User.Microservice.Interfaces.IPermissionsMappingRepository.IsPermissionMappingExists*
  name: IsPermissionMappingExists
  href: api/User.Microservice.Interfaces.IPermissionsMappingRepository.html#User_Microservice_Interfaces_IPermissionsMappingRepository_IsPermissionMappingExists_
  commentId: Overload:User.Microservice.Interfaces.IPermissionsMappingRepository.IsPermissionMappingExists
  isSpec: "True"
  fullName: User.Microservice.Interfaces.IPermissionsMappingRepository.IsPermissionMappingExists
  nameWithType: IPermissionsMappingRepository.IsPermissionMappingExists
- uid: User.Microservice.Interfaces.IPermissionsMappingRepository.UpdatePermissionMapping(User.Microservice.Models.PermissionsMappingModel)
  name: UpdatePermissionMapping(PermissionsMappingModel)
  href: api/User.Microservice.Interfaces.IPermissionsMappingRepository.html#User_Microservice_Interfaces_IPermissionsMappingRepository_UpdatePermissionMapping_User_Microservice_Models_PermissionsMappingModel_
  commentId: M:User.Microservice.Interfaces.IPermissionsMappingRepository.UpdatePermissionMapping(User.Microservice.Models.PermissionsMappingModel)
  fullName: User.Microservice.Interfaces.IPermissionsMappingRepository.UpdatePermissionMapping(User.Microservice.Models.PermissionsMappingModel)
  nameWithType: IPermissionsMappingRepository.UpdatePermissionMapping(PermissionsMappingModel)
- uid: User.Microservice.Interfaces.IPermissionsMappingRepository.UpdatePermissionMapping*
  name: UpdatePermissionMapping
  href: api/User.Microservice.Interfaces.IPermissionsMappingRepository.html#User_Microservice_Interfaces_IPermissionsMappingRepository_UpdatePermissionMapping_
  commentId: Overload:User.Microservice.Interfaces.IPermissionsMappingRepository.UpdatePermissionMapping
  isSpec: "True"
  fullName: User.Microservice.Interfaces.IPermissionsMappingRepository.UpdatePermissionMapping
  nameWithType: IPermissionsMappingRepository.UpdatePermissionMapping
- uid: User.Microservice.Interfaces.IPermissionsRepository
  name: IPermissionsRepository
  href: api/User.Microservice.Interfaces.IPermissionsRepository.html
  commentId: T:User.Microservice.Interfaces.IPermissionsRepository
  fullName: User.Microservice.Interfaces.IPermissionsRepository
  nameWithType: IPermissionsRepository
- uid: User.Microservice.Interfaces.IPermissionsRepository.AddPermission(User.Microservice.Models.PermissionsModel)
  name: AddPermission(PermissionsModel)
  href: api/User.Microservice.Interfaces.IPermissionsRepository.html#User_Microservice_Interfaces_IPermissionsRepository_AddPermission_User_Microservice_Models_PermissionsModel_
  commentId: M:User.Microservice.Interfaces.IPermissionsRepository.AddPermission(User.Microservice.Models.PermissionsModel)
  fullName: User.Microservice.Interfaces.IPermissionsRepository.AddPermission(User.Microservice.Models.PermissionsModel)
  nameWithType: IPermissionsRepository.AddPermission(PermissionsModel)
- uid: User.Microservice.Interfaces.IPermissionsRepository.AddPermission*
  name: AddPermission
  href: api/User.Microservice.Interfaces.IPermissionsRepository.html#User_Microservice_Interfaces_IPermissionsRepository_AddPermission_
  commentId: Overload:User.Microservice.Interfaces.IPermissionsRepository.AddPermission
  isSpec: "True"
  fullName: User.Microservice.Interfaces.IPermissionsRepository.AddPermission
  nameWithType: IPermissionsRepository.AddPermission
- uid: User.Microservice.Interfaces.IPermissionsRepository.DeletePermission(System.Int32)
  name: DeletePermission(int)
  href: api/User.Microservice.Interfaces.IPermissionsRepository.html#User_Microservice_Interfaces_IPermissionsRepository_DeletePermission_System_Int32_
  commentId: M:User.Microservice.Interfaces.IPermissionsRepository.DeletePermission(System.Int32)
  name.vb: DeletePermission(Integer)
  fullName: User.Microservice.Interfaces.IPermissionsRepository.DeletePermission(int)
  fullName.vb: User.Microservice.Interfaces.IPermissionsRepository.DeletePermission(Integer)
  nameWithType: IPermissionsRepository.DeletePermission(int)
  nameWithType.vb: IPermissionsRepository.DeletePermission(Integer)
- uid: User.Microservice.Interfaces.IPermissionsRepository.DeletePermission*
  name: DeletePermission
  href: api/User.Microservice.Interfaces.IPermissionsRepository.html#User_Microservice_Interfaces_IPermissionsRepository_DeletePermission_
  commentId: Overload:User.Microservice.Interfaces.IPermissionsRepository.DeletePermission
  isSpec: "True"
  fullName: User.Microservice.Interfaces.IPermissionsRepository.DeletePermission
  nameWithType: IPermissionsRepository.DeletePermission
- uid: User.Microservice.Interfaces.IPermissionsRepository.GetAllPermissions
  name: GetAllPermissions()
  href: api/User.Microservice.Interfaces.IPermissionsRepository.html#User_Microservice_Interfaces_IPermissionsRepository_GetAllPermissions
  commentId: M:User.Microservice.Interfaces.IPermissionsRepository.GetAllPermissions
  fullName: User.Microservice.Interfaces.IPermissionsRepository.GetAllPermissions()
  nameWithType: IPermissionsRepository.GetAllPermissions()
- uid: User.Microservice.Interfaces.IPermissionsRepository.GetAllPermissions*
  name: GetAllPermissions
  href: api/User.Microservice.Interfaces.IPermissionsRepository.html#User_Microservice_Interfaces_IPermissionsRepository_GetAllPermissions_
  commentId: Overload:User.Microservice.Interfaces.IPermissionsRepository.GetAllPermissions
  isSpec: "True"
  fullName: User.Microservice.Interfaces.IPermissionsRepository.GetAllPermissions
  nameWithType: IPermissionsRepository.GetAllPermissions
- uid: User.Microservice.Interfaces.IPermissionsRepository.GetPermissionById(System.Int32)
  name: GetPermissionById(int)
  href: api/User.Microservice.Interfaces.IPermissionsRepository.html#User_Microservice_Interfaces_IPermissionsRepository_GetPermissionById_System_Int32_
  commentId: M:User.Microservice.Interfaces.IPermissionsRepository.GetPermissionById(System.Int32)
  name.vb: GetPermissionById(Integer)
  fullName: User.Microservice.Interfaces.IPermissionsRepository.GetPermissionById(int)
  fullName.vb: User.Microservice.Interfaces.IPermissionsRepository.GetPermissionById(Integer)
  nameWithType: IPermissionsRepository.GetPermissionById(int)
  nameWithType.vb: IPermissionsRepository.GetPermissionById(Integer)
- uid: User.Microservice.Interfaces.IPermissionsRepository.GetPermissionById*
  name: GetPermissionById
  href: api/User.Microservice.Interfaces.IPermissionsRepository.html#User_Microservice_Interfaces_IPermissionsRepository_GetPermissionById_
  commentId: Overload:User.Microservice.Interfaces.IPermissionsRepository.GetPermissionById
  isSpec: "True"
  fullName: User.Microservice.Interfaces.IPermissionsRepository.GetPermissionById
  nameWithType: IPermissionsRepository.GetPermissionById
- uid: User.Microservice.Interfaces.IPermissionsRepository.IsPermissionExists(User.Microservice.Models.PermissionsModel)
  name: IsPermissionExists(PermissionsModel)
  href: api/User.Microservice.Interfaces.IPermissionsRepository.html#User_Microservice_Interfaces_IPermissionsRepository_IsPermissionExists_User_Microservice_Models_PermissionsModel_
  commentId: M:User.Microservice.Interfaces.IPermissionsRepository.IsPermissionExists(User.Microservice.Models.PermissionsModel)
  fullName: User.Microservice.Interfaces.IPermissionsRepository.IsPermissionExists(User.Microservice.Models.PermissionsModel)
  nameWithType: IPermissionsRepository.IsPermissionExists(PermissionsModel)
- uid: User.Microservice.Interfaces.IPermissionsRepository.IsPermissionExists*
  name: IsPermissionExists
  href: api/User.Microservice.Interfaces.IPermissionsRepository.html#User_Microservice_Interfaces_IPermissionsRepository_IsPermissionExists_
  commentId: Overload:User.Microservice.Interfaces.IPermissionsRepository.IsPermissionExists
  isSpec: "True"
  fullName: User.Microservice.Interfaces.IPermissionsRepository.IsPermissionExists
  nameWithType: IPermissionsRepository.IsPermissionExists
- uid: User.Microservice.Interfaces.IPermissionsRepository.UpdatePermission(User.Microservice.Models.PermissionsModel)
  name: UpdatePermission(PermissionsModel)
  href: api/User.Microservice.Interfaces.IPermissionsRepository.html#User_Microservice_Interfaces_IPermissionsRepository_UpdatePermission_User_Microservice_Models_PermissionsModel_
  commentId: M:User.Microservice.Interfaces.IPermissionsRepository.UpdatePermission(User.Microservice.Models.PermissionsModel)
  fullName: User.Microservice.Interfaces.IPermissionsRepository.UpdatePermission(User.Microservice.Models.PermissionsModel)
  nameWithType: IPermissionsRepository.UpdatePermission(PermissionsModel)
- uid: User.Microservice.Interfaces.IPermissionsRepository.UpdatePermission*
  name: UpdatePermission
  href: api/User.Microservice.Interfaces.IPermissionsRepository.html#User_Microservice_Interfaces_IPermissionsRepository_UpdatePermission_
  commentId: Overload:User.Microservice.Interfaces.IPermissionsRepository.UpdatePermission
  isSpec: "True"
  fullName: User.Microservice.Interfaces.IPermissionsRepository.UpdatePermission
  nameWithType: IPermissionsRepository.UpdatePermission
- uid: User.Microservice.Interfaces.IPersonaRepository
  name: IPersonaRepository
  href: api/User.Microservice.Interfaces.IPersonaRepository.html
  commentId: T:User.Microservice.Interfaces.IPersonaRepository
  fullName: User.Microservice.Interfaces.IPersonaRepository
  nameWithType: IPersonaRepository
- uid: User.Microservice.Interfaces.IPersonaRepository.AddPersona(User.Microservice.Models.PersonaModel)
  name: AddPersona(PersonaModel)
  href: api/User.Microservice.Interfaces.IPersonaRepository.html#User_Microservice_Interfaces_IPersonaRepository_AddPersona_User_Microservice_Models_PersonaModel_
  commentId: M:User.Microservice.Interfaces.IPersonaRepository.AddPersona(User.Microservice.Models.PersonaModel)
  fullName: User.Microservice.Interfaces.IPersonaRepository.AddPersona(User.Microservice.Models.PersonaModel)
  nameWithType: IPersonaRepository.AddPersona(PersonaModel)
- uid: User.Microservice.Interfaces.IPersonaRepository.AddPersona*
  name: AddPersona
  href: api/User.Microservice.Interfaces.IPersonaRepository.html#User_Microservice_Interfaces_IPersonaRepository_AddPersona_
  commentId: Overload:User.Microservice.Interfaces.IPersonaRepository.AddPersona
  isSpec: "True"
  fullName: User.Microservice.Interfaces.IPersonaRepository.AddPersona
  nameWithType: IPersonaRepository.AddPersona
- uid: User.Microservice.Interfaces.IPersonaRepository.DeletePersona(System.Int32)
  name: DeletePersona(int)
  href: api/User.Microservice.Interfaces.IPersonaRepository.html#User_Microservice_Interfaces_IPersonaRepository_DeletePersona_System_Int32_
  commentId: M:User.Microservice.Interfaces.IPersonaRepository.DeletePersona(System.Int32)
  name.vb: DeletePersona(Integer)
  fullName: User.Microservice.Interfaces.IPersonaRepository.DeletePersona(int)
  fullName.vb: User.Microservice.Interfaces.IPersonaRepository.DeletePersona(Integer)
  nameWithType: IPersonaRepository.DeletePersona(int)
  nameWithType.vb: IPersonaRepository.DeletePersona(Integer)
- uid: User.Microservice.Interfaces.IPersonaRepository.DeletePersona*
  name: DeletePersona
  href: api/User.Microservice.Interfaces.IPersonaRepository.html#User_Microservice_Interfaces_IPersonaRepository_DeletePersona_
  commentId: Overload:User.Microservice.Interfaces.IPersonaRepository.DeletePersona
  isSpec: "True"
  fullName: User.Microservice.Interfaces.IPersonaRepository.DeletePersona
  nameWithType: IPersonaRepository.DeletePersona
- uid: User.Microservice.Interfaces.IPersonaRepository.GetAllPersona
  name: GetAllPersona()
  href: api/User.Microservice.Interfaces.IPersonaRepository.html#User_Microservice_Interfaces_IPersonaRepository_GetAllPersona
  commentId: M:User.Microservice.Interfaces.IPersonaRepository.GetAllPersona
  fullName: User.Microservice.Interfaces.IPersonaRepository.GetAllPersona()
  nameWithType: IPersonaRepository.GetAllPersona()
- uid: User.Microservice.Interfaces.IPersonaRepository.GetAllPersona*
  name: GetAllPersona
  href: api/User.Microservice.Interfaces.IPersonaRepository.html#User_Microservice_Interfaces_IPersonaRepository_GetAllPersona_
  commentId: Overload:User.Microservice.Interfaces.IPersonaRepository.GetAllPersona
  isSpec: "True"
  fullName: User.Microservice.Interfaces.IPersonaRepository.GetAllPersona
  nameWithType: IPersonaRepository.GetAllPersona
- uid: User.Microservice.Interfaces.IPersonaRepository.GetPersonaById(System.String)
  name: GetPersonaById(string)
  href: api/User.Microservice.Interfaces.IPersonaRepository.html#User_Microservice_Interfaces_IPersonaRepository_GetPersonaById_System_String_
  commentId: M:User.Microservice.Interfaces.IPersonaRepository.GetPersonaById(System.String)
  name.vb: GetPersonaById(String)
  fullName: User.Microservice.Interfaces.IPersonaRepository.GetPersonaById(string)
  fullName.vb: User.Microservice.Interfaces.IPersonaRepository.GetPersonaById(String)
  nameWithType: IPersonaRepository.GetPersonaById(string)
  nameWithType.vb: IPersonaRepository.GetPersonaById(String)
- uid: User.Microservice.Interfaces.IPersonaRepository.GetPersonaById*
  name: GetPersonaById
  href: api/User.Microservice.Interfaces.IPersonaRepository.html#User_Microservice_Interfaces_IPersonaRepository_GetPersonaById_
  commentId: Overload:User.Microservice.Interfaces.IPersonaRepository.GetPersonaById
  isSpec: "True"
  fullName: User.Microservice.Interfaces.IPersonaRepository.GetPersonaById
  nameWithType: IPersonaRepository.GetPersonaById
- uid: User.Microservice.Interfaces.IPersonaRepository.IsPersonaExists(User.Microservice.Models.PersonaModel)
  name: IsPersonaExists(PersonaModel)
  href: api/User.Microservice.Interfaces.IPersonaRepository.html#User_Microservice_Interfaces_IPersonaRepository_IsPersonaExists_User_Microservice_Models_PersonaModel_
  commentId: M:User.Microservice.Interfaces.IPersonaRepository.IsPersonaExists(User.Microservice.Models.PersonaModel)
  fullName: User.Microservice.Interfaces.IPersonaRepository.IsPersonaExists(User.Microservice.Models.PersonaModel)
  nameWithType: IPersonaRepository.IsPersonaExists(PersonaModel)
- uid: User.Microservice.Interfaces.IPersonaRepository.IsPersonaExists*
  name: IsPersonaExists
  href: api/User.Microservice.Interfaces.IPersonaRepository.html#User_Microservice_Interfaces_IPersonaRepository_IsPersonaExists_
  commentId: Overload:User.Microservice.Interfaces.IPersonaRepository.IsPersonaExists
  isSpec: "True"
  fullName: User.Microservice.Interfaces.IPersonaRepository.IsPersonaExists
  nameWithType: IPersonaRepository.IsPersonaExists
- uid: User.Microservice.Interfaces.IPersonaRepository.UpdatePersona(User.Microservice.Models.PersonaModel)
  name: UpdatePersona(PersonaModel)
  href: api/User.Microservice.Interfaces.IPersonaRepository.html#User_Microservice_Interfaces_IPersonaRepository_UpdatePersona_User_Microservice_Models_PersonaModel_
  commentId: M:User.Microservice.Interfaces.IPersonaRepository.UpdatePersona(User.Microservice.Models.PersonaModel)
  fullName: User.Microservice.Interfaces.IPersonaRepository.UpdatePersona(User.Microservice.Models.PersonaModel)
  nameWithType: IPersonaRepository.UpdatePersona(PersonaModel)
- uid: User.Microservice.Interfaces.IPersonaRepository.UpdatePersona*
  name: UpdatePersona
  href: api/User.Microservice.Interfaces.IPersonaRepository.html#User_Microservice_Interfaces_IPersonaRepository_UpdatePersona_
  commentId: Overload:User.Microservice.Interfaces.IPersonaRepository.UpdatePersona
  isSpec: "True"
  fullName: User.Microservice.Interfaces.IPersonaRepository.UpdatePersona
  nameWithType: IPersonaRepository.UpdatePersona
- uid: User.Microservice.Interfaces.IPortalRepository
  name: IPortalRepository
  href: api/User.Microservice.Interfaces.IPortalRepository.html
  commentId: T:User.Microservice.Interfaces.IPortalRepository
  fullName: User.Microservice.Interfaces.IPortalRepository
  nameWithType: IPortalRepository
- uid: User.Microservice.Interfaces.IPortalRepository.AddPortal(User.Microservice.Models.PortalModel)
  name: AddPortal(PortalModel)
  href: api/User.Microservice.Interfaces.IPortalRepository.html#User_Microservice_Interfaces_IPortalRepository_AddPortal_User_Microservice_Models_PortalModel_
  commentId: M:User.Microservice.Interfaces.IPortalRepository.AddPortal(User.Microservice.Models.PortalModel)
  fullName: User.Microservice.Interfaces.IPortalRepository.AddPortal(User.Microservice.Models.PortalModel)
  nameWithType: IPortalRepository.AddPortal(PortalModel)
- uid: User.Microservice.Interfaces.IPortalRepository.AddPortal*
  name: AddPortal
  href: api/User.Microservice.Interfaces.IPortalRepository.html#User_Microservice_Interfaces_IPortalRepository_AddPortal_
  commentId: Overload:User.Microservice.Interfaces.IPortalRepository.AddPortal
  isSpec: "True"
  fullName: User.Microservice.Interfaces.IPortalRepository.AddPortal
  nameWithType: IPortalRepository.AddPortal
- uid: User.Microservice.Interfaces.IPortalRepository.DeletePortal(System.Int32)
  name: DeletePortal(int)
  href: api/User.Microservice.Interfaces.IPortalRepository.html#User_Microservice_Interfaces_IPortalRepository_DeletePortal_System_Int32_
  commentId: M:User.Microservice.Interfaces.IPortalRepository.DeletePortal(System.Int32)
  name.vb: DeletePortal(Integer)
  fullName: User.Microservice.Interfaces.IPortalRepository.DeletePortal(int)
  fullName.vb: User.Microservice.Interfaces.IPortalRepository.DeletePortal(Integer)
  nameWithType: IPortalRepository.DeletePortal(int)
  nameWithType.vb: IPortalRepository.DeletePortal(Integer)
- uid: User.Microservice.Interfaces.IPortalRepository.DeletePortal*
  name: DeletePortal
  href: api/User.Microservice.Interfaces.IPortalRepository.html#User_Microservice_Interfaces_IPortalRepository_DeletePortal_
  commentId: Overload:User.Microservice.Interfaces.IPortalRepository.DeletePortal
  isSpec: "True"
  fullName: User.Microservice.Interfaces.IPortalRepository.DeletePortal
  nameWithType: IPortalRepository.DeletePortal
- uid: User.Microservice.Interfaces.IPortalRepository.GetAllPortals
  name: GetAllPortals()
  href: api/User.Microservice.Interfaces.IPortalRepository.html#User_Microservice_Interfaces_IPortalRepository_GetAllPortals
  commentId: M:User.Microservice.Interfaces.IPortalRepository.GetAllPortals
  fullName: User.Microservice.Interfaces.IPortalRepository.GetAllPortals()
  nameWithType: IPortalRepository.GetAllPortals()
- uid: User.Microservice.Interfaces.IPortalRepository.GetAllPortals*
  name: GetAllPortals
  href: api/User.Microservice.Interfaces.IPortalRepository.html#User_Microservice_Interfaces_IPortalRepository_GetAllPortals_
  commentId: Overload:User.Microservice.Interfaces.IPortalRepository.GetAllPortals
  isSpec: "True"
  fullName: User.Microservice.Interfaces.IPortalRepository.GetAllPortals
  nameWithType: IPortalRepository.GetAllPortals
- uid: User.Microservice.Interfaces.IPortalRepository.GetPortalById(System.Int32)
  name: GetPortalById(int)
  href: api/User.Microservice.Interfaces.IPortalRepository.html#User_Microservice_Interfaces_IPortalRepository_GetPortalById_System_Int32_
  commentId: M:User.Microservice.Interfaces.IPortalRepository.GetPortalById(System.Int32)
  name.vb: GetPortalById(Integer)
  fullName: User.Microservice.Interfaces.IPortalRepository.GetPortalById(int)
  fullName.vb: User.Microservice.Interfaces.IPortalRepository.GetPortalById(Integer)
  nameWithType: IPortalRepository.GetPortalById(int)
  nameWithType.vb: IPortalRepository.GetPortalById(Integer)
- uid: User.Microservice.Interfaces.IPortalRepository.GetPortalById*
  name: GetPortalById
  href: api/User.Microservice.Interfaces.IPortalRepository.html#User_Microservice_Interfaces_IPortalRepository_GetPortalById_
  commentId: Overload:User.Microservice.Interfaces.IPortalRepository.GetPortalById
  isSpec: "True"
  fullName: User.Microservice.Interfaces.IPortalRepository.GetPortalById
  nameWithType: IPortalRepository.GetPortalById
- uid: User.Microservice.Interfaces.IPortalRepository.IsPortalExists(User.Microservice.Models.PortalModel)
  name: IsPortalExists(PortalModel)
  href: api/User.Microservice.Interfaces.IPortalRepository.html#User_Microservice_Interfaces_IPortalRepository_IsPortalExists_User_Microservice_Models_PortalModel_
  commentId: M:User.Microservice.Interfaces.IPortalRepository.IsPortalExists(User.Microservice.Models.PortalModel)
  fullName: User.Microservice.Interfaces.IPortalRepository.IsPortalExists(User.Microservice.Models.PortalModel)
  nameWithType: IPortalRepository.IsPortalExists(PortalModel)
- uid: User.Microservice.Interfaces.IPortalRepository.IsPortalExists*
  name: IsPortalExists
  href: api/User.Microservice.Interfaces.IPortalRepository.html#User_Microservice_Interfaces_IPortalRepository_IsPortalExists_
  commentId: Overload:User.Microservice.Interfaces.IPortalRepository.IsPortalExists
  isSpec: "True"
  fullName: User.Microservice.Interfaces.IPortalRepository.IsPortalExists
  nameWithType: IPortalRepository.IsPortalExists
- uid: User.Microservice.Interfaces.IPortalRepository.UpdatePortal(User.Microservice.Models.PortalModel)
  name: UpdatePortal(PortalModel)
  href: api/User.Microservice.Interfaces.IPortalRepository.html#User_Microservice_Interfaces_IPortalRepository_UpdatePortal_User_Microservice_Models_PortalModel_
  commentId: M:User.Microservice.Interfaces.IPortalRepository.UpdatePortal(User.Microservice.Models.PortalModel)
  fullName: User.Microservice.Interfaces.IPortalRepository.UpdatePortal(User.Microservice.Models.PortalModel)
  nameWithType: IPortalRepository.UpdatePortal(PortalModel)
- uid: User.Microservice.Interfaces.IPortalRepository.UpdatePortal*
  name: UpdatePortal
  href: api/User.Microservice.Interfaces.IPortalRepository.html#User_Microservice_Interfaces_IPortalRepository_UpdatePortal_
  commentId: Overload:User.Microservice.Interfaces.IPortalRepository.UpdatePortal
  isSpec: "True"
  fullName: User.Microservice.Interfaces.IPortalRepository.UpdatePortal
  nameWithType: IPortalRepository.UpdatePortal
- uid: User.Microservice.Interfaces.IRepository`1
  name: IRepository<T>
  href: api/User.Microservice.Interfaces.IRepository-1.html
  commentId: T:User.Microservice.Interfaces.IRepository`1
  name.vb: IRepository(Of T)
  fullName: User.Microservice.Interfaces.IRepository<T>
  fullName.vb: User.Microservice.Interfaces.IRepository(Of T)
  nameWithType: IRepository<T>
  nameWithType.vb: IRepository(Of T)
- uid: User.Microservice.Interfaces.IRepository`1.GetAllPermissionStatus
  name: GetAllPermissionStatus()
  href: api/User.Microservice.Interfaces.IRepository-1.html#User_Microservice_Interfaces_IRepository_1_GetAllPermissionStatus
  commentId: M:User.Microservice.Interfaces.IRepository`1.GetAllPermissionStatus
  fullName: User.Microservice.Interfaces.IRepository<T>.GetAllPermissionStatus()
  fullName.vb: User.Microservice.Interfaces.IRepository(Of T).GetAllPermissionStatus()
  nameWithType: IRepository<T>.GetAllPermissionStatus()
  nameWithType.vb: IRepository(Of T).GetAllPermissionStatus()
- uid: User.Microservice.Interfaces.IRepository`1.GetAllPermissionStatus*
  name: GetAllPermissionStatus
  href: api/User.Microservice.Interfaces.IRepository-1.html#User_Microservice_Interfaces_IRepository_1_GetAllPermissionStatus_
  commentId: Overload:User.Microservice.Interfaces.IRepository`1.GetAllPermissionStatus
  isSpec: "True"
  fullName: User.Microservice.Interfaces.IRepository<T>.GetAllPermissionStatus
  fullName.vb: User.Microservice.Interfaces.IRepository(Of T).GetAllPermissionStatus
  nameWithType: IRepository<T>.GetAllPermissionStatus
  nameWithType.vb: IRepository(Of T).GetAllPermissionStatus
- uid: User.Microservice.Interfaces.IRepository`1.GetAllPersonaCounty
  name: GetAllPersonaCounty()
  href: api/User.Microservice.Interfaces.IRepository-1.html#User_Microservice_Interfaces_IRepository_1_GetAllPersonaCounty
  commentId: M:User.Microservice.Interfaces.IRepository`1.GetAllPersonaCounty
  fullName: User.Microservice.Interfaces.IRepository<T>.GetAllPersonaCounty()
  fullName.vb: User.Microservice.Interfaces.IRepository(Of T).GetAllPersonaCounty()
  nameWithType: IRepository<T>.GetAllPersonaCounty()
  nameWithType.vb: IRepository(Of T).GetAllPersonaCounty()
- uid: User.Microservice.Interfaces.IRepository`1.GetAllPersonaCounty*
  name: GetAllPersonaCounty
  href: api/User.Microservice.Interfaces.IRepository-1.html#User_Microservice_Interfaces_IRepository_1_GetAllPersonaCounty_
  commentId: Overload:User.Microservice.Interfaces.IRepository`1.GetAllPersonaCounty
  isSpec: "True"
  fullName: User.Microservice.Interfaces.IRepository<T>.GetAllPersonaCounty
  fullName.vb: User.Microservice.Interfaces.IRepository(Of T).GetAllPersonaCounty
  nameWithType: IRepository<T>.GetAllPersonaCounty
  nameWithType.vb: IRepository(Of T).GetAllPersonaCounty
- uid: User.Microservice.Interfaces.IRepository`1.GetAllPersonaState
  name: GetAllPersonaState()
  href: api/User.Microservice.Interfaces.IRepository-1.html#User_Microservice_Interfaces_IRepository_1_GetAllPersonaState
  commentId: M:User.Microservice.Interfaces.IRepository`1.GetAllPersonaState
  fullName: User.Microservice.Interfaces.IRepository<T>.GetAllPersonaState()
  fullName.vb: User.Microservice.Interfaces.IRepository(Of T).GetAllPersonaState()
  nameWithType: IRepository<T>.GetAllPersonaState()
  nameWithType.vb: IRepository(Of T).GetAllPersonaState()
- uid: User.Microservice.Interfaces.IRepository`1.GetAllPersonaState*
  name: GetAllPersonaState
  href: api/User.Microservice.Interfaces.IRepository-1.html#User_Microservice_Interfaces_IRepository_1_GetAllPersonaState_
  commentId: Overload:User.Microservice.Interfaces.IRepository`1.GetAllPersonaState
  isSpec: "True"
  fullName: User.Microservice.Interfaces.IRepository<T>.GetAllPersonaState
  fullName.vb: User.Microservice.Interfaces.IRepository(Of T).GetAllPersonaState
  nameWithType: IRepository<T>.GetAllPersonaState
  nameWithType.vb: IRepository(Of T).GetAllPersonaState
- uid: User.Microservice.Interfaces.IRepository`1.GetAllPersonaStatus
  name: GetAllPersonaStatus()
  href: api/User.Microservice.Interfaces.IRepository-1.html#User_Microservice_Interfaces_IRepository_1_GetAllPersonaStatus
  commentId: M:User.Microservice.Interfaces.IRepository`1.GetAllPersonaStatus
  fullName: User.Microservice.Interfaces.IRepository<T>.GetAllPersonaStatus()
  fullName.vb: User.Microservice.Interfaces.IRepository(Of T).GetAllPersonaStatus()
  nameWithType: IRepository<T>.GetAllPersonaStatus()
  nameWithType.vb: IRepository(Of T).GetAllPersonaStatus()
- uid: User.Microservice.Interfaces.IRepository`1.GetAllPersonaStatus*
  name: GetAllPersonaStatus
  href: api/User.Microservice.Interfaces.IRepository-1.html#User_Microservice_Interfaces_IRepository_1_GetAllPersonaStatus_
  commentId: Overload:User.Microservice.Interfaces.IRepository`1.GetAllPersonaStatus
  isSpec: "True"
  fullName: User.Microservice.Interfaces.IRepository<T>.GetAllPersonaStatus
  fullName.vb: User.Microservice.Interfaces.IRepository(Of T).GetAllPersonaStatus
  nameWithType: IRepository<T>.GetAllPersonaStatus
  nameWithType.vb: IRepository(Of T).GetAllPersonaStatus
- uid: User.Microservice.Interfaces.IRepository`1.GetAllRoleStatus
  name: GetAllRoleStatus()
  href: api/User.Microservice.Interfaces.IRepository-1.html#User_Microservice_Interfaces_IRepository_1_GetAllRoleStatus
  commentId: M:User.Microservice.Interfaces.IRepository`1.GetAllRoleStatus
  fullName: User.Microservice.Interfaces.IRepository<T>.GetAllRoleStatus()
  fullName.vb: User.Microservice.Interfaces.IRepository(Of T).GetAllRoleStatus()
  nameWithType: IRepository<T>.GetAllRoleStatus()
  nameWithType.vb: IRepository(Of T).GetAllRoleStatus()
- uid: User.Microservice.Interfaces.IRepository`1.GetAllRoleStatus*
  name: GetAllRoleStatus
  href: api/User.Microservice.Interfaces.IRepository-1.html#User_Microservice_Interfaces_IRepository_1_GetAllRoleStatus_
  commentId: Overload:User.Microservice.Interfaces.IRepository`1.GetAllRoleStatus
  isSpec: "True"
  fullName: User.Microservice.Interfaces.IRepository<T>.GetAllRoleStatus
  fullName.vb: User.Microservice.Interfaces.IRepository(Of T).GetAllRoleStatus
  nameWithType: IRepository<T>.GetAllRoleStatus
  nameWithType.vb: IRepository(Of T).GetAllRoleStatus
- uid: User.Microservice.Interfaces.IRolesMappingRepository
  name: IRolesMappingRepository
  href: api/User.Microservice.Interfaces.IRolesMappingRepository.html
  commentId: T:User.Microservice.Interfaces.IRolesMappingRepository
  fullName: User.Microservice.Interfaces.IRolesMappingRepository
  nameWithType: IRolesMappingRepository
- uid: User.Microservice.Interfaces.IRolesMappingRepository.AddRoleMapping(User.Microservice.Models.RolesMappingModel)
  name: AddRoleMapping(RolesMappingModel)
  href: api/User.Microservice.Interfaces.IRolesMappingRepository.html#User_Microservice_Interfaces_IRolesMappingRepository_AddRoleMapping_User_Microservice_Models_RolesMappingModel_
  commentId: M:User.Microservice.Interfaces.IRolesMappingRepository.AddRoleMapping(User.Microservice.Models.RolesMappingModel)
  fullName: User.Microservice.Interfaces.IRolesMappingRepository.AddRoleMapping(User.Microservice.Models.RolesMappingModel)
  nameWithType: IRolesMappingRepository.AddRoleMapping(RolesMappingModel)
- uid: User.Microservice.Interfaces.IRolesMappingRepository.AddRoleMapping*
  name: AddRoleMapping
  href: api/User.Microservice.Interfaces.IRolesMappingRepository.html#User_Microservice_Interfaces_IRolesMappingRepository_AddRoleMapping_
  commentId: Overload:User.Microservice.Interfaces.IRolesMappingRepository.AddRoleMapping
  isSpec: "True"
  fullName: User.Microservice.Interfaces.IRolesMappingRepository.AddRoleMapping
  nameWithType: IRolesMappingRepository.AddRoleMapping
- uid: User.Microservice.Interfaces.IRolesMappingRepository.DeleteRoleMapping(System.Int32)
  name: DeleteRoleMapping(int)
  href: api/User.Microservice.Interfaces.IRolesMappingRepository.html#User_Microservice_Interfaces_IRolesMappingRepository_DeleteRoleMapping_System_Int32_
  commentId: M:User.Microservice.Interfaces.IRolesMappingRepository.DeleteRoleMapping(System.Int32)
  name.vb: DeleteRoleMapping(Integer)
  fullName: User.Microservice.Interfaces.IRolesMappingRepository.DeleteRoleMapping(int)
  fullName.vb: User.Microservice.Interfaces.IRolesMappingRepository.DeleteRoleMapping(Integer)
  nameWithType: IRolesMappingRepository.DeleteRoleMapping(int)
  nameWithType.vb: IRolesMappingRepository.DeleteRoleMapping(Integer)
- uid: User.Microservice.Interfaces.IRolesMappingRepository.DeleteRoleMapping*
  name: DeleteRoleMapping
  href: api/User.Microservice.Interfaces.IRolesMappingRepository.html#User_Microservice_Interfaces_IRolesMappingRepository_DeleteRoleMapping_
  commentId: Overload:User.Microservice.Interfaces.IRolesMappingRepository.DeleteRoleMapping
  isSpec: "True"
  fullName: User.Microservice.Interfaces.IRolesMappingRepository.DeleteRoleMapping
  nameWithType: IRolesMappingRepository.DeleteRoleMapping
- uid: User.Microservice.Interfaces.IRolesMappingRepository.GetAllRolesMapping
  name: GetAllRolesMapping()
  href: api/User.Microservice.Interfaces.IRolesMappingRepository.html#User_Microservice_Interfaces_IRolesMappingRepository_GetAllRolesMapping
  commentId: M:User.Microservice.Interfaces.IRolesMappingRepository.GetAllRolesMapping
  fullName: User.Microservice.Interfaces.IRolesMappingRepository.GetAllRolesMapping()
  nameWithType: IRolesMappingRepository.GetAllRolesMapping()
- uid: User.Microservice.Interfaces.IRolesMappingRepository.GetAllRolesMapping*
  name: GetAllRolesMapping
  href: api/User.Microservice.Interfaces.IRolesMappingRepository.html#User_Microservice_Interfaces_IRolesMappingRepository_GetAllRolesMapping_
  commentId: Overload:User.Microservice.Interfaces.IRolesMappingRepository.GetAllRolesMapping
  isSpec: "True"
  fullName: User.Microservice.Interfaces.IRolesMappingRepository.GetAllRolesMapping
  nameWithType: IRolesMappingRepository.GetAllRolesMapping
- uid: User.Microservice.Interfaces.IRolesMappingRepository.GetRoleMappingById(System.Int32,System.Int32,System.String)
  name: GetRoleMappingById(int, int, string)
  href: api/User.Microservice.Interfaces.IRolesMappingRepository.html#User_Microservice_Interfaces_IRolesMappingRepository_GetRoleMappingById_System_Int32_System_Int32_System_String_
  commentId: M:User.Microservice.Interfaces.IRolesMappingRepository.GetRoleMappingById(System.Int32,System.Int32,System.String)
  name.vb: GetRoleMappingById(Integer, Integer, String)
  fullName: User.Microservice.Interfaces.IRolesMappingRepository.GetRoleMappingById(int, int, string)
  fullName.vb: User.Microservice.Interfaces.IRolesMappingRepository.GetRoleMappingById(Integer, Integer, String)
  nameWithType: IRolesMappingRepository.GetRoleMappingById(int, int, string)
  nameWithType.vb: IRolesMappingRepository.GetRoleMappingById(Integer, Integer, String)
- uid: User.Microservice.Interfaces.IRolesMappingRepository.GetRoleMappingById*
  name: GetRoleMappingById
  href: api/User.Microservice.Interfaces.IRolesMappingRepository.html#User_Microservice_Interfaces_IRolesMappingRepository_GetRoleMappingById_
  commentId: Overload:User.Microservice.Interfaces.IRolesMappingRepository.GetRoleMappingById
  isSpec: "True"
  fullName: User.Microservice.Interfaces.IRolesMappingRepository.GetRoleMappingById
  nameWithType: IRolesMappingRepository.GetRoleMappingById
- uid: User.Microservice.Interfaces.IRolesMappingRepository.IsRoleMappingExists(User.Microservice.Models.RolesMappingModel)
  name: IsRoleMappingExists(RolesMappingModel)
  href: api/User.Microservice.Interfaces.IRolesMappingRepository.html#User_Microservice_Interfaces_IRolesMappingRepository_IsRoleMappingExists_User_Microservice_Models_RolesMappingModel_
  commentId: M:User.Microservice.Interfaces.IRolesMappingRepository.IsRoleMappingExists(User.Microservice.Models.RolesMappingModel)
  fullName: User.Microservice.Interfaces.IRolesMappingRepository.IsRoleMappingExists(User.Microservice.Models.RolesMappingModel)
  nameWithType: IRolesMappingRepository.IsRoleMappingExists(RolesMappingModel)
- uid: User.Microservice.Interfaces.IRolesMappingRepository.IsRoleMappingExists*
  name: IsRoleMappingExists
  href: api/User.Microservice.Interfaces.IRolesMappingRepository.html#User_Microservice_Interfaces_IRolesMappingRepository_IsRoleMappingExists_
  commentId: Overload:User.Microservice.Interfaces.IRolesMappingRepository.IsRoleMappingExists
  isSpec: "True"
  fullName: User.Microservice.Interfaces.IRolesMappingRepository.IsRoleMappingExists
  nameWithType: IRolesMappingRepository.IsRoleMappingExists
- uid: User.Microservice.Interfaces.IRolesMappingRepository.UpdateRoleMapping(User.Microservice.Models.RolesMappingModel)
  name: UpdateRoleMapping(RolesMappingModel)
  href: api/User.Microservice.Interfaces.IRolesMappingRepository.html#User_Microservice_Interfaces_IRolesMappingRepository_UpdateRoleMapping_User_Microservice_Models_RolesMappingModel_
  commentId: M:User.Microservice.Interfaces.IRolesMappingRepository.UpdateRoleMapping(User.Microservice.Models.RolesMappingModel)
  fullName: User.Microservice.Interfaces.IRolesMappingRepository.UpdateRoleMapping(User.Microservice.Models.RolesMappingModel)
  nameWithType: IRolesMappingRepository.UpdateRoleMapping(RolesMappingModel)
- uid: User.Microservice.Interfaces.IRolesMappingRepository.UpdateRoleMapping*
  name: UpdateRoleMapping
  href: api/User.Microservice.Interfaces.IRolesMappingRepository.html#User_Microservice_Interfaces_IRolesMappingRepository_UpdateRoleMapping_
  commentId: Overload:User.Microservice.Interfaces.IRolesMappingRepository.UpdateRoleMapping
  isSpec: "True"
  fullName: User.Microservice.Interfaces.IRolesMappingRepository.UpdateRoleMapping
  nameWithType: IRolesMappingRepository.UpdateRoleMapping
- uid: User.Microservice.Interfaces.IRolesRepository
  name: IRolesRepository
  href: api/User.Microservice.Interfaces.IRolesRepository.html
  commentId: T:User.Microservice.Interfaces.IRolesRepository
  fullName: User.Microservice.Interfaces.IRolesRepository
  nameWithType: IRolesRepository
- uid: User.Microservice.Interfaces.IRolesRepository.AddRole(User.Microservice.Models.RolesModel)
  name: AddRole(RolesModel)
  href: api/User.Microservice.Interfaces.IRolesRepository.html#User_Microservice_Interfaces_IRolesRepository_AddRole_User_Microservice_Models_RolesModel_
  commentId: M:User.Microservice.Interfaces.IRolesRepository.AddRole(User.Microservice.Models.RolesModel)
  fullName: User.Microservice.Interfaces.IRolesRepository.AddRole(User.Microservice.Models.RolesModel)
  nameWithType: IRolesRepository.AddRole(RolesModel)
- uid: User.Microservice.Interfaces.IRolesRepository.AddRole*
  name: AddRole
  href: api/User.Microservice.Interfaces.IRolesRepository.html#User_Microservice_Interfaces_IRolesRepository_AddRole_
  commentId: Overload:User.Microservice.Interfaces.IRolesRepository.AddRole
  isSpec: "True"
  fullName: User.Microservice.Interfaces.IRolesRepository.AddRole
  nameWithType: IRolesRepository.AddRole
- uid: User.Microservice.Interfaces.IRolesRepository.DeleteRole(System.Int32)
  name: DeleteRole(int)
  href: api/User.Microservice.Interfaces.IRolesRepository.html#User_Microservice_Interfaces_IRolesRepository_DeleteRole_System_Int32_
  commentId: M:User.Microservice.Interfaces.IRolesRepository.DeleteRole(System.Int32)
  name.vb: DeleteRole(Integer)
  fullName: User.Microservice.Interfaces.IRolesRepository.DeleteRole(int)
  fullName.vb: User.Microservice.Interfaces.IRolesRepository.DeleteRole(Integer)
  nameWithType: IRolesRepository.DeleteRole(int)
  nameWithType.vb: IRolesRepository.DeleteRole(Integer)
- uid: User.Microservice.Interfaces.IRolesRepository.DeleteRole*
  name: DeleteRole
  href: api/User.Microservice.Interfaces.IRolesRepository.html#User_Microservice_Interfaces_IRolesRepository_DeleteRole_
  commentId: Overload:User.Microservice.Interfaces.IRolesRepository.DeleteRole
  isSpec: "True"
  fullName: User.Microservice.Interfaces.IRolesRepository.DeleteRole
  nameWithType: IRolesRepository.DeleteRole
- uid: User.Microservice.Interfaces.IRolesRepository.GetAllRoles
  name: GetAllRoles()
  href: api/User.Microservice.Interfaces.IRolesRepository.html#User_Microservice_Interfaces_IRolesRepository_GetAllRoles
  commentId: M:User.Microservice.Interfaces.IRolesRepository.GetAllRoles
  fullName: User.Microservice.Interfaces.IRolesRepository.GetAllRoles()
  nameWithType: IRolesRepository.GetAllRoles()
- uid: User.Microservice.Interfaces.IRolesRepository.GetAllRoles*
  name: GetAllRoles
  href: api/User.Microservice.Interfaces.IRolesRepository.html#User_Microservice_Interfaces_IRolesRepository_GetAllRoles_
  commentId: Overload:User.Microservice.Interfaces.IRolesRepository.GetAllRoles
  isSpec: "True"
  fullName: User.Microservice.Interfaces.IRolesRepository.GetAllRoles
  nameWithType: IRolesRepository.GetAllRoles
- uid: User.Microservice.Interfaces.IRolesRepository.GetRoleById(System.Int32)
  name: GetRoleById(int)
  href: api/User.Microservice.Interfaces.IRolesRepository.html#User_Microservice_Interfaces_IRolesRepository_GetRoleById_System_Int32_
  commentId: M:User.Microservice.Interfaces.IRolesRepository.GetRoleById(System.Int32)
  name.vb: GetRoleById(Integer)
  fullName: User.Microservice.Interfaces.IRolesRepository.GetRoleById(int)
  fullName.vb: User.Microservice.Interfaces.IRolesRepository.GetRoleById(Integer)
  nameWithType: IRolesRepository.GetRoleById(int)
  nameWithType.vb: IRolesRepository.GetRoleById(Integer)
- uid: User.Microservice.Interfaces.IRolesRepository.GetRoleById*
  name: GetRoleById
  href: api/User.Microservice.Interfaces.IRolesRepository.html#User_Microservice_Interfaces_IRolesRepository_GetRoleById_
  commentId: Overload:User.Microservice.Interfaces.IRolesRepository.GetRoleById
  isSpec: "True"
  fullName: User.Microservice.Interfaces.IRolesRepository.GetRoleById
  nameWithType: IRolesRepository.GetRoleById
- uid: User.Microservice.Interfaces.IRolesRepository.IsRoleExists(User.Microservice.Models.RolesModel)
  name: IsRoleExists(RolesModel)
  href: api/User.Microservice.Interfaces.IRolesRepository.html#User_Microservice_Interfaces_IRolesRepository_IsRoleExists_User_Microservice_Models_RolesModel_
  commentId: M:User.Microservice.Interfaces.IRolesRepository.IsRoleExists(User.Microservice.Models.RolesModel)
  fullName: User.Microservice.Interfaces.IRolesRepository.IsRoleExists(User.Microservice.Models.RolesModel)
  nameWithType: IRolesRepository.IsRoleExists(RolesModel)
- uid: User.Microservice.Interfaces.IRolesRepository.IsRoleExists*
  name: IsRoleExists
  href: api/User.Microservice.Interfaces.IRolesRepository.html#User_Microservice_Interfaces_IRolesRepository_IsRoleExists_
  commentId: Overload:User.Microservice.Interfaces.IRolesRepository.IsRoleExists
  isSpec: "True"
  fullName: User.Microservice.Interfaces.IRolesRepository.IsRoleExists
  nameWithType: IRolesRepository.IsRoleExists
- uid: User.Microservice.Interfaces.IRolesRepository.UpdateRole(User.Microservice.Models.RolesModel)
  name: UpdateRole(RolesModel)
  href: api/User.Microservice.Interfaces.IRolesRepository.html#User_Microservice_Interfaces_IRolesRepository_UpdateRole_User_Microservice_Models_RolesModel_
  commentId: M:User.Microservice.Interfaces.IRolesRepository.UpdateRole(User.Microservice.Models.RolesModel)
  fullName: User.Microservice.Interfaces.IRolesRepository.UpdateRole(User.Microservice.Models.RolesModel)
  nameWithType: IRolesRepository.UpdateRole(RolesModel)
- uid: User.Microservice.Interfaces.IRolesRepository.UpdateRole*
  name: UpdateRole
  href: api/User.Microservice.Interfaces.IRolesRepository.html#User_Microservice_Interfaces_IRolesRepository_UpdateRole_
  commentId: Overload:User.Microservice.Interfaces.IRolesRepository.UpdateRole
  isSpec: "True"
  fullName: User.Microservice.Interfaces.IRolesRepository.UpdateRole
  nameWithType: IRolesRepository.UpdateRole
- uid: User.Microservice.Migrations
  name: User.Microservice.Migrations
  href: api/User.Microservice.Migrations.html
  commentId: N:User.Microservice.Migrations
  fullName: User.Microservice.Migrations
  nameWithType: User.Microservice.Migrations
- uid: User.Microservice.Migrations.personaId
  name: personaId
  href: api/User.Microservice.Migrations.personaId.html
  commentId: T:User.Microservice.Migrations.personaId
  fullName: User.Microservice.Migrations.personaId
  nameWithType: personaId
- uid: User.Microservice.Migrations.personaId.BuildTargetModel(Microsoft.EntityFrameworkCore.ModelBuilder)
  name: BuildTargetModel(ModelBuilder)
  href: api/User.Microservice.Migrations.personaId.html#User_Microservice_Migrations_personaId_BuildTargetModel_Microsoft_EntityFrameworkCore_ModelBuilder_
  commentId: M:User.Microservice.Migrations.personaId.BuildTargetModel(Microsoft.EntityFrameworkCore.ModelBuilder)
  fullName: User.Microservice.Migrations.personaId.BuildTargetModel(Microsoft.EntityFrameworkCore.ModelBuilder)
  nameWithType: personaId.BuildTargetModel(ModelBuilder)
- uid: User.Microservice.Migrations.personaId.BuildTargetModel*
  name: BuildTargetModel
  href: api/User.Microservice.Migrations.personaId.html#User_Microservice_Migrations_personaId_BuildTargetModel_
  commentId: Overload:User.Microservice.Migrations.personaId.BuildTargetModel
  isSpec: "True"
  fullName: User.Microservice.Migrations.personaId.BuildTargetModel
  nameWithType: personaId.BuildTargetModel
- uid: User.Microservice.Migrations.personaId.Down(Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder)
  name: Down(MigrationBuilder)
  href: api/User.Microservice.Migrations.personaId.html#User_Microservice_Migrations_personaId_Down_Microsoft_EntityFrameworkCore_Migrations_MigrationBuilder_
  commentId: M:User.Microservice.Migrations.personaId.Down(Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder)
  fullName: User.Microservice.Migrations.personaId.Down(Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder)
  nameWithType: personaId.Down(MigrationBuilder)
- uid: User.Microservice.Migrations.personaId.Down*
  name: Down
  href: api/User.Microservice.Migrations.personaId.html#User_Microservice_Migrations_personaId_Down_
  commentId: Overload:User.Microservice.Migrations.personaId.Down
  isSpec: "True"
  fullName: User.Microservice.Migrations.personaId.Down
  nameWithType: personaId.Down
- uid: User.Microservice.Migrations.personaId.Up(Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder)
  name: Up(MigrationBuilder)
  href: api/User.Microservice.Migrations.personaId.html#User_Microservice_Migrations_personaId_Up_Microsoft_EntityFrameworkCore_Migrations_MigrationBuilder_
  commentId: M:User.Microservice.Migrations.personaId.Up(Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder)
  fullName: User.Microservice.Migrations.personaId.Up(Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder)
  nameWithType: personaId.Up(MigrationBuilder)
- uid: User.Microservice.Migrations.personaId.Up*
  name: Up
  href: api/User.Microservice.Migrations.personaId.html#User_Microservice_Migrations_personaId_Up_
  commentId: Overload:User.Microservice.Migrations.personaId.Up
  isSpec: "True"
  fullName: User.Microservice.Migrations.personaId.Up
  nameWithType: personaId.Up
- uid: User.Microservice.Models
  name: User.Microservice.Models
  href: api/User.Microservice.Models.html
  commentId: N:User.Microservice.Models
  fullName: User.Microservice.Models
  nameWithType: User.Microservice.Models
- uid: User.Microservice.Models.PermissionsMappingModel
  name: PermissionsMappingModel
  href: api/User.Microservice.Models.PermissionsMappingModel.html
  commentId: T:User.Microservice.Models.PermissionsMappingModel
  fullName: User.Microservice.Models.PermissionsMappingModel
  nameWithType: PermissionsMappingModel
- uid: User.Microservice.Models.PermissionsMappingModel.CreatedBy
  name: CreatedBy
  href: api/User.Microservice.Models.PermissionsMappingModel.html#User_Microservice_Models_PermissionsMappingModel_CreatedBy
  commentId: P:User.Microservice.Models.PermissionsMappingModel.CreatedBy
  fullName: User.Microservice.Models.PermissionsMappingModel.CreatedBy
  nameWithType: PermissionsMappingModel.CreatedBy
- uid: User.Microservice.Models.PermissionsMappingModel.CreatedBy*
  name: CreatedBy
  href: api/User.Microservice.Models.PermissionsMappingModel.html#User_Microservice_Models_PermissionsMappingModel_CreatedBy_
  commentId: Overload:User.Microservice.Models.PermissionsMappingModel.CreatedBy
  isSpec: "True"
  fullName: User.Microservice.Models.PermissionsMappingModel.CreatedBy
  nameWithType: PermissionsMappingModel.CreatedBy
- uid: User.Microservice.Models.PermissionsMappingModel.CreatedOn
  name: CreatedOn
  href: api/User.Microservice.Models.PermissionsMappingModel.html#User_Microservice_Models_PermissionsMappingModel_CreatedOn
  commentId: P:User.Microservice.Models.PermissionsMappingModel.CreatedOn
  fullName: User.Microservice.Models.PermissionsMappingModel.CreatedOn
  nameWithType: PermissionsMappingModel.CreatedOn
- uid: User.Microservice.Models.PermissionsMappingModel.CreatedOn*
  name: CreatedOn
  href: api/User.Microservice.Models.PermissionsMappingModel.html#User_Microservice_Models_PermissionsMappingModel_CreatedOn_
  commentId: Overload:User.Microservice.Models.PermissionsMappingModel.CreatedOn
  isSpec: "True"
  fullName: User.Microservice.Models.PermissionsMappingModel.CreatedOn
  nameWithType: PermissionsMappingModel.CreatedOn
- uid: User.Microservice.Models.PermissionsMappingModel.ModifiedBy
  name: ModifiedBy
  href: api/User.Microservice.Models.PermissionsMappingModel.html#User_Microservice_Models_PermissionsMappingModel_ModifiedBy
  commentId: P:User.Microservice.Models.PermissionsMappingModel.ModifiedBy
  fullName: User.Microservice.Models.PermissionsMappingModel.ModifiedBy
  nameWithType: PermissionsMappingModel.ModifiedBy
- uid: User.Microservice.Models.PermissionsMappingModel.ModifiedBy*
  name: ModifiedBy
  href: api/User.Microservice.Models.PermissionsMappingModel.html#User_Microservice_Models_PermissionsMappingModel_ModifiedBy_
  commentId: Overload:User.Microservice.Models.PermissionsMappingModel.ModifiedBy
  isSpec: "True"
  fullName: User.Microservice.Models.PermissionsMappingModel.ModifiedBy
  nameWithType: PermissionsMappingModel.ModifiedBy
- uid: User.Microservice.Models.PermissionsMappingModel.ModifiedOn
  name: ModifiedOn
  href: api/User.Microservice.Models.PermissionsMappingModel.html#User_Microservice_Models_PermissionsMappingModel_ModifiedOn
  commentId: P:User.Microservice.Models.PermissionsMappingModel.ModifiedOn
  fullName: User.Microservice.Models.PermissionsMappingModel.ModifiedOn
  nameWithType: PermissionsMappingModel.ModifiedOn
- uid: User.Microservice.Models.PermissionsMappingModel.ModifiedOn*
  name: ModifiedOn
  href: api/User.Microservice.Models.PermissionsMappingModel.html#User_Microservice_Models_PermissionsMappingModel_ModifiedOn_
  commentId: Overload:User.Microservice.Models.PermissionsMappingModel.ModifiedOn
  isSpec: "True"
  fullName: User.Microservice.Models.PermissionsMappingModel.ModifiedOn
  nameWithType: PermissionsMappingModel.ModifiedOn
- uid: User.Microservice.Models.PermissionsMappingModel.Permission
  name: Permission
  href: api/User.Microservice.Models.PermissionsMappingModel.html#User_Microservice_Models_PermissionsMappingModel_Permission
  commentId: P:User.Microservice.Models.PermissionsMappingModel.Permission
  fullName: User.Microservice.Models.PermissionsMappingModel.Permission
  nameWithType: PermissionsMappingModel.Permission
- uid: User.Microservice.Models.PermissionsMappingModel.Permission*
  name: Permission
  href: api/User.Microservice.Models.PermissionsMappingModel.html#User_Microservice_Models_PermissionsMappingModel_Permission_
  commentId: Overload:User.Microservice.Models.PermissionsMappingModel.Permission
  isSpec: "True"
  fullName: User.Microservice.Models.PermissionsMappingModel.Permission
  nameWithType: PermissionsMappingModel.Permission
- uid: User.Microservice.Models.PermissionsMappingModel.PermissionID
  name: PermissionID
  href: api/User.Microservice.Models.PermissionsMappingModel.html#User_Microservice_Models_PermissionsMappingModel_PermissionID
  commentId: P:User.Microservice.Models.PermissionsMappingModel.PermissionID
  fullName: User.Microservice.Models.PermissionsMappingModel.PermissionID
  nameWithType: PermissionsMappingModel.PermissionID
- uid: User.Microservice.Models.PermissionsMappingModel.PermissionID*
  name: PermissionID
  href: api/User.Microservice.Models.PermissionsMappingModel.html#User_Microservice_Models_PermissionsMappingModel_PermissionID_
  commentId: Overload:User.Microservice.Models.PermissionsMappingModel.PermissionID
  isSpec: "True"
  fullName: User.Microservice.Models.PermissionsMappingModel.PermissionID
  nameWithType: PermissionsMappingModel.PermissionID
- uid: User.Microservice.Models.PermissionsMappingModel.PermissionMappingID
  name: PermissionMappingID
  href: api/User.Microservice.Models.PermissionsMappingModel.html#User_Microservice_Models_PermissionsMappingModel_PermissionMappingID
  commentId: P:User.Microservice.Models.PermissionsMappingModel.PermissionMappingID
  fullName: User.Microservice.Models.PermissionsMappingModel.PermissionMappingID
  nameWithType: PermissionsMappingModel.PermissionMappingID
- uid: User.Microservice.Models.PermissionsMappingModel.PermissionMappingID*
  name: PermissionMappingID
  href: api/User.Microservice.Models.PermissionsMappingModel.html#User_Microservice_Models_PermissionsMappingModel_PermissionMappingID_
  commentId: Overload:User.Microservice.Models.PermissionsMappingModel.PermissionMappingID
  isSpec: "True"
  fullName: User.Microservice.Models.PermissionsMappingModel.PermissionMappingID
  nameWithType: PermissionsMappingModel.PermissionMappingID
- uid: User.Microservice.Models.PermissionsMappingModel.Role
  name: Role
  href: api/User.Microservice.Models.PermissionsMappingModel.html#User_Microservice_Models_PermissionsMappingModel_Role
  commentId: P:User.Microservice.Models.PermissionsMappingModel.Role
  fullName: User.Microservice.Models.PermissionsMappingModel.Role
  nameWithType: PermissionsMappingModel.Role
- uid: User.Microservice.Models.PermissionsMappingModel.Role*
  name: Role
  href: api/User.Microservice.Models.PermissionsMappingModel.html#User_Microservice_Models_PermissionsMappingModel_Role_
  commentId: Overload:User.Microservice.Models.PermissionsMappingModel.Role
  isSpec: "True"
  fullName: User.Microservice.Models.PermissionsMappingModel.Role
  nameWithType: PermissionsMappingModel.Role
- uid: User.Microservice.Models.PermissionsMappingModel.RoleID
  name: RoleID
  href: api/User.Microservice.Models.PermissionsMappingModel.html#User_Microservice_Models_PermissionsMappingModel_RoleID
  commentId: P:User.Microservice.Models.PermissionsMappingModel.RoleID
  fullName: User.Microservice.Models.PermissionsMappingModel.RoleID
  nameWithType: PermissionsMappingModel.RoleID
- uid: User.Microservice.Models.PermissionsMappingModel.RoleID*
  name: RoleID
  href: api/User.Microservice.Models.PermissionsMappingModel.html#User_Microservice_Models_PermissionsMappingModel_RoleID_
  commentId: Overload:User.Microservice.Models.PermissionsMappingModel.RoleID
  isSpec: "True"
  fullName: User.Microservice.Models.PermissionsMappingModel.RoleID
  nameWithType: PermissionsMappingModel.RoleID
- uid: User.Microservice.Models.PermissionsModel
  name: PermissionsModel
  href: api/User.Microservice.Models.PermissionsModel.html
  commentId: T:User.Microservice.Models.PermissionsModel
  fullName: User.Microservice.Models.PermissionsModel
  nameWithType: PermissionsModel
- uid: User.Microservice.Models.PermissionsModel.CreatedBy
  name: CreatedBy
  href: api/User.Microservice.Models.PermissionsModel.html#User_Microservice_Models_PermissionsModel_CreatedBy
  commentId: P:User.Microservice.Models.PermissionsModel.CreatedBy
  fullName: User.Microservice.Models.PermissionsModel.CreatedBy
  nameWithType: PermissionsModel.CreatedBy
- uid: User.Microservice.Models.PermissionsModel.CreatedBy*
  name: CreatedBy
  href: api/User.Microservice.Models.PermissionsModel.html#User_Microservice_Models_PermissionsModel_CreatedBy_
  commentId: Overload:User.Microservice.Models.PermissionsModel.CreatedBy
  isSpec: "True"
  fullName: User.Microservice.Models.PermissionsModel.CreatedBy
  nameWithType: PermissionsModel.CreatedBy
- uid: User.Microservice.Models.PermissionsModel.CreatedOn
  name: CreatedOn
  href: api/User.Microservice.Models.PermissionsModel.html#User_Microservice_Models_PermissionsModel_CreatedOn
  commentId: P:User.Microservice.Models.PermissionsModel.CreatedOn
  fullName: User.Microservice.Models.PermissionsModel.CreatedOn
  nameWithType: PermissionsModel.CreatedOn
- uid: User.Microservice.Models.PermissionsModel.CreatedOn*
  name: CreatedOn
  href: api/User.Microservice.Models.PermissionsModel.html#User_Microservice_Models_PermissionsModel_CreatedOn_
  commentId: Overload:User.Microservice.Models.PermissionsModel.CreatedOn
  isSpec: "True"
  fullName: User.Microservice.Models.PermissionsModel.CreatedOn
  nameWithType: PermissionsModel.CreatedOn
- uid: User.Microservice.Models.PermissionsModel.ModifiedBy
  name: ModifiedBy
  href: api/User.Microservice.Models.PermissionsModel.html#User_Microservice_Models_PermissionsModel_ModifiedBy
  commentId: P:User.Microservice.Models.PermissionsModel.ModifiedBy
  fullName: User.Microservice.Models.PermissionsModel.ModifiedBy
  nameWithType: PermissionsModel.ModifiedBy
- uid: User.Microservice.Models.PermissionsModel.ModifiedBy*
  name: ModifiedBy
  href: api/User.Microservice.Models.PermissionsModel.html#User_Microservice_Models_PermissionsModel_ModifiedBy_
  commentId: Overload:User.Microservice.Models.PermissionsModel.ModifiedBy
  isSpec: "True"
  fullName: User.Microservice.Models.PermissionsModel.ModifiedBy
  nameWithType: PermissionsModel.ModifiedBy
- uid: User.Microservice.Models.PermissionsModel.ModifiedOn
  name: ModifiedOn
  href: api/User.Microservice.Models.PermissionsModel.html#User_Microservice_Models_PermissionsModel_ModifiedOn
  commentId: P:User.Microservice.Models.PermissionsModel.ModifiedOn
  fullName: User.Microservice.Models.PermissionsModel.ModifiedOn
  nameWithType: PermissionsModel.ModifiedOn
- uid: User.Microservice.Models.PermissionsModel.ModifiedOn*
  name: ModifiedOn
  href: api/User.Microservice.Models.PermissionsModel.html#User_Microservice_Models_PermissionsModel_ModifiedOn_
  commentId: Overload:User.Microservice.Models.PermissionsModel.ModifiedOn
  isSpec: "True"
  fullName: User.Microservice.Models.PermissionsModel.ModifiedOn
  nameWithType: PermissionsModel.ModifiedOn
- uid: User.Microservice.Models.PermissionsModel.PermissionDescription
  name: PermissionDescription
  href: api/User.Microservice.Models.PermissionsModel.html#User_Microservice_Models_PermissionsModel_PermissionDescription
  commentId: P:User.Microservice.Models.PermissionsModel.PermissionDescription
  fullName: User.Microservice.Models.PermissionsModel.PermissionDescription
  nameWithType: PermissionsModel.PermissionDescription
- uid: User.Microservice.Models.PermissionsModel.PermissionDescription*
  name: PermissionDescription
  href: api/User.Microservice.Models.PermissionsModel.html#User_Microservice_Models_PermissionsModel_PermissionDescription_
  commentId: Overload:User.Microservice.Models.PermissionsModel.PermissionDescription
  isSpec: "True"
  fullName: User.Microservice.Models.PermissionsModel.PermissionDescription
  nameWithType: PermissionsModel.PermissionDescription
- uid: User.Microservice.Models.PermissionsModel.PermissionID
  name: PermissionID
  href: api/User.Microservice.Models.PermissionsModel.html#User_Microservice_Models_PermissionsModel_PermissionID
  commentId: P:User.Microservice.Models.PermissionsModel.PermissionID
  fullName: User.Microservice.Models.PermissionsModel.PermissionID
  nameWithType: PermissionsModel.PermissionID
- uid: User.Microservice.Models.PermissionsModel.PermissionID*
  name: PermissionID
  href: api/User.Microservice.Models.PermissionsModel.html#User_Microservice_Models_PermissionsModel_PermissionID_
  commentId: Overload:User.Microservice.Models.PermissionsModel.PermissionID
  isSpec: "True"
  fullName: User.Microservice.Models.PermissionsModel.PermissionID
  nameWithType: PermissionsModel.PermissionID
- uid: User.Microservice.Models.PermissionsModel.PermissionName
  name: PermissionName
  href: api/User.Microservice.Models.PermissionsModel.html#User_Microservice_Models_PermissionsModel_PermissionName
  commentId: P:User.Microservice.Models.PermissionsModel.PermissionName
  fullName: User.Microservice.Models.PermissionsModel.PermissionName
  nameWithType: PermissionsModel.PermissionName
- uid: User.Microservice.Models.PermissionsModel.PermissionName*
  name: PermissionName
  href: api/User.Microservice.Models.PermissionsModel.html#User_Microservice_Models_PermissionsModel_PermissionName_
  commentId: Overload:User.Microservice.Models.PermissionsModel.PermissionName
  isSpec: "True"
  fullName: User.Microservice.Models.PermissionsModel.PermissionName
  nameWithType: PermissionsModel.PermissionName
- uid: User.Microservice.Models.PermissionsModel.PermissionStatusID
  name: PermissionStatusID
  href: api/User.Microservice.Models.PermissionsModel.html#User_Microservice_Models_PermissionsModel_PermissionStatusID
  commentId: P:User.Microservice.Models.PermissionsModel.PermissionStatusID
  fullName: User.Microservice.Models.PermissionsModel.PermissionStatusID
  nameWithType: PermissionsModel.PermissionStatusID
- uid: User.Microservice.Models.PermissionsModel.PermissionStatusID*
  name: PermissionStatusID
  href: api/User.Microservice.Models.PermissionsModel.html#User_Microservice_Models_PermissionsModel_PermissionStatusID_
  commentId: Overload:User.Microservice.Models.PermissionsModel.PermissionStatusID
  isSpec: "True"
  fullName: User.Microservice.Models.PermissionsModel.PermissionStatusID
  nameWithType: PermissionsModel.PermissionStatusID
- uid: User.Microservice.Models.PermissionStatusModel
  name: PermissionStatusModel
  href: api/User.Microservice.Models.PermissionStatusModel.html
  commentId: T:User.Microservice.Models.PermissionStatusModel
  fullName: User.Microservice.Models.PermissionStatusModel
  nameWithType: PermissionStatusModel
- uid: User.Microservice.Models.PermissionStatusModel.CreatedBy
  name: CreatedBy
  href: api/User.Microservice.Models.PermissionStatusModel.html#User_Microservice_Models_PermissionStatusModel_CreatedBy
  commentId: P:User.Microservice.Models.PermissionStatusModel.CreatedBy
  fullName: User.Microservice.Models.PermissionStatusModel.CreatedBy
  nameWithType: PermissionStatusModel.CreatedBy
- uid: User.Microservice.Models.PermissionStatusModel.CreatedBy*
  name: CreatedBy
  href: api/User.Microservice.Models.PermissionStatusModel.html#User_Microservice_Models_PermissionStatusModel_CreatedBy_
  commentId: Overload:User.Microservice.Models.PermissionStatusModel.CreatedBy
  isSpec: "True"
  fullName: User.Microservice.Models.PermissionStatusModel.CreatedBy
  nameWithType: PermissionStatusModel.CreatedBy
- uid: User.Microservice.Models.PermissionStatusModel.CreatedOn
  name: CreatedOn
  href: api/User.Microservice.Models.PermissionStatusModel.html#User_Microservice_Models_PermissionStatusModel_CreatedOn
  commentId: P:User.Microservice.Models.PermissionStatusModel.CreatedOn
  fullName: User.Microservice.Models.PermissionStatusModel.CreatedOn
  nameWithType: PermissionStatusModel.CreatedOn
- uid: User.Microservice.Models.PermissionStatusModel.CreatedOn*
  name: CreatedOn
  href: api/User.Microservice.Models.PermissionStatusModel.html#User_Microservice_Models_PermissionStatusModel_CreatedOn_
  commentId: Overload:User.Microservice.Models.PermissionStatusModel.CreatedOn
  isSpec: "True"
  fullName: User.Microservice.Models.PermissionStatusModel.CreatedOn
  nameWithType: PermissionStatusModel.CreatedOn
- uid: User.Microservice.Models.PermissionStatusModel.ModifiedBy
  name: ModifiedBy
  href: api/User.Microservice.Models.PermissionStatusModel.html#User_Microservice_Models_PermissionStatusModel_ModifiedBy
  commentId: P:User.Microservice.Models.PermissionStatusModel.ModifiedBy
  fullName: User.Microservice.Models.PermissionStatusModel.ModifiedBy
  nameWithType: PermissionStatusModel.ModifiedBy
- uid: User.Microservice.Models.PermissionStatusModel.ModifiedBy*
  name: ModifiedBy
  href: api/User.Microservice.Models.PermissionStatusModel.html#User_Microservice_Models_PermissionStatusModel_ModifiedBy_
  commentId: Overload:User.Microservice.Models.PermissionStatusModel.ModifiedBy
  isSpec: "True"
  fullName: User.Microservice.Models.PermissionStatusModel.ModifiedBy
  nameWithType: PermissionStatusModel.ModifiedBy
- uid: User.Microservice.Models.PermissionStatusModel.ModifiedOn
  name: ModifiedOn
  href: api/User.Microservice.Models.PermissionStatusModel.html#User_Microservice_Models_PermissionStatusModel_ModifiedOn
  commentId: P:User.Microservice.Models.PermissionStatusModel.ModifiedOn
  fullName: User.Microservice.Models.PermissionStatusModel.ModifiedOn
  nameWithType: PermissionStatusModel.ModifiedOn
- uid: User.Microservice.Models.PermissionStatusModel.ModifiedOn*
  name: ModifiedOn
  href: api/User.Microservice.Models.PermissionStatusModel.html#User_Microservice_Models_PermissionStatusModel_ModifiedOn_
  commentId: Overload:User.Microservice.Models.PermissionStatusModel.ModifiedOn
  isSpec: "True"
  fullName: User.Microservice.Models.PermissionStatusModel.ModifiedOn
  nameWithType: PermissionStatusModel.ModifiedOn
- uid: User.Microservice.Models.PermissionStatusModel.PermissionDescription
  name: PermissionDescription
  href: api/User.Microservice.Models.PermissionStatusModel.html#User_Microservice_Models_PermissionStatusModel_PermissionDescription
  commentId: P:User.Microservice.Models.PermissionStatusModel.PermissionDescription
  fullName: User.Microservice.Models.PermissionStatusModel.PermissionDescription
  nameWithType: PermissionStatusModel.PermissionDescription
- uid: User.Microservice.Models.PermissionStatusModel.PermissionDescription*
  name: PermissionDescription
  href: api/User.Microservice.Models.PermissionStatusModel.html#User_Microservice_Models_PermissionStatusModel_PermissionDescription_
  commentId: Overload:User.Microservice.Models.PermissionStatusModel.PermissionDescription
  isSpec: "True"
  fullName: User.Microservice.Models.PermissionStatusModel.PermissionDescription
  nameWithType: PermissionStatusModel.PermissionDescription
- uid: User.Microservice.Models.PermissionStatusModel.PermissionStatusID
  name: PermissionStatusID
  href: api/User.Microservice.Models.PermissionStatusModel.html#User_Microservice_Models_PermissionStatusModel_PermissionStatusID
  commentId: P:User.Microservice.Models.PermissionStatusModel.PermissionStatusID
  fullName: User.Microservice.Models.PermissionStatusModel.PermissionStatusID
  nameWithType: PermissionStatusModel.PermissionStatusID
- uid: User.Microservice.Models.PermissionStatusModel.PermissionStatusID*
  name: PermissionStatusID
  href: api/User.Microservice.Models.PermissionStatusModel.html#User_Microservice_Models_PermissionStatusModel_PermissionStatusID_
  commentId: Overload:User.Microservice.Models.PermissionStatusModel.PermissionStatusID
  isSpec: "True"
  fullName: User.Microservice.Models.PermissionStatusModel.PermissionStatusID
  nameWithType: PermissionStatusModel.PermissionStatusID
- uid: User.Microservice.Models.PermissionStatusModel.PermissionStatusName
  name: PermissionStatusName
  href: api/User.Microservice.Models.PermissionStatusModel.html#User_Microservice_Models_PermissionStatusModel_PermissionStatusName
  commentId: P:User.Microservice.Models.PermissionStatusModel.PermissionStatusName
  fullName: User.Microservice.Models.PermissionStatusModel.PermissionStatusName
  nameWithType: PermissionStatusModel.PermissionStatusName
- uid: User.Microservice.Models.PermissionStatusModel.PermissionStatusName*
  name: PermissionStatusName
  href: api/User.Microservice.Models.PermissionStatusModel.html#User_Microservice_Models_PermissionStatusModel_PermissionStatusName_
  commentId: Overload:User.Microservice.Models.PermissionStatusModel.PermissionStatusName
  isSpec: "True"
  fullName: User.Microservice.Models.PermissionStatusModel.PermissionStatusName
  nameWithType: PermissionStatusModel.PermissionStatusName
- uid: User.Microservice.Models.PersonaCountyModel
  name: PersonaCountyModel
  href: api/User.Microservice.Models.PersonaCountyModel.html
  commentId: T:User.Microservice.Models.PersonaCountyModel
  fullName: User.Microservice.Models.PersonaCountyModel
  nameWithType: PersonaCountyModel
- uid: User.Microservice.Models.PersonaCountyModel.CreatedBy
  name: CreatedBy
  href: api/User.Microservice.Models.PersonaCountyModel.html#User_Microservice_Models_PersonaCountyModel_CreatedBy
  commentId: P:User.Microservice.Models.PersonaCountyModel.CreatedBy
  fullName: User.Microservice.Models.PersonaCountyModel.CreatedBy
  nameWithType: PersonaCountyModel.CreatedBy
- uid: User.Microservice.Models.PersonaCountyModel.CreatedBy*
  name: CreatedBy
  href: api/User.Microservice.Models.PersonaCountyModel.html#User_Microservice_Models_PersonaCountyModel_CreatedBy_
  commentId: Overload:User.Microservice.Models.PersonaCountyModel.CreatedBy
  isSpec: "True"
  fullName: User.Microservice.Models.PersonaCountyModel.CreatedBy
  nameWithType: PersonaCountyModel.CreatedBy
- uid: User.Microservice.Models.PersonaCountyModel.CreatedOn
  name: CreatedOn
  href: api/User.Microservice.Models.PersonaCountyModel.html#User_Microservice_Models_PersonaCountyModel_CreatedOn
  commentId: P:User.Microservice.Models.PersonaCountyModel.CreatedOn
  fullName: User.Microservice.Models.PersonaCountyModel.CreatedOn
  nameWithType: PersonaCountyModel.CreatedOn
- uid: User.Microservice.Models.PersonaCountyModel.CreatedOn*
  name: CreatedOn
  href: api/User.Microservice.Models.PersonaCountyModel.html#User_Microservice_Models_PersonaCountyModel_CreatedOn_
  commentId: Overload:User.Microservice.Models.PersonaCountyModel.CreatedOn
  isSpec: "True"
  fullName: User.Microservice.Models.PersonaCountyModel.CreatedOn
  nameWithType: PersonaCountyModel.CreatedOn
- uid: User.Microservice.Models.PersonaCountyModel.ModifiedBy
  name: ModifiedBy
  href: api/User.Microservice.Models.PersonaCountyModel.html#User_Microservice_Models_PersonaCountyModel_ModifiedBy
  commentId: P:User.Microservice.Models.PersonaCountyModel.ModifiedBy
  fullName: User.Microservice.Models.PersonaCountyModel.ModifiedBy
  nameWithType: PersonaCountyModel.ModifiedBy
- uid: User.Microservice.Models.PersonaCountyModel.ModifiedBy*
  name: ModifiedBy
  href: api/User.Microservice.Models.PersonaCountyModel.html#User_Microservice_Models_PersonaCountyModel_ModifiedBy_
  commentId: Overload:User.Microservice.Models.PersonaCountyModel.ModifiedBy
  isSpec: "True"
  fullName: User.Microservice.Models.PersonaCountyModel.ModifiedBy
  nameWithType: PersonaCountyModel.ModifiedBy
- uid: User.Microservice.Models.PersonaCountyModel.ModifiedOn
  name: ModifiedOn
  href: api/User.Microservice.Models.PersonaCountyModel.html#User_Microservice_Models_PersonaCountyModel_ModifiedOn
  commentId: P:User.Microservice.Models.PersonaCountyModel.ModifiedOn
  fullName: User.Microservice.Models.PersonaCountyModel.ModifiedOn
  nameWithType: PersonaCountyModel.ModifiedOn
- uid: User.Microservice.Models.PersonaCountyModel.ModifiedOn*
  name: ModifiedOn
  href: api/User.Microservice.Models.PersonaCountyModel.html#User_Microservice_Models_PersonaCountyModel_ModifiedOn_
  commentId: Overload:User.Microservice.Models.PersonaCountyModel.ModifiedOn
  isSpec: "True"
  fullName: User.Microservice.Models.PersonaCountyModel.ModifiedOn
  nameWithType: PersonaCountyModel.ModifiedOn
- uid: User.Microservice.Models.PersonaCountyModel.PersonaCountyCode
  name: PersonaCountyCode
  href: api/User.Microservice.Models.PersonaCountyModel.html#User_Microservice_Models_PersonaCountyModel_PersonaCountyCode
  commentId: P:User.Microservice.Models.PersonaCountyModel.PersonaCountyCode
  fullName: User.Microservice.Models.PersonaCountyModel.PersonaCountyCode
  nameWithType: PersonaCountyModel.PersonaCountyCode
- uid: User.Microservice.Models.PersonaCountyModel.PersonaCountyCode*
  name: PersonaCountyCode
  href: api/User.Microservice.Models.PersonaCountyModel.html#User_Microservice_Models_PersonaCountyModel_PersonaCountyCode_
  commentId: Overload:User.Microservice.Models.PersonaCountyModel.PersonaCountyCode
  isSpec: "True"
  fullName: User.Microservice.Models.PersonaCountyModel.PersonaCountyCode
  nameWithType: PersonaCountyModel.PersonaCountyCode
- uid: User.Microservice.Models.PersonaCountyModel.PersonaCountyID
  name: PersonaCountyID
  href: api/User.Microservice.Models.PersonaCountyModel.html#User_Microservice_Models_PersonaCountyModel_PersonaCountyID
  commentId: P:User.Microservice.Models.PersonaCountyModel.PersonaCountyID
  fullName: User.Microservice.Models.PersonaCountyModel.PersonaCountyID
  nameWithType: PersonaCountyModel.PersonaCountyID
- uid: User.Microservice.Models.PersonaCountyModel.PersonaCountyID*
  name: PersonaCountyID
  href: api/User.Microservice.Models.PersonaCountyModel.html#User_Microservice_Models_PersonaCountyModel_PersonaCountyID_
  commentId: Overload:User.Microservice.Models.PersonaCountyModel.PersonaCountyID
  isSpec: "True"
  fullName: User.Microservice.Models.PersonaCountyModel.PersonaCountyID
  nameWithType: PersonaCountyModel.PersonaCountyID
- uid: User.Microservice.Models.PersonaCountyModel.PersonaCountyName
  name: PersonaCountyName
  href: api/User.Microservice.Models.PersonaCountyModel.html#User_Microservice_Models_PersonaCountyModel_PersonaCountyName
  commentId: P:User.Microservice.Models.PersonaCountyModel.PersonaCountyName
  fullName: User.Microservice.Models.PersonaCountyModel.PersonaCountyName
  nameWithType: PersonaCountyModel.PersonaCountyName
- uid: User.Microservice.Models.PersonaCountyModel.PersonaCountyName*
  name: PersonaCountyName
  href: api/User.Microservice.Models.PersonaCountyModel.html#User_Microservice_Models_PersonaCountyModel_PersonaCountyName_
  commentId: Overload:User.Microservice.Models.PersonaCountyModel.PersonaCountyName
  isSpec: "True"
  fullName: User.Microservice.Models.PersonaCountyModel.PersonaCountyName
  nameWithType: PersonaCountyModel.PersonaCountyName
- uid: User.Microservice.Models.PersonaModel
  name: PersonaModel
  href: api/User.Microservice.Models.PersonaModel.html
  commentId: T:User.Microservice.Models.PersonaModel
  fullName: User.Microservice.Models.PersonaModel
  nameWithType: PersonaModel
- uid: User.Microservice.Models.PersonaModel.CreatedBy
  name: CreatedBy
  href: api/User.Microservice.Models.PersonaModel.html#User_Microservice_Models_PersonaModel_CreatedBy
  commentId: P:User.Microservice.Models.PersonaModel.CreatedBy
  fullName: User.Microservice.Models.PersonaModel.CreatedBy
  nameWithType: PersonaModel.CreatedBy
- uid: User.Microservice.Models.PersonaModel.CreatedBy*
  name: CreatedBy
  href: api/User.Microservice.Models.PersonaModel.html#User_Microservice_Models_PersonaModel_CreatedBy_
  commentId: Overload:User.Microservice.Models.PersonaModel.CreatedBy
  isSpec: "True"
  fullName: User.Microservice.Models.PersonaModel.CreatedBy
  nameWithType: PersonaModel.CreatedBy
- uid: User.Microservice.Models.PersonaModel.CreatedOn
  name: CreatedOn
  href: api/User.Microservice.Models.PersonaModel.html#User_Microservice_Models_PersonaModel_CreatedOn
  commentId: P:User.Microservice.Models.PersonaModel.CreatedOn
  fullName: User.Microservice.Models.PersonaModel.CreatedOn
  nameWithType: PersonaModel.CreatedOn
- uid: User.Microservice.Models.PersonaModel.CreatedOn*
  name: CreatedOn
  href: api/User.Microservice.Models.PersonaModel.html#User_Microservice_Models_PersonaModel_CreatedOn_
  commentId: Overload:User.Microservice.Models.PersonaModel.CreatedOn
  isSpec: "True"
  fullName: User.Microservice.Models.PersonaModel.CreatedOn
  nameWithType: PersonaModel.CreatedOn
- uid: User.Microservice.Models.PersonaModel.FirstName
  name: FirstName
  href: api/User.Microservice.Models.PersonaModel.html#User_Microservice_Models_PersonaModel_FirstName
  commentId: P:User.Microservice.Models.PersonaModel.FirstName
  fullName: User.Microservice.Models.PersonaModel.FirstName
  nameWithType: PersonaModel.FirstName
- uid: User.Microservice.Models.PersonaModel.FirstName*
  name: FirstName
  href: api/User.Microservice.Models.PersonaModel.html#User_Microservice_Models_PersonaModel_FirstName_
  commentId: Overload:User.Microservice.Models.PersonaModel.FirstName
  isSpec: "True"
  fullName: User.Microservice.Models.PersonaModel.FirstName
  nameWithType: PersonaModel.FirstName
- uid: User.Microservice.Models.PersonaModel.LastName
  name: LastName
  href: api/User.Microservice.Models.PersonaModel.html#User_Microservice_Models_PersonaModel_LastName
  commentId: P:User.Microservice.Models.PersonaModel.LastName
  fullName: User.Microservice.Models.PersonaModel.LastName
  nameWithType: PersonaModel.LastName
- uid: User.Microservice.Models.PersonaModel.LastName*
  name: LastName
  href: api/User.Microservice.Models.PersonaModel.html#User_Microservice_Models_PersonaModel_LastName_
  commentId: Overload:User.Microservice.Models.PersonaModel.LastName
  isSpec: "True"
  fullName: User.Microservice.Models.PersonaModel.LastName
  nameWithType: PersonaModel.LastName
- uid: User.Microservice.Models.PersonaModel.ModifiedBy
  name: ModifiedBy
  href: api/User.Microservice.Models.PersonaModel.html#User_Microservice_Models_PersonaModel_ModifiedBy
  commentId: P:User.Microservice.Models.PersonaModel.ModifiedBy
  fullName: User.Microservice.Models.PersonaModel.ModifiedBy
  nameWithType: PersonaModel.ModifiedBy
- uid: User.Microservice.Models.PersonaModel.ModifiedBy*
  name: ModifiedBy
  href: api/User.Microservice.Models.PersonaModel.html#User_Microservice_Models_PersonaModel_ModifiedBy_
  commentId: Overload:User.Microservice.Models.PersonaModel.ModifiedBy
  isSpec: "True"
  fullName: User.Microservice.Models.PersonaModel.ModifiedBy
  nameWithType: PersonaModel.ModifiedBy
- uid: User.Microservice.Models.PersonaModel.ModifiedOn
  name: ModifiedOn
  href: api/User.Microservice.Models.PersonaModel.html#User_Microservice_Models_PersonaModel_ModifiedOn
  commentId: P:User.Microservice.Models.PersonaModel.ModifiedOn
  fullName: User.Microservice.Models.PersonaModel.ModifiedOn
  nameWithType: PersonaModel.ModifiedOn
- uid: User.Microservice.Models.PersonaModel.ModifiedOn*
  name: ModifiedOn
  href: api/User.Microservice.Models.PersonaModel.html#User_Microservice_Models_PersonaModel_ModifiedOn_
  commentId: Overload:User.Microservice.Models.PersonaModel.ModifiedOn
  isSpec: "True"
  fullName: User.Microservice.Models.PersonaModel.ModifiedOn
  nameWithType: PersonaModel.ModifiedOn
- uid: User.Microservice.Models.PersonaModel.PersonaAddress
  name: PersonaAddress
  href: api/User.Microservice.Models.PersonaModel.html#User_Microservice_Models_PersonaModel_PersonaAddress
  commentId: P:User.Microservice.Models.PersonaModel.PersonaAddress
  fullName: User.Microservice.Models.PersonaModel.PersonaAddress
  nameWithType: PersonaModel.PersonaAddress
- uid: User.Microservice.Models.PersonaModel.PersonaAddress*
  name: PersonaAddress
  href: api/User.Microservice.Models.PersonaModel.html#User_Microservice_Models_PersonaModel_PersonaAddress_
  commentId: Overload:User.Microservice.Models.PersonaModel.PersonaAddress
  isSpec: "True"
  fullName: User.Microservice.Models.PersonaModel.PersonaAddress
  nameWithType: PersonaModel.PersonaAddress
- uid: User.Microservice.Models.PersonaModel.PersonaCountyID
  name: PersonaCountyID
  href: api/User.Microservice.Models.PersonaModel.html#User_Microservice_Models_PersonaModel_PersonaCountyID
  commentId: P:User.Microservice.Models.PersonaModel.PersonaCountyID
  fullName: User.Microservice.Models.PersonaModel.PersonaCountyID
  nameWithType: PersonaModel.PersonaCountyID
- uid: User.Microservice.Models.PersonaModel.PersonaCountyID*
  name: PersonaCountyID
  href: api/User.Microservice.Models.PersonaModel.html#User_Microservice_Models_PersonaModel_PersonaCountyID_
  commentId: Overload:User.Microservice.Models.PersonaModel.PersonaCountyID
  isSpec: "True"
  fullName: User.Microservice.Models.PersonaModel.PersonaCountyID
  nameWithType: PersonaModel.PersonaCountyID
- uid: User.Microservice.Models.PersonaModel.PersonaDateOfBirth
  name: PersonaDateOfBirth
  href: api/User.Microservice.Models.PersonaModel.html#User_Microservice_Models_PersonaModel_PersonaDateOfBirth
  commentId: P:User.Microservice.Models.PersonaModel.PersonaDateOfBirth
  fullName: User.Microservice.Models.PersonaModel.PersonaDateOfBirth
  nameWithType: PersonaModel.PersonaDateOfBirth
- uid: User.Microservice.Models.PersonaModel.PersonaDateOfBirth*
  name: PersonaDateOfBirth
  href: api/User.Microservice.Models.PersonaModel.html#User_Microservice_Models_PersonaModel_PersonaDateOfBirth_
  commentId: Overload:User.Microservice.Models.PersonaModel.PersonaDateOfBirth
  isSpec: "True"
  fullName: User.Microservice.Models.PersonaModel.PersonaDateOfBirth
  nameWithType: PersonaModel.PersonaDateOfBirth
- uid: User.Microservice.Models.PersonaModel.PersonaEmailAddress
  name: PersonaEmailAddress
  href: api/User.Microservice.Models.PersonaModel.html#User_Microservice_Models_PersonaModel_PersonaEmailAddress
  commentId: P:User.Microservice.Models.PersonaModel.PersonaEmailAddress
  fullName: User.Microservice.Models.PersonaModel.PersonaEmailAddress
  nameWithType: PersonaModel.PersonaEmailAddress
- uid: User.Microservice.Models.PersonaModel.PersonaEmailAddress*
  name: PersonaEmailAddress
  href: api/User.Microservice.Models.PersonaModel.html#User_Microservice_Models_PersonaModel_PersonaEmailAddress_
  commentId: Overload:User.Microservice.Models.PersonaModel.PersonaEmailAddress
  isSpec: "True"
  fullName: User.Microservice.Models.PersonaModel.PersonaEmailAddress
  nameWithType: PersonaModel.PersonaEmailAddress
- uid: User.Microservice.Models.PersonaModel.PersonaGender
  name: PersonaGender
  href: api/User.Microservice.Models.PersonaModel.html#User_Microservice_Models_PersonaModel_PersonaGender
  commentId: P:User.Microservice.Models.PersonaModel.PersonaGender
  fullName: User.Microservice.Models.PersonaModel.PersonaGender
  nameWithType: PersonaModel.PersonaGender
- uid: User.Microservice.Models.PersonaModel.PersonaGender*
  name: PersonaGender
  href: api/User.Microservice.Models.PersonaModel.html#User_Microservice_Models_PersonaModel_PersonaGender_
  commentId: Overload:User.Microservice.Models.PersonaModel.PersonaGender
  isSpec: "True"
  fullName: User.Microservice.Models.PersonaModel.PersonaGender
  nameWithType: PersonaModel.PersonaGender
- uid: User.Microservice.Models.PersonaModel.PersonaID
  name: PersonaID
  href: api/User.Microservice.Models.PersonaModel.html#User_Microservice_Models_PersonaModel_PersonaID
  commentId: P:User.Microservice.Models.PersonaModel.PersonaID
  fullName: User.Microservice.Models.PersonaModel.PersonaID
  nameWithType: PersonaModel.PersonaID
- uid: User.Microservice.Models.PersonaModel.PersonaID*
  name: PersonaID
  href: api/User.Microservice.Models.PersonaModel.html#User_Microservice_Models_PersonaModel_PersonaID_
  commentId: Overload:User.Microservice.Models.PersonaModel.PersonaID
  isSpec: "True"
  fullName: User.Microservice.Models.PersonaModel.PersonaID
  nameWithType: PersonaModel.PersonaID
- uid: User.Microservice.Models.PersonaModel.PersonaImageUrl
  name: PersonaImageUrl
  href: api/User.Microservice.Models.PersonaModel.html#User_Microservice_Models_PersonaModel_PersonaImageUrl
  commentId: P:User.Microservice.Models.PersonaModel.PersonaImageUrl
  fullName: User.Microservice.Models.PersonaModel.PersonaImageUrl
  nameWithType: PersonaModel.PersonaImageUrl
- uid: User.Microservice.Models.PersonaModel.PersonaImageUrl*
  name: PersonaImageUrl
  href: api/User.Microservice.Models.PersonaModel.html#User_Microservice_Models_PersonaModel_PersonaImageUrl_
  commentId: Overload:User.Microservice.Models.PersonaModel.PersonaImageUrl
  isSpec: "True"
  fullName: User.Microservice.Models.PersonaModel.PersonaImageUrl
  nameWithType: PersonaModel.PersonaImageUrl
- uid: User.Microservice.Models.PersonaModel.PersonaNickName
  name: PersonaNickName
  href: api/User.Microservice.Models.PersonaModel.html#User_Microservice_Models_PersonaModel_PersonaNickName
  commentId: P:User.Microservice.Models.PersonaModel.PersonaNickName
  fullName: User.Microservice.Models.PersonaModel.PersonaNickName
  nameWithType: PersonaModel.PersonaNickName
- uid: User.Microservice.Models.PersonaModel.PersonaNickName*
  name: PersonaNickName
  href: api/User.Microservice.Models.PersonaModel.html#User_Microservice_Models_PersonaModel_PersonaNickName_
  commentId: Overload:User.Microservice.Models.PersonaModel.PersonaNickName
  isSpec: "True"
  fullName: User.Microservice.Models.PersonaModel.PersonaNickName
  nameWithType: PersonaModel.PersonaNickName
- uid: User.Microservice.Models.PersonaModel.PersonaOccupation
  name: PersonaOccupation
  href: api/User.Microservice.Models.PersonaModel.html#User_Microservice_Models_PersonaModel_PersonaOccupation
  commentId: P:User.Microservice.Models.PersonaModel.PersonaOccupation
  fullName: User.Microservice.Models.PersonaModel.PersonaOccupation
  nameWithType: PersonaModel.PersonaOccupation
- uid: User.Microservice.Models.PersonaModel.PersonaOccupation*
  name: PersonaOccupation
  href: api/User.Microservice.Models.PersonaModel.html#User_Microservice_Models_PersonaModel_PersonaOccupation_
  commentId: Overload:User.Microservice.Models.PersonaModel.PersonaOccupation
  isSpec: "True"
  fullName: User.Microservice.Models.PersonaModel.PersonaOccupation
  nameWithType: PersonaModel.PersonaOccupation
- uid: User.Microservice.Models.PersonaModel.PersonaStateID
  name: PersonaStateID
  href: api/User.Microservice.Models.PersonaModel.html#User_Microservice_Models_PersonaModel_PersonaStateID
  commentId: P:User.Microservice.Models.PersonaModel.PersonaStateID
  fullName: User.Microservice.Models.PersonaModel.PersonaStateID
  nameWithType: PersonaModel.PersonaStateID
- uid: User.Microservice.Models.PersonaModel.PersonaStateID*
  name: PersonaStateID
  href: api/User.Microservice.Models.PersonaModel.html#User_Microservice_Models_PersonaModel_PersonaStateID_
  commentId: Overload:User.Microservice.Models.PersonaModel.PersonaStateID
  isSpec: "True"
  fullName: User.Microservice.Models.PersonaModel.PersonaStateID
  nameWithType: PersonaModel.PersonaStateID
- uid: User.Microservice.Models.PersonaModel.PersonaStatusID
  name: PersonaStatusID
  href: api/User.Microservice.Models.PersonaModel.html#User_Microservice_Models_PersonaModel_PersonaStatusID
  commentId: P:User.Microservice.Models.PersonaModel.PersonaStatusID
  fullName: User.Microservice.Models.PersonaModel.PersonaStatusID
  nameWithType: PersonaModel.PersonaStatusID
- uid: User.Microservice.Models.PersonaModel.PersonaStatusID*
  name: PersonaStatusID
  href: api/User.Microservice.Models.PersonaModel.html#User_Microservice_Models_PersonaModel_PersonaStatusID_
  commentId: Overload:User.Microservice.Models.PersonaModel.PersonaStatusID
  isSpec: "True"
  fullName: User.Microservice.Models.PersonaModel.PersonaStatusID
  nameWithType: PersonaModel.PersonaStatusID
- uid: User.Microservice.Models.PersonaModel.PortalID
  name: PortalID
  href: api/User.Microservice.Models.PersonaModel.html#User_Microservice_Models_PersonaModel_PortalID
  commentId: P:User.Microservice.Models.PersonaModel.PortalID
  fullName: User.Microservice.Models.PersonaModel.PortalID
  nameWithType: PersonaModel.PortalID
- uid: User.Microservice.Models.PersonaModel.PortalID*
  name: PortalID
  href: api/User.Microservice.Models.PersonaModel.html#User_Microservice_Models_PersonaModel_PortalID_
  commentId: Overload:User.Microservice.Models.PersonaModel.PortalID
  isSpec: "True"
  fullName: User.Microservice.Models.PersonaModel.PortalID
  nameWithType: PersonaModel.PortalID
- uid: User.Microservice.Models.PersonaModel.TuvimaEmailAddress
  name: TuvimaEmailAddress
  href: api/User.Microservice.Models.PersonaModel.html#User_Microservice_Models_PersonaModel_TuvimaEmailAddress
  commentId: P:User.Microservice.Models.PersonaModel.TuvimaEmailAddress
  fullName: User.Microservice.Models.PersonaModel.TuvimaEmailAddress
  nameWithType: PersonaModel.TuvimaEmailAddress
- uid: User.Microservice.Models.PersonaModel.TuvimaEmailAddress*
  name: TuvimaEmailAddress
  href: api/User.Microservice.Models.PersonaModel.html#User_Microservice_Models_PersonaModel_TuvimaEmailAddress_
  commentId: Overload:User.Microservice.Models.PersonaModel.TuvimaEmailAddress
  isSpec: "True"
  fullName: User.Microservice.Models.PersonaModel.TuvimaEmailAddress
  nameWithType: PersonaModel.TuvimaEmailAddress
- uid: User.Microservice.Models.PersonaStateModel
  name: PersonaStateModel
  href: api/User.Microservice.Models.PersonaStateModel.html
  commentId: T:User.Microservice.Models.PersonaStateModel
  fullName: User.Microservice.Models.PersonaStateModel
  nameWithType: PersonaStateModel
- uid: User.Microservice.Models.PersonaStateModel.CreatedBy
  name: CreatedBy
  href: api/User.Microservice.Models.PersonaStateModel.html#User_Microservice_Models_PersonaStateModel_CreatedBy
  commentId: P:User.Microservice.Models.PersonaStateModel.CreatedBy
  fullName: User.Microservice.Models.PersonaStateModel.CreatedBy
  nameWithType: PersonaStateModel.CreatedBy
- uid: User.Microservice.Models.PersonaStateModel.CreatedBy*
  name: CreatedBy
  href: api/User.Microservice.Models.PersonaStateModel.html#User_Microservice_Models_PersonaStateModel_CreatedBy_
  commentId: Overload:User.Microservice.Models.PersonaStateModel.CreatedBy
  isSpec: "True"
  fullName: User.Microservice.Models.PersonaStateModel.CreatedBy
  nameWithType: PersonaStateModel.CreatedBy
- uid: User.Microservice.Models.PersonaStateModel.CreatedOn
  name: CreatedOn
  href: api/User.Microservice.Models.PersonaStateModel.html#User_Microservice_Models_PersonaStateModel_CreatedOn
  commentId: P:User.Microservice.Models.PersonaStateModel.CreatedOn
  fullName: User.Microservice.Models.PersonaStateModel.CreatedOn
  nameWithType: PersonaStateModel.CreatedOn
- uid: User.Microservice.Models.PersonaStateModel.CreatedOn*
  name: CreatedOn
  href: api/User.Microservice.Models.PersonaStateModel.html#User_Microservice_Models_PersonaStateModel_CreatedOn_
  commentId: Overload:User.Microservice.Models.PersonaStateModel.CreatedOn
  isSpec: "True"
  fullName: User.Microservice.Models.PersonaStateModel.CreatedOn
  nameWithType: PersonaStateModel.CreatedOn
- uid: User.Microservice.Models.PersonaStateModel.ModifiedBy
  name: ModifiedBy
  href: api/User.Microservice.Models.PersonaStateModel.html#User_Microservice_Models_PersonaStateModel_ModifiedBy
  commentId: P:User.Microservice.Models.PersonaStateModel.ModifiedBy
  fullName: User.Microservice.Models.PersonaStateModel.ModifiedBy
  nameWithType: PersonaStateModel.ModifiedBy
- uid: User.Microservice.Models.PersonaStateModel.ModifiedBy*
  name: ModifiedBy
  href: api/User.Microservice.Models.PersonaStateModel.html#User_Microservice_Models_PersonaStateModel_ModifiedBy_
  commentId: Overload:User.Microservice.Models.PersonaStateModel.ModifiedBy
  isSpec: "True"
  fullName: User.Microservice.Models.PersonaStateModel.ModifiedBy
  nameWithType: PersonaStateModel.ModifiedBy
- uid: User.Microservice.Models.PersonaStateModel.ModifiedOn
  name: ModifiedOn
  href: api/User.Microservice.Models.PersonaStateModel.html#User_Microservice_Models_PersonaStateModel_ModifiedOn
  commentId: P:User.Microservice.Models.PersonaStateModel.ModifiedOn
  fullName: User.Microservice.Models.PersonaStateModel.ModifiedOn
  nameWithType: PersonaStateModel.ModifiedOn
- uid: User.Microservice.Models.PersonaStateModel.ModifiedOn*
  name: ModifiedOn
  href: api/User.Microservice.Models.PersonaStateModel.html#User_Microservice_Models_PersonaStateModel_ModifiedOn_
  commentId: Overload:User.Microservice.Models.PersonaStateModel.ModifiedOn
  isSpec: "True"
  fullName: User.Microservice.Models.PersonaStateModel.ModifiedOn
  nameWithType: PersonaStateModel.ModifiedOn
- uid: User.Microservice.Models.PersonaStateModel.PersonaStateCode
  name: PersonaStateCode
  href: api/User.Microservice.Models.PersonaStateModel.html#User_Microservice_Models_PersonaStateModel_PersonaStateCode
  commentId: P:User.Microservice.Models.PersonaStateModel.PersonaStateCode
  fullName: User.Microservice.Models.PersonaStateModel.PersonaStateCode
  nameWithType: PersonaStateModel.PersonaStateCode
- uid: User.Microservice.Models.PersonaStateModel.PersonaStateCode*
  name: PersonaStateCode
  href: api/User.Microservice.Models.PersonaStateModel.html#User_Microservice_Models_PersonaStateModel_PersonaStateCode_
  commentId: Overload:User.Microservice.Models.PersonaStateModel.PersonaStateCode
  isSpec: "True"
  fullName: User.Microservice.Models.PersonaStateModel.PersonaStateCode
  nameWithType: PersonaStateModel.PersonaStateCode
- uid: User.Microservice.Models.PersonaStateModel.PersonaStateID
  name: PersonaStateID
  href: api/User.Microservice.Models.PersonaStateModel.html#User_Microservice_Models_PersonaStateModel_PersonaStateID
  commentId: P:User.Microservice.Models.PersonaStateModel.PersonaStateID
  fullName: User.Microservice.Models.PersonaStateModel.PersonaStateID
  nameWithType: PersonaStateModel.PersonaStateID
- uid: User.Microservice.Models.PersonaStateModel.PersonaStateID*
  name: PersonaStateID
  href: api/User.Microservice.Models.PersonaStateModel.html#User_Microservice_Models_PersonaStateModel_PersonaStateID_
  commentId: Overload:User.Microservice.Models.PersonaStateModel.PersonaStateID
  isSpec: "True"
  fullName: User.Microservice.Models.PersonaStateModel.PersonaStateID
  nameWithType: PersonaStateModel.PersonaStateID
- uid: User.Microservice.Models.PersonaStateModel.PersonaStateName
  name: PersonaStateName
  href: api/User.Microservice.Models.PersonaStateModel.html#User_Microservice_Models_PersonaStateModel_PersonaStateName
  commentId: P:User.Microservice.Models.PersonaStateModel.PersonaStateName
  fullName: User.Microservice.Models.PersonaStateModel.PersonaStateName
  nameWithType: PersonaStateModel.PersonaStateName
- uid: User.Microservice.Models.PersonaStateModel.PersonaStateName*
  name: PersonaStateName
  href: api/User.Microservice.Models.PersonaStateModel.html#User_Microservice_Models_PersonaStateModel_PersonaStateName_
  commentId: Overload:User.Microservice.Models.PersonaStateModel.PersonaStateName
  isSpec: "True"
  fullName: User.Microservice.Models.PersonaStateModel.PersonaStateName
  nameWithType: PersonaStateModel.PersonaStateName
- uid: User.Microservice.Models.PersonaStatusModel
  name: PersonaStatusModel
  href: api/User.Microservice.Models.PersonaStatusModel.html
  commentId: T:User.Microservice.Models.PersonaStatusModel
  fullName: User.Microservice.Models.PersonaStatusModel
  nameWithType: PersonaStatusModel
- uid: User.Microservice.Models.PersonaStatusModel.CreatedBy
  name: CreatedBy
  href: api/User.Microservice.Models.PersonaStatusModel.html#User_Microservice_Models_PersonaStatusModel_CreatedBy
  commentId: P:User.Microservice.Models.PersonaStatusModel.CreatedBy
  fullName: User.Microservice.Models.PersonaStatusModel.CreatedBy
  nameWithType: PersonaStatusModel.CreatedBy
- uid: User.Microservice.Models.PersonaStatusModel.CreatedBy*
  name: CreatedBy
  href: api/User.Microservice.Models.PersonaStatusModel.html#User_Microservice_Models_PersonaStatusModel_CreatedBy_
  commentId: Overload:User.Microservice.Models.PersonaStatusModel.CreatedBy
  isSpec: "True"
  fullName: User.Microservice.Models.PersonaStatusModel.CreatedBy
  nameWithType: PersonaStatusModel.CreatedBy
- uid: User.Microservice.Models.PersonaStatusModel.CreatedOn
  name: CreatedOn
  href: api/User.Microservice.Models.PersonaStatusModel.html#User_Microservice_Models_PersonaStatusModel_CreatedOn
  commentId: P:User.Microservice.Models.PersonaStatusModel.CreatedOn
  fullName: User.Microservice.Models.PersonaStatusModel.CreatedOn
  nameWithType: PersonaStatusModel.CreatedOn
- uid: User.Microservice.Models.PersonaStatusModel.CreatedOn*
  name: CreatedOn
  href: api/User.Microservice.Models.PersonaStatusModel.html#User_Microservice_Models_PersonaStatusModel_CreatedOn_
  commentId: Overload:User.Microservice.Models.PersonaStatusModel.CreatedOn
  isSpec: "True"
  fullName: User.Microservice.Models.PersonaStatusModel.CreatedOn
  nameWithType: PersonaStatusModel.CreatedOn
- uid: User.Microservice.Models.PersonaStatusModel.ModifiedBy
  name: ModifiedBy
  href: api/User.Microservice.Models.PersonaStatusModel.html#User_Microservice_Models_PersonaStatusModel_ModifiedBy
  commentId: P:User.Microservice.Models.PersonaStatusModel.ModifiedBy
  fullName: User.Microservice.Models.PersonaStatusModel.ModifiedBy
  nameWithType: PersonaStatusModel.ModifiedBy
- uid: User.Microservice.Models.PersonaStatusModel.ModifiedBy*
  name: ModifiedBy
  href: api/User.Microservice.Models.PersonaStatusModel.html#User_Microservice_Models_PersonaStatusModel_ModifiedBy_
  commentId: Overload:User.Microservice.Models.PersonaStatusModel.ModifiedBy
  isSpec: "True"
  fullName: User.Microservice.Models.PersonaStatusModel.ModifiedBy
  nameWithType: PersonaStatusModel.ModifiedBy
- uid: User.Microservice.Models.PersonaStatusModel.ModifiedOn
  name: ModifiedOn
  href: api/User.Microservice.Models.PersonaStatusModel.html#User_Microservice_Models_PersonaStatusModel_ModifiedOn
  commentId: P:User.Microservice.Models.PersonaStatusModel.ModifiedOn
  fullName: User.Microservice.Models.PersonaStatusModel.ModifiedOn
  nameWithType: PersonaStatusModel.ModifiedOn
- uid: User.Microservice.Models.PersonaStatusModel.ModifiedOn*
  name: ModifiedOn
  href: api/User.Microservice.Models.PersonaStatusModel.html#User_Microservice_Models_PersonaStatusModel_ModifiedOn_
  commentId: Overload:User.Microservice.Models.PersonaStatusModel.ModifiedOn
  isSpec: "True"
  fullName: User.Microservice.Models.PersonaStatusModel.ModifiedOn
  nameWithType: PersonaStatusModel.ModifiedOn
- uid: User.Microservice.Models.PersonaStatusModel.PersonaStatusDescription
  name: PersonaStatusDescription
  href: api/User.Microservice.Models.PersonaStatusModel.html#User_Microservice_Models_PersonaStatusModel_PersonaStatusDescription
  commentId: P:User.Microservice.Models.PersonaStatusModel.PersonaStatusDescription
  fullName: User.Microservice.Models.PersonaStatusModel.PersonaStatusDescription
  nameWithType: PersonaStatusModel.PersonaStatusDescription
- uid: User.Microservice.Models.PersonaStatusModel.PersonaStatusDescription*
  name: PersonaStatusDescription
  href: api/User.Microservice.Models.PersonaStatusModel.html#User_Microservice_Models_PersonaStatusModel_PersonaStatusDescription_
  commentId: Overload:User.Microservice.Models.PersonaStatusModel.PersonaStatusDescription
  isSpec: "True"
  fullName: User.Microservice.Models.PersonaStatusModel.PersonaStatusDescription
  nameWithType: PersonaStatusModel.PersonaStatusDescription
- uid: User.Microservice.Models.PersonaStatusModel.PersonaStatusID
  name: PersonaStatusID
  href: api/User.Microservice.Models.PersonaStatusModel.html#User_Microservice_Models_PersonaStatusModel_PersonaStatusID
  commentId: P:User.Microservice.Models.PersonaStatusModel.PersonaStatusID
  fullName: User.Microservice.Models.PersonaStatusModel.PersonaStatusID
  nameWithType: PersonaStatusModel.PersonaStatusID
- uid: User.Microservice.Models.PersonaStatusModel.PersonaStatusID*
  name: PersonaStatusID
  href: api/User.Microservice.Models.PersonaStatusModel.html#User_Microservice_Models_PersonaStatusModel_PersonaStatusID_
  commentId: Overload:User.Microservice.Models.PersonaStatusModel.PersonaStatusID
  isSpec: "True"
  fullName: User.Microservice.Models.PersonaStatusModel.PersonaStatusID
  nameWithType: PersonaStatusModel.PersonaStatusID
- uid: User.Microservice.Models.PersonaStatusModel.PersonaStatusName
  name: PersonaStatusName
  href: api/User.Microservice.Models.PersonaStatusModel.html#User_Microservice_Models_PersonaStatusModel_PersonaStatusName
  commentId: P:User.Microservice.Models.PersonaStatusModel.PersonaStatusName
  fullName: User.Microservice.Models.PersonaStatusModel.PersonaStatusName
  nameWithType: PersonaStatusModel.PersonaStatusName
- uid: User.Microservice.Models.PersonaStatusModel.PersonaStatusName*
  name: PersonaStatusName
  href: api/User.Microservice.Models.PersonaStatusModel.html#User_Microservice_Models_PersonaStatusModel_PersonaStatusName_
  commentId: Overload:User.Microservice.Models.PersonaStatusModel.PersonaStatusName
  isSpec: "True"
  fullName: User.Microservice.Models.PersonaStatusModel.PersonaStatusName
  nameWithType: PersonaStatusModel.PersonaStatusName
- uid: User.Microservice.Models.PortalModel
  name: PortalModel
  href: api/User.Microservice.Models.PortalModel.html
  commentId: T:User.Microservice.Models.PortalModel
  fullName: User.Microservice.Models.PortalModel
  nameWithType: PortalModel
- uid: User.Microservice.Models.PortalModel.CreatedBy
  name: CreatedBy
  href: api/User.Microservice.Models.PortalModel.html#User_Microservice_Models_PortalModel_CreatedBy
  commentId: P:User.Microservice.Models.PortalModel.CreatedBy
  fullName: User.Microservice.Models.PortalModel.CreatedBy
  nameWithType: PortalModel.CreatedBy
- uid: User.Microservice.Models.PortalModel.CreatedBy*
  name: CreatedBy
  href: api/User.Microservice.Models.PortalModel.html#User_Microservice_Models_PortalModel_CreatedBy_
  commentId: Overload:User.Microservice.Models.PortalModel.CreatedBy
  isSpec: "True"
  fullName: User.Microservice.Models.PortalModel.CreatedBy
  nameWithType: PortalModel.CreatedBy
- uid: User.Microservice.Models.PortalModel.CreatedOn
  name: CreatedOn
  href: api/User.Microservice.Models.PortalModel.html#User_Microservice_Models_PortalModel_CreatedOn
  commentId: P:User.Microservice.Models.PortalModel.CreatedOn
  fullName: User.Microservice.Models.PortalModel.CreatedOn
  nameWithType: PortalModel.CreatedOn
- uid: User.Microservice.Models.PortalModel.CreatedOn*
  name: CreatedOn
  href: api/User.Microservice.Models.PortalModel.html#User_Microservice_Models_PortalModel_CreatedOn_
  commentId: Overload:User.Microservice.Models.PortalModel.CreatedOn
  isSpec: "True"
  fullName: User.Microservice.Models.PortalModel.CreatedOn
  nameWithType: PortalModel.CreatedOn
- uid: User.Microservice.Models.PortalModel.ModifiedBy
  name: ModifiedBy
  href: api/User.Microservice.Models.PortalModel.html#User_Microservice_Models_PortalModel_ModifiedBy
  commentId: P:User.Microservice.Models.PortalModel.ModifiedBy
  fullName: User.Microservice.Models.PortalModel.ModifiedBy
  nameWithType: PortalModel.ModifiedBy
- uid: User.Microservice.Models.PortalModel.ModifiedBy*
  name: ModifiedBy
  href: api/User.Microservice.Models.PortalModel.html#User_Microservice_Models_PortalModel_ModifiedBy_
  commentId: Overload:User.Microservice.Models.PortalModel.ModifiedBy
  isSpec: "True"
  fullName: User.Microservice.Models.PortalModel.ModifiedBy
  nameWithType: PortalModel.ModifiedBy
- uid: User.Microservice.Models.PortalModel.ModifiedOn
  name: ModifiedOn
  href: api/User.Microservice.Models.PortalModel.html#User_Microservice_Models_PortalModel_ModifiedOn
  commentId: P:User.Microservice.Models.PortalModel.ModifiedOn
  fullName: User.Microservice.Models.PortalModel.ModifiedOn
  nameWithType: PortalModel.ModifiedOn
- uid: User.Microservice.Models.PortalModel.ModifiedOn*
  name: ModifiedOn
  href: api/User.Microservice.Models.PortalModel.html#User_Microservice_Models_PortalModel_ModifiedOn_
  commentId: Overload:User.Microservice.Models.PortalModel.ModifiedOn
  isSpec: "True"
  fullName: User.Microservice.Models.PortalModel.ModifiedOn
  nameWithType: PortalModel.ModifiedOn
- uid: User.Microservice.Models.PortalModel.PortalDescription
  name: PortalDescription
  href: api/User.Microservice.Models.PortalModel.html#User_Microservice_Models_PortalModel_PortalDescription
  commentId: P:User.Microservice.Models.PortalModel.PortalDescription
  fullName: User.Microservice.Models.PortalModel.PortalDescription
  nameWithType: PortalModel.PortalDescription
- uid: User.Microservice.Models.PortalModel.PortalDescription*
  name: PortalDescription
  href: api/User.Microservice.Models.PortalModel.html#User_Microservice_Models_PortalModel_PortalDescription_
  commentId: Overload:User.Microservice.Models.PortalModel.PortalDescription
  isSpec: "True"
  fullName: User.Microservice.Models.PortalModel.PortalDescription
  nameWithType: PortalModel.PortalDescription
- uid: User.Microservice.Models.PortalModel.PortalID
  name: PortalID
  href: api/User.Microservice.Models.PortalModel.html#User_Microservice_Models_PortalModel_PortalID
  commentId: P:User.Microservice.Models.PortalModel.PortalID
  fullName: User.Microservice.Models.PortalModel.PortalID
  nameWithType: PortalModel.PortalID
- uid: User.Microservice.Models.PortalModel.PortalID*
  name: PortalID
  href: api/User.Microservice.Models.PortalModel.html#User_Microservice_Models_PortalModel_PortalID_
  commentId: Overload:User.Microservice.Models.PortalModel.PortalID
  isSpec: "True"
  fullName: User.Microservice.Models.PortalModel.PortalID
  nameWithType: PortalModel.PortalID
- uid: User.Microservice.Models.PortalModel.PortalName
  name: PortalName
  href: api/User.Microservice.Models.PortalModel.html#User_Microservice_Models_PortalModel_PortalName
  commentId: P:User.Microservice.Models.PortalModel.PortalName
  fullName: User.Microservice.Models.PortalModel.PortalName
  nameWithType: PortalModel.PortalName
- uid: User.Microservice.Models.PortalModel.PortalName*
  name: PortalName
  href: api/User.Microservice.Models.PortalModel.html#User_Microservice_Models_PortalModel_PortalName_
  commentId: Overload:User.Microservice.Models.PortalModel.PortalName
  isSpec: "True"
  fullName: User.Microservice.Models.PortalModel.PortalName
  nameWithType: PortalModel.PortalName
- uid: User.Microservice.Models.PortalModel.PortalUrl
  name: PortalUrl
  href: api/User.Microservice.Models.PortalModel.html#User_Microservice_Models_PortalModel_PortalUrl
  commentId: P:User.Microservice.Models.PortalModel.PortalUrl
  fullName: User.Microservice.Models.PortalModel.PortalUrl
  nameWithType: PortalModel.PortalUrl
- uid: User.Microservice.Models.PortalModel.PortalUrl*
  name: PortalUrl
  href: api/User.Microservice.Models.PortalModel.html#User_Microservice_Models_PortalModel_PortalUrl_
  commentId: Overload:User.Microservice.Models.PortalModel.PortalUrl
  isSpec: "True"
  fullName: User.Microservice.Models.PortalModel.PortalUrl
  nameWithType: PortalModel.PortalUrl
- uid: User.Microservice.Models.RolesMappingModel
  name: RolesMappingModel
  href: api/User.Microservice.Models.RolesMappingModel.html
  commentId: T:User.Microservice.Models.RolesMappingModel
  fullName: User.Microservice.Models.RolesMappingModel
  nameWithType: RolesMappingModel
- uid: User.Microservice.Models.RolesMappingModel.CreatedBy
  name: CreatedBy
  href: api/User.Microservice.Models.RolesMappingModel.html#User_Microservice_Models_RolesMappingModel_CreatedBy
  commentId: P:User.Microservice.Models.RolesMappingModel.CreatedBy
  fullName: User.Microservice.Models.RolesMappingModel.CreatedBy
  nameWithType: RolesMappingModel.CreatedBy
- uid: User.Microservice.Models.RolesMappingModel.CreatedBy*
  name: CreatedBy
  href: api/User.Microservice.Models.RolesMappingModel.html#User_Microservice_Models_RolesMappingModel_CreatedBy_
  commentId: Overload:User.Microservice.Models.RolesMappingModel.CreatedBy
  isSpec: "True"
  fullName: User.Microservice.Models.RolesMappingModel.CreatedBy
  nameWithType: RolesMappingModel.CreatedBy
- uid: User.Microservice.Models.RolesMappingModel.CreatedOn
  name: CreatedOn
  href: api/User.Microservice.Models.RolesMappingModel.html#User_Microservice_Models_RolesMappingModel_CreatedOn
  commentId: P:User.Microservice.Models.RolesMappingModel.CreatedOn
  fullName: User.Microservice.Models.RolesMappingModel.CreatedOn
  nameWithType: RolesMappingModel.CreatedOn
- uid: User.Microservice.Models.RolesMappingModel.CreatedOn*
  name: CreatedOn
  href: api/User.Microservice.Models.RolesMappingModel.html#User_Microservice_Models_RolesMappingModel_CreatedOn_
  commentId: Overload:User.Microservice.Models.RolesMappingModel.CreatedOn
  isSpec: "True"
  fullName: User.Microservice.Models.RolesMappingModel.CreatedOn
  nameWithType: RolesMappingModel.CreatedOn
- uid: User.Microservice.Models.RolesMappingModel.ModifiedBy
  name: ModifiedBy
  href: api/User.Microservice.Models.RolesMappingModel.html#User_Microservice_Models_RolesMappingModel_ModifiedBy
  commentId: P:User.Microservice.Models.RolesMappingModel.ModifiedBy
  fullName: User.Microservice.Models.RolesMappingModel.ModifiedBy
  nameWithType: RolesMappingModel.ModifiedBy
- uid: User.Microservice.Models.RolesMappingModel.ModifiedBy*
  name: ModifiedBy
  href: api/User.Microservice.Models.RolesMappingModel.html#User_Microservice_Models_RolesMappingModel_ModifiedBy_
  commentId: Overload:User.Microservice.Models.RolesMappingModel.ModifiedBy
  isSpec: "True"
  fullName: User.Microservice.Models.RolesMappingModel.ModifiedBy
  nameWithType: RolesMappingModel.ModifiedBy
- uid: User.Microservice.Models.RolesMappingModel.ModifiedOn
  name: ModifiedOn
  href: api/User.Microservice.Models.RolesMappingModel.html#User_Microservice_Models_RolesMappingModel_ModifiedOn
  commentId: P:User.Microservice.Models.RolesMappingModel.ModifiedOn
  fullName: User.Microservice.Models.RolesMappingModel.ModifiedOn
  nameWithType: RolesMappingModel.ModifiedOn
- uid: User.Microservice.Models.RolesMappingModel.ModifiedOn*
  name: ModifiedOn
  href: api/User.Microservice.Models.RolesMappingModel.html#User_Microservice_Models_RolesMappingModel_ModifiedOn_
  commentId: Overload:User.Microservice.Models.RolesMappingModel.ModifiedOn
  isSpec: "True"
  fullName: User.Microservice.Models.RolesMappingModel.ModifiedOn
  nameWithType: RolesMappingModel.ModifiedOn
- uid: User.Microservice.Models.RolesMappingModel.PersonaID
  name: PersonaID
  href: api/User.Microservice.Models.RolesMappingModel.html#User_Microservice_Models_RolesMappingModel_PersonaID
  commentId: P:User.Microservice.Models.RolesMappingModel.PersonaID
  fullName: User.Microservice.Models.RolesMappingModel.PersonaID
  nameWithType: RolesMappingModel.PersonaID
- uid: User.Microservice.Models.RolesMappingModel.PersonaID*
  name: PersonaID
  href: api/User.Microservice.Models.RolesMappingModel.html#User_Microservice_Models_RolesMappingModel_PersonaID_
  commentId: Overload:User.Microservice.Models.RolesMappingModel.PersonaID
  isSpec: "True"
  fullName: User.Microservice.Models.RolesMappingModel.PersonaID
  nameWithType: RolesMappingModel.PersonaID
- uid: User.Microservice.Models.RolesMappingModel.Personas
  name: Personas
  href: api/User.Microservice.Models.RolesMappingModel.html#User_Microservice_Models_RolesMappingModel_Personas
  commentId: P:User.Microservice.Models.RolesMappingModel.Personas
  fullName: User.Microservice.Models.RolesMappingModel.Personas
  nameWithType: RolesMappingModel.Personas
- uid: User.Microservice.Models.RolesMappingModel.Personas*
  name: Personas
  href: api/User.Microservice.Models.RolesMappingModel.html#User_Microservice_Models_RolesMappingModel_Personas_
  commentId: Overload:User.Microservice.Models.RolesMappingModel.Personas
  isSpec: "True"
  fullName: User.Microservice.Models.RolesMappingModel.Personas
  nameWithType: RolesMappingModel.Personas
- uid: User.Microservice.Models.RolesMappingModel.RoleID
  name: RoleID
  href: api/User.Microservice.Models.RolesMappingModel.html#User_Microservice_Models_RolesMappingModel_RoleID
  commentId: P:User.Microservice.Models.RolesMappingModel.RoleID
  fullName: User.Microservice.Models.RolesMappingModel.RoleID
  nameWithType: RolesMappingModel.RoleID
- uid: User.Microservice.Models.RolesMappingModel.RoleID*
  name: RoleID
  href: api/User.Microservice.Models.RolesMappingModel.html#User_Microservice_Models_RolesMappingModel_RoleID_
  commentId: Overload:User.Microservice.Models.RolesMappingModel.RoleID
  isSpec: "True"
  fullName: User.Microservice.Models.RolesMappingModel.RoleID
  nameWithType: RolesMappingModel.RoleID
- uid: User.Microservice.Models.RolesMappingModel.RoleMappingID
  name: RoleMappingID
  href: api/User.Microservice.Models.RolesMappingModel.html#User_Microservice_Models_RolesMappingModel_RoleMappingID
  commentId: P:User.Microservice.Models.RolesMappingModel.RoleMappingID
  fullName: User.Microservice.Models.RolesMappingModel.RoleMappingID
  nameWithType: RolesMappingModel.RoleMappingID
- uid: User.Microservice.Models.RolesMappingModel.RoleMappingID*
  name: RoleMappingID
  href: api/User.Microservice.Models.RolesMappingModel.html#User_Microservice_Models_RolesMappingModel_RoleMappingID_
  commentId: Overload:User.Microservice.Models.RolesMappingModel.RoleMappingID
  isSpec: "True"
  fullName: User.Microservice.Models.RolesMappingModel.RoleMappingID
  nameWithType: RolesMappingModel.RoleMappingID
- uid: User.Microservice.Models.RolesMappingModel.Roles
  name: Roles
  href: api/User.Microservice.Models.RolesMappingModel.html#User_Microservice_Models_RolesMappingModel_Roles
  commentId: P:User.Microservice.Models.RolesMappingModel.Roles
  fullName: User.Microservice.Models.RolesMappingModel.Roles
  nameWithType: RolesMappingModel.Roles
- uid: User.Microservice.Models.RolesMappingModel.Roles*
  name: Roles
  href: api/User.Microservice.Models.RolesMappingModel.html#User_Microservice_Models_RolesMappingModel_Roles_
  commentId: Overload:User.Microservice.Models.RolesMappingModel.Roles
  isSpec: "True"
  fullName: User.Microservice.Models.RolesMappingModel.Roles
  nameWithType: RolesMappingModel.Roles
- uid: User.Microservice.Models.RolesModel
  name: RolesModel
  href: api/User.Microservice.Models.RolesModel.html
  commentId: T:User.Microservice.Models.RolesModel
  fullName: User.Microservice.Models.RolesModel
  nameWithType: RolesModel
- uid: User.Microservice.Models.RolesModel.CreatedBy
  name: CreatedBy
  href: api/User.Microservice.Models.RolesModel.html#User_Microservice_Models_RolesModel_CreatedBy
  commentId: P:User.Microservice.Models.RolesModel.CreatedBy
  fullName: User.Microservice.Models.RolesModel.CreatedBy
  nameWithType: RolesModel.CreatedBy
- uid: User.Microservice.Models.RolesModel.CreatedBy*
  name: CreatedBy
  href: api/User.Microservice.Models.RolesModel.html#User_Microservice_Models_RolesModel_CreatedBy_
  commentId: Overload:User.Microservice.Models.RolesModel.CreatedBy
  isSpec: "True"
  fullName: User.Microservice.Models.RolesModel.CreatedBy
  nameWithType: RolesModel.CreatedBy
- uid: User.Microservice.Models.RolesModel.CreatedOn
  name: CreatedOn
  href: api/User.Microservice.Models.RolesModel.html#User_Microservice_Models_RolesModel_CreatedOn
  commentId: P:User.Microservice.Models.RolesModel.CreatedOn
  fullName: User.Microservice.Models.RolesModel.CreatedOn
  nameWithType: RolesModel.CreatedOn
- uid: User.Microservice.Models.RolesModel.CreatedOn*
  name: CreatedOn
  href: api/User.Microservice.Models.RolesModel.html#User_Microservice_Models_RolesModel_CreatedOn_
  commentId: Overload:User.Microservice.Models.RolesModel.CreatedOn
  isSpec: "True"
  fullName: User.Microservice.Models.RolesModel.CreatedOn
  nameWithType: RolesModel.CreatedOn
- uid: User.Microservice.Models.RolesModel.ModifiedBy
  name: ModifiedBy
  href: api/User.Microservice.Models.RolesModel.html#User_Microservice_Models_RolesModel_ModifiedBy
  commentId: P:User.Microservice.Models.RolesModel.ModifiedBy
  fullName: User.Microservice.Models.RolesModel.ModifiedBy
  nameWithType: RolesModel.ModifiedBy
- uid: User.Microservice.Models.RolesModel.ModifiedBy*
  name: ModifiedBy
  href: api/User.Microservice.Models.RolesModel.html#User_Microservice_Models_RolesModel_ModifiedBy_
  commentId: Overload:User.Microservice.Models.RolesModel.ModifiedBy
  isSpec: "True"
  fullName: User.Microservice.Models.RolesModel.ModifiedBy
  nameWithType: RolesModel.ModifiedBy
- uid: User.Microservice.Models.RolesModel.ModifiedOn
  name: ModifiedOn
  href: api/User.Microservice.Models.RolesModel.html#User_Microservice_Models_RolesModel_ModifiedOn
  commentId: P:User.Microservice.Models.RolesModel.ModifiedOn
  fullName: User.Microservice.Models.RolesModel.ModifiedOn
  nameWithType: RolesModel.ModifiedOn
- uid: User.Microservice.Models.RolesModel.ModifiedOn*
  name: ModifiedOn
  href: api/User.Microservice.Models.RolesModel.html#User_Microservice_Models_RolesModel_ModifiedOn_
  commentId: Overload:User.Microservice.Models.RolesModel.ModifiedOn
  isSpec: "True"
  fullName: User.Microservice.Models.RolesModel.ModifiedOn
  nameWithType: RolesModel.ModifiedOn
- uid: User.Microservice.Models.RolesModel.RoleDescription
  name: RoleDescription
  href: api/User.Microservice.Models.RolesModel.html#User_Microservice_Models_RolesModel_RoleDescription
  commentId: P:User.Microservice.Models.RolesModel.RoleDescription
  fullName: User.Microservice.Models.RolesModel.RoleDescription
  nameWithType: RolesModel.RoleDescription
- uid: User.Microservice.Models.RolesModel.RoleDescription*
  name: RoleDescription
  href: api/User.Microservice.Models.RolesModel.html#User_Microservice_Models_RolesModel_RoleDescription_
  commentId: Overload:User.Microservice.Models.RolesModel.RoleDescription
  isSpec: "True"
  fullName: User.Microservice.Models.RolesModel.RoleDescription
  nameWithType: RolesModel.RoleDescription
- uid: User.Microservice.Models.RolesModel.RoleID
  name: RoleID
  href: api/User.Microservice.Models.RolesModel.html#User_Microservice_Models_RolesModel_RoleID
  commentId: P:User.Microservice.Models.RolesModel.RoleID
  fullName: User.Microservice.Models.RolesModel.RoleID
  nameWithType: RolesModel.RoleID
- uid: User.Microservice.Models.RolesModel.RoleID*
  name: RoleID
  href: api/User.Microservice.Models.RolesModel.html#User_Microservice_Models_RolesModel_RoleID_
  commentId: Overload:User.Microservice.Models.RolesModel.RoleID
  isSpec: "True"
  fullName: User.Microservice.Models.RolesModel.RoleID
  nameWithType: RolesModel.RoleID
- uid: User.Microservice.Models.RolesModel.RoleName
  name: RoleName
  href: api/User.Microservice.Models.RolesModel.html#User_Microservice_Models_RolesModel_RoleName
  commentId: P:User.Microservice.Models.RolesModel.RoleName
  fullName: User.Microservice.Models.RolesModel.RoleName
  nameWithType: RolesModel.RoleName
- uid: User.Microservice.Models.RolesModel.RoleName*
  name: RoleName
  href: api/User.Microservice.Models.RolesModel.html#User_Microservice_Models_RolesModel_RoleName_
  commentId: Overload:User.Microservice.Models.RolesModel.RoleName
  isSpec: "True"
  fullName: User.Microservice.Models.RolesModel.RoleName
  nameWithType: RolesModel.RoleName
- uid: User.Microservice.Models.RolesModel.RoleStatusID
  name: RoleStatusID
  href: api/User.Microservice.Models.RolesModel.html#User_Microservice_Models_RolesModel_RoleStatusID
  commentId: P:User.Microservice.Models.RolesModel.RoleStatusID
  fullName: User.Microservice.Models.RolesModel.RoleStatusID
  nameWithType: RolesModel.RoleStatusID
- uid: User.Microservice.Models.RolesModel.RoleStatusID*
  name: RoleStatusID
  href: api/User.Microservice.Models.RolesModel.html#User_Microservice_Models_RolesModel_RoleStatusID_
  commentId: Overload:User.Microservice.Models.RolesModel.RoleStatusID
  isSpec: "True"
  fullName: User.Microservice.Models.RolesModel.RoleStatusID
  nameWithType: RolesModel.RoleStatusID
- uid: User.Microservice.Models.RoleStatusModel
  name: RoleStatusModel
  href: api/User.Microservice.Models.RoleStatusModel.html
  commentId: T:User.Microservice.Models.RoleStatusModel
  fullName: User.Microservice.Models.RoleStatusModel
  nameWithType: RoleStatusModel
- uid: User.Microservice.Models.RoleStatusModel.CreatedBy
  name: CreatedBy
  href: api/User.Microservice.Models.RoleStatusModel.html#User_Microservice_Models_RoleStatusModel_CreatedBy
  commentId: P:User.Microservice.Models.RoleStatusModel.CreatedBy
  fullName: User.Microservice.Models.RoleStatusModel.CreatedBy
  nameWithType: RoleStatusModel.CreatedBy
- uid: User.Microservice.Models.RoleStatusModel.CreatedBy*
  name: CreatedBy
  href: api/User.Microservice.Models.RoleStatusModel.html#User_Microservice_Models_RoleStatusModel_CreatedBy_
  commentId: Overload:User.Microservice.Models.RoleStatusModel.CreatedBy
  isSpec: "True"
  fullName: User.Microservice.Models.RoleStatusModel.CreatedBy
  nameWithType: RoleStatusModel.CreatedBy
- uid: User.Microservice.Models.RoleStatusModel.CreatedOn
  name: CreatedOn
  href: api/User.Microservice.Models.RoleStatusModel.html#User_Microservice_Models_RoleStatusModel_CreatedOn
  commentId: P:User.Microservice.Models.RoleStatusModel.CreatedOn
  fullName: User.Microservice.Models.RoleStatusModel.CreatedOn
  nameWithType: RoleStatusModel.CreatedOn
- uid: User.Microservice.Models.RoleStatusModel.CreatedOn*
  name: CreatedOn
  href: api/User.Microservice.Models.RoleStatusModel.html#User_Microservice_Models_RoleStatusModel_CreatedOn_
  commentId: Overload:User.Microservice.Models.RoleStatusModel.CreatedOn
  isSpec: "True"
  fullName: User.Microservice.Models.RoleStatusModel.CreatedOn
  nameWithType: RoleStatusModel.CreatedOn
- uid: User.Microservice.Models.RoleStatusModel.ModifiedBy
  name: ModifiedBy
  href: api/User.Microservice.Models.RoleStatusModel.html#User_Microservice_Models_RoleStatusModel_ModifiedBy
  commentId: P:User.Microservice.Models.RoleStatusModel.ModifiedBy
  fullName: User.Microservice.Models.RoleStatusModel.ModifiedBy
  nameWithType: RoleStatusModel.ModifiedBy
- uid: User.Microservice.Models.RoleStatusModel.ModifiedBy*
  name: ModifiedBy
  href: api/User.Microservice.Models.RoleStatusModel.html#User_Microservice_Models_RoleStatusModel_ModifiedBy_
  commentId: Overload:User.Microservice.Models.RoleStatusModel.ModifiedBy
  isSpec: "True"
  fullName: User.Microservice.Models.RoleStatusModel.ModifiedBy
  nameWithType: RoleStatusModel.ModifiedBy
- uid: User.Microservice.Models.RoleStatusModel.ModifiedOn
  name: ModifiedOn
  href: api/User.Microservice.Models.RoleStatusModel.html#User_Microservice_Models_RoleStatusModel_ModifiedOn
  commentId: P:User.Microservice.Models.RoleStatusModel.ModifiedOn
  fullName: User.Microservice.Models.RoleStatusModel.ModifiedOn
  nameWithType: RoleStatusModel.ModifiedOn
- uid: User.Microservice.Models.RoleStatusModel.ModifiedOn*
  name: ModifiedOn
  href: api/User.Microservice.Models.RoleStatusModel.html#User_Microservice_Models_RoleStatusModel_ModifiedOn_
  commentId: Overload:User.Microservice.Models.RoleStatusModel.ModifiedOn
  isSpec: "True"
  fullName: User.Microservice.Models.RoleStatusModel.ModifiedOn
  nameWithType: RoleStatusModel.ModifiedOn
- uid: User.Microservice.Models.RoleStatusModel.RoleDescription
  name: RoleDescription
  href: api/User.Microservice.Models.RoleStatusModel.html#User_Microservice_Models_RoleStatusModel_RoleDescription
  commentId: P:User.Microservice.Models.RoleStatusModel.RoleDescription
  fullName: User.Microservice.Models.RoleStatusModel.RoleDescription
  nameWithType: RoleStatusModel.RoleDescription
- uid: User.Microservice.Models.RoleStatusModel.RoleDescription*
  name: RoleDescription
  href: api/User.Microservice.Models.RoleStatusModel.html#User_Microservice_Models_RoleStatusModel_RoleDescription_
  commentId: Overload:User.Microservice.Models.RoleStatusModel.RoleDescription
  isSpec: "True"
  fullName: User.Microservice.Models.RoleStatusModel.RoleDescription
  nameWithType: RoleStatusModel.RoleDescription
- uid: User.Microservice.Models.RoleStatusModel.RoleStatusID
  name: RoleStatusID
  href: api/User.Microservice.Models.RoleStatusModel.html#User_Microservice_Models_RoleStatusModel_RoleStatusID
  commentId: P:User.Microservice.Models.RoleStatusModel.RoleStatusID
  fullName: User.Microservice.Models.RoleStatusModel.RoleStatusID
  nameWithType: RoleStatusModel.RoleStatusID
- uid: User.Microservice.Models.RoleStatusModel.RoleStatusID*
  name: RoleStatusID
  href: api/User.Microservice.Models.RoleStatusModel.html#User_Microservice_Models_RoleStatusModel_RoleStatusID_
  commentId: Overload:User.Microservice.Models.RoleStatusModel.RoleStatusID
  isSpec: "True"
  fullName: User.Microservice.Models.RoleStatusModel.RoleStatusID
  nameWithType: RoleStatusModel.RoleStatusID
- uid: User.Microservice.Models.RoleStatusModel.RoleStatusName
  name: RoleStatusName
  href: api/User.Microservice.Models.RoleStatusModel.html#User_Microservice_Models_RoleStatusModel_RoleStatusName
  commentId: P:User.Microservice.Models.RoleStatusModel.RoleStatusName
  fullName: User.Microservice.Models.RoleStatusModel.RoleStatusName
  nameWithType: RoleStatusModel.RoleStatusName
- uid: User.Microservice.Models.RoleStatusModel.RoleStatusName*
  name: RoleStatusName
  href: api/User.Microservice.Models.RoleStatusModel.html#User_Microservice_Models_RoleStatusModel_RoleStatusName_
  commentId: Overload:User.Microservice.Models.RoleStatusModel.RoleStatusName
  isSpec: "True"
  fullName: User.Microservice.Models.RoleStatusModel.RoleStatusName
  nameWithType: RoleStatusModel.RoleStatusName
- uid: User.Microservice.Repositories
  name: User.Microservice.Repositories
  href: api/User.Microservice.Repositories.html
  commentId: N:User.Microservice.Repositories
  fullName: User.Microservice.Repositories
  nameWithType: User.Microservice.Repositories
- uid: User.Microservice.Repositories.PermissionsMappingRepository
  name: PermissionsMappingRepository
  href: api/User.Microservice.Repositories.PermissionsMappingRepository.html
  commentId: T:User.Microservice.Repositories.PermissionsMappingRepository
  fullName: User.Microservice.Repositories.PermissionsMappingRepository
  nameWithType: PermissionsMappingRepository
- uid: User.Microservice.Repositories.PermissionsMappingRepository.#ctor(UserAPI.DBContexts.DbOperationsContext,Microsoft.Extensions.Logging.ILogger{User.Microservice.Repositories.PermissionsMappingRepository},RawSqlExecuter)
  name: PermissionsMappingRepository(DbOperationsContext, ILogger<PermissionsMappingRepository>, RawSqlExecuter)
  href: api/User.Microservice.Repositories.PermissionsMappingRepository.html#User_Microservice_Repositories_PermissionsMappingRepository__ctor_UserAPI_DBContexts_DbOperationsContext_Microsoft_Extensions_Logging_ILogger_User_Microservice_Repositories_PermissionsMappingRepository__RawSqlExecuter_
  commentId: M:User.Microservice.Repositories.PermissionsMappingRepository.#ctor(UserAPI.DBContexts.DbOperationsContext,Microsoft.Extensions.Logging.ILogger{User.Microservice.Repositories.PermissionsMappingRepository},RawSqlExecuter)
  name.vb: New(DbOperationsContext, ILogger(Of PermissionsMappingRepository), RawSqlExecuter)
  fullName: User.Microservice.Repositories.PermissionsMappingRepository.PermissionsMappingRepository(UserAPI.DBContexts.DbOperationsContext, Microsoft.Extensions.Logging.ILogger<User.Microservice.Repositories.PermissionsMappingRepository>, RawSqlExecuter)
  fullName.vb: User.Microservice.Repositories.PermissionsMappingRepository.New(UserAPI.DBContexts.DbOperationsContext, Microsoft.Extensions.Logging.ILogger(Of User.Microservice.Repositories.PermissionsMappingRepository), RawSqlExecuter)
  nameWithType: PermissionsMappingRepository.PermissionsMappingRepository(DbOperationsContext, ILogger<PermissionsMappingRepository>, RawSqlExecuter)
  nameWithType.vb: PermissionsMappingRepository.New(DbOperationsContext, ILogger(Of PermissionsMappingRepository), RawSqlExecuter)
- uid: User.Microservice.Repositories.PermissionsMappingRepository.#ctor*
  name: PermissionsMappingRepository
  href: api/User.Microservice.Repositories.PermissionsMappingRepository.html#User_Microservice_Repositories_PermissionsMappingRepository__ctor_
  commentId: Overload:User.Microservice.Repositories.PermissionsMappingRepository.#ctor
  isSpec: "True"
  name.vb: New
  fullName: User.Microservice.Repositories.PermissionsMappingRepository.PermissionsMappingRepository
  fullName.vb: User.Microservice.Repositories.PermissionsMappingRepository.New
  nameWithType: PermissionsMappingRepository.PermissionsMappingRepository
  nameWithType.vb: PermissionsMappingRepository.New
- uid: User.Microservice.Repositories.PermissionsMappingRepository.AddPermissionMapping(User.Microservice.Models.PermissionsMappingModel)
  name: AddPermissionMapping(PermissionsMappingModel)
  href: api/User.Microservice.Repositories.PermissionsMappingRepository.html#User_Microservice_Repositories_PermissionsMappingRepository_AddPermissionMapping_User_Microservice_Models_PermissionsMappingModel_
  commentId: M:User.Microservice.Repositories.PermissionsMappingRepository.AddPermissionMapping(User.Microservice.Models.PermissionsMappingModel)
  fullName: User.Microservice.Repositories.PermissionsMappingRepository.AddPermissionMapping(User.Microservice.Models.PermissionsMappingModel)
  nameWithType: PermissionsMappingRepository.AddPermissionMapping(PermissionsMappingModel)
- uid: User.Microservice.Repositories.PermissionsMappingRepository.AddPermissionMapping*
  name: AddPermissionMapping
  href: api/User.Microservice.Repositories.PermissionsMappingRepository.html#User_Microservice_Repositories_PermissionsMappingRepository_AddPermissionMapping_
  commentId: Overload:User.Microservice.Repositories.PermissionsMappingRepository.AddPermissionMapping
  isSpec: "True"
  fullName: User.Microservice.Repositories.PermissionsMappingRepository.AddPermissionMapping
  nameWithType: PermissionsMappingRepository.AddPermissionMapping
- uid: User.Microservice.Repositories.PermissionsMappingRepository.DeletePermissionMapping(System.Int32)
  name: DeletePermissionMapping(int)
  href: api/User.Microservice.Repositories.PermissionsMappingRepository.html#User_Microservice_Repositories_PermissionsMappingRepository_DeletePermissionMapping_System_Int32_
  commentId: M:User.Microservice.Repositories.PermissionsMappingRepository.DeletePermissionMapping(System.Int32)
  name.vb: DeletePermissionMapping(Integer)
  fullName: User.Microservice.Repositories.PermissionsMappingRepository.DeletePermissionMapping(int)
  fullName.vb: User.Microservice.Repositories.PermissionsMappingRepository.DeletePermissionMapping(Integer)
  nameWithType: PermissionsMappingRepository.DeletePermissionMapping(int)
  nameWithType.vb: PermissionsMappingRepository.DeletePermissionMapping(Integer)
- uid: User.Microservice.Repositories.PermissionsMappingRepository.DeletePermissionMapping*
  name: DeletePermissionMapping
  href: api/User.Microservice.Repositories.PermissionsMappingRepository.html#User_Microservice_Repositories_PermissionsMappingRepository_DeletePermissionMapping_
  commentId: Overload:User.Microservice.Repositories.PermissionsMappingRepository.DeletePermissionMapping
  isSpec: "True"
  fullName: User.Microservice.Repositories.PermissionsMappingRepository.DeletePermissionMapping
  nameWithType: PermissionsMappingRepository.DeletePermissionMapping
- uid: User.Microservice.Repositories.PermissionsMappingRepository.GetAllPermissionMapping
  name: GetAllPermissionMapping()
  href: api/User.Microservice.Repositories.PermissionsMappingRepository.html#User_Microservice_Repositories_PermissionsMappingRepository_GetAllPermissionMapping
  commentId: M:User.Microservice.Repositories.PermissionsMappingRepository.GetAllPermissionMapping
  fullName: User.Microservice.Repositories.PermissionsMappingRepository.GetAllPermissionMapping()
  nameWithType: PermissionsMappingRepository.GetAllPermissionMapping()
- uid: User.Microservice.Repositories.PermissionsMappingRepository.GetAllPermissionMapping*
  name: GetAllPermissionMapping
  href: api/User.Microservice.Repositories.PermissionsMappingRepository.html#User_Microservice_Repositories_PermissionsMappingRepository_GetAllPermissionMapping_
  commentId: Overload:User.Microservice.Repositories.PermissionsMappingRepository.GetAllPermissionMapping
  isSpec: "True"
  fullName: User.Microservice.Repositories.PermissionsMappingRepository.GetAllPermissionMapping
  nameWithType: PermissionsMappingRepository.GetAllPermissionMapping
- uid: User.Microservice.Repositories.PermissionsMappingRepository.GetPermissionMappingById(System.Int32,System.Int32,System.Int32)
  name: GetPermissionMappingById(int, int, int)
  href: api/User.Microservice.Repositories.PermissionsMappingRepository.html#User_Microservice_Repositories_PermissionsMappingRepository_GetPermissionMappingById_System_Int32_System_Int32_System_Int32_
  commentId: M:User.Microservice.Repositories.PermissionsMappingRepository.GetPermissionMappingById(System.Int32,System.Int32,System.Int32)
  name.vb: GetPermissionMappingById(Integer, Integer, Integer)
  fullName: User.Microservice.Repositories.PermissionsMappingRepository.GetPermissionMappingById(int, int, int)
  fullName.vb: User.Microservice.Repositories.PermissionsMappingRepository.GetPermissionMappingById(Integer, Integer, Integer)
  nameWithType: PermissionsMappingRepository.GetPermissionMappingById(int, int, int)
  nameWithType.vb: PermissionsMappingRepository.GetPermissionMappingById(Integer, Integer, Integer)
- uid: User.Microservice.Repositories.PermissionsMappingRepository.GetPermissionMappingById*
  name: GetPermissionMappingById
  href: api/User.Microservice.Repositories.PermissionsMappingRepository.html#User_Microservice_Repositories_PermissionsMappingRepository_GetPermissionMappingById_
  commentId: Overload:User.Microservice.Repositories.PermissionsMappingRepository.GetPermissionMappingById
  isSpec: "True"
  fullName: User.Microservice.Repositories.PermissionsMappingRepository.GetPermissionMappingById
  nameWithType: PermissionsMappingRepository.GetPermissionMappingById
- uid: User.Microservice.Repositories.PermissionsMappingRepository.IsPermissionMappingExists(User.Microservice.Models.PermissionsMappingModel)
  name: IsPermissionMappingExists(PermissionsMappingModel)
  href: api/User.Microservice.Repositories.PermissionsMappingRepository.html#User_Microservice_Repositories_PermissionsMappingRepository_IsPermissionMappingExists_User_Microservice_Models_PermissionsMappingModel_
  commentId: M:User.Microservice.Repositories.PermissionsMappingRepository.IsPermissionMappingExists(User.Microservice.Models.PermissionsMappingModel)
  fullName: User.Microservice.Repositories.PermissionsMappingRepository.IsPermissionMappingExists(User.Microservice.Models.PermissionsMappingModel)
  nameWithType: PermissionsMappingRepository.IsPermissionMappingExists(PermissionsMappingModel)
- uid: User.Microservice.Repositories.PermissionsMappingRepository.IsPermissionMappingExists*
  name: IsPermissionMappingExists
  href: api/User.Microservice.Repositories.PermissionsMappingRepository.html#User_Microservice_Repositories_PermissionsMappingRepository_IsPermissionMappingExists_
  commentId: Overload:User.Microservice.Repositories.PermissionsMappingRepository.IsPermissionMappingExists
  isSpec: "True"
  fullName: User.Microservice.Repositories.PermissionsMappingRepository.IsPermissionMappingExists
  nameWithType: PermissionsMappingRepository.IsPermissionMappingExists
- uid: User.Microservice.Repositories.PermissionsMappingRepository.UpdatePermissionMapping(User.Microservice.Models.PermissionsMappingModel)
  name: UpdatePermissionMapping(PermissionsMappingModel)
  href: api/User.Microservice.Repositories.PermissionsMappingRepository.html#User_Microservice_Repositories_PermissionsMappingRepository_UpdatePermissionMapping_User_Microservice_Models_PermissionsMappingModel_
  commentId: M:User.Microservice.Repositories.PermissionsMappingRepository.UpdatePermissionMapping(User.Microservice.Models.PermissionsMappingModel)
  fullName: User.Microservice.Repositories.PermissionsMappingRepository.UpdatePermissionMapping(User.Microservice.Models.PermissionsMappingModel)
  nameWithType: PermissionsMappingRepository.UpdatePermissionMapping(PermissionsMappingModel)
- uid: User.Microservice.Repositories.PermissionsMappingRepository.UpdatePermissionMapping*
  name: UpdatePermissionMapping
  href: api/User.Microservice.Repositories.PermissionsMappingRepository.html#User_Microservice_Repositories_PermissionsMappingRepository_UpdatePermissionMapping_
  commentId: Overload:User.Microservice.Repositories.PermissionsMappingRepository.UpdatePermissionMapping
  isSpec: "True"
  fullName: User.Microservice.Repositories.PermissionsMappingRepository.UpdatePermissionMapping
  nameWithType: PermissionsMappingRepository.UpdatePermissionMapping
- uid: User.Microservice.Repositories.PermissionsRepository
  name: PermissionsRepository
  href: api/User.Microservice.Repositories.PermissionsRepository.html
  commentId: T:User.Microservice.Repositories.PermissionsRepository
  fullName: User.Microservice.Repositories.PermissionsRepository
  nameWithType: PermissionsRepository
- uid: User.Microservice.Repositories.PermissionsRepository.#ctor(UserAPI.DBContexts.DbOperationsContext,Microsoft.Extensions.Logging.ILogger{User.Microservice.Repositories.PermissionsRepository},RawSqlExecuter)
  name: PermissionsRepository(DbOperationsContext, ILogger<PermissionsRepository>, RawSqlExecuter)
  href: api/User.Microservice.Repositories.PermissionsRepository.html#User_Microservice_Repositories_PermissionsRepository__ctor_UserAPI_DBContexts_DbOperationsContext_Microsoft_Extensions_Logging_ILogger_User_Microservice_Repositories_PermissionsRepository__RawSqlExecuter_
  commentId: M:User.Microservice.Repositories.PermissionsRepository.#ctor(UserAPI.DBContexts.DbOperationsContext,Microsoft.Extensions.Logging.ILogger{User.Microservice.Repositories.PermissionsRepository},RawSqlExecuter)
  name.vb: New(DbOperationsContext, ILogger(Of PermissionsRepository), RawSqlExecuter)
  fullName: User.Microservice.Repositories.PermissionsRepository.PermissionsRepository(UserAPI.DBContexts.DbOperationsContext, Microsoft.Extensions.Logging.ILogger<User.Microservice.Repositories.PermissionsRepository>, RawSqlExecuter)
  fullName.vb: User.Microservice.Repositories.PermissionsRepository.New(UserAPI.DBContexts.DbOperationsContext, Microsoft.Extensions.Logging.ILogger(Of User.Microservice.Repositories.PermissionsRepository), RawSqlExecuter)
  nameWithType: PermissionsRepository.PermissionsRepository(DbOperationsContext, ILogger<PermissionsRepository>, RawSqlExecuter)
  nameWithType.vb: PermissionsRepository.New(DbOperationsContext, ILogger(Of PermissionsRepository), RawSqlExecuter)
- uid: User.Microservice.Repositories.PermissionsRepository.#ctor*
  name: PermissionsRepository
  href: api/User.Microservice.Repositories.PermissionsRepository.html#User_Microservice_Repositories_PermissionsRepository__ctor_
  commentId: Overload:User.Microservice.Repositories.PermissionsRepository.#ctor
  isSpec: "True"
  name.vb: New
  fullName: User.Microservice.Repositories.PermissionsRepository.PermissionsRepository
  fullName.vb: User.Microservice.Repositories.PermissionsRepository.New
  nameWithType: PermissionsRepository.PermissionsRepository
  nameWithType.vb: PermissionsRepository.New
- uid: User.Microservice.Repositories.PermissionsRepository.AddPermission(User.Microservice.Models.PermissionsModel)
  name: AddPermission(PermissionsModel)
  href: api/User.Microservice.Repositories.PermissionsRepository.html#User_Microservice_Repositories_PermissionsRepository_AddPermission_User_Microservice_Models_PermissionsModel_
  commentId: M:User.Microservice.Repositories.PermissionsRepository.AddPermission(User.Microservice.Models.PermissionsModel)
  fullName: User.Microservice.Repositories.PermissionsRepository.AddPermission(User.Microservice.Models.PermissionsModel)
  nameWithType: PermissionsRepository.AddPermission(PermissionsModel)
- uid: User.Microservice.Repositories.PermissionsRepository.AddPermission*
  name: AddPermission
  href: api/User.Microservice.Repositories.PermissionsRepository.html#User_Microservice_Repositories_PermissionsRepository_AddPermission_
  commentId: Overload:User.Microservice.Repositories.PermissionsRepository.AddPermission
  isSpec: "True"
  fullName: User.Microservice.Repositories.PermissionsRepository.AddPermission
  nameWithType: PermissionsRepository.AddPermission
- uid: User.Microservice.Repositories.PermissionsRepository.DeletePermission(System.Int32)
  name: DeletePermission(int)
  href: api/User.Microservice.Repositories.PermissionsRepository.html#User_Microservice_Repositories_PermissionsRepository_DeletePermission_System_Int32_
  commentId: M:User.Microservice.Repositories.PermissionsRepository.DeletePermission(System.Int32)
  name.vb: DeletePermission(Integer)
  fullName: User.Microservice.Repositories.PermissionsRepository.DeletePermission(int)
  fullName.vb: User.Microservice.Repositories.PermissionsRepository.DeletePermission(Integer)
  nameWithType: PermissionsRepository.DeletePermission(int)
  nameWithType.vb: PermissionsRepository.DeletePermission(Integer)
- uid: User.Microservice.Repositories.PermissionsRepository.DeletePermission*
  name: DeletePermission
  href: api/User.Microservice.Repositories.PermissionsRepository.html#User_Microservice_Repositories_PermissionsRepository_DeletePermission_
  commentId: Overload:User.Microservice.Repositories.PermissionsRepository.DeletePermission
  isSpec: "True"
  fullName: User.Microservice.Repositories.PermissionsRepository.DeletePermission
  nameWithType: PermissionsRepository.DeletePermission
- uid: User.Microservice.Repositories.PermissionsRepository.GetAllPermissions
  name: GetAllPermissions()
  href: api/User.Microservice.Repositories.PermissionsRepository.html#User_Microservice_Repositories_PermissionsRepository_GetAllPermissions
  commentId: M:User.Microservice.Repositories.PermissionsRepository.GetAllPermissions
  fullName: User.Microservice.Repositories.PermissionsRepository.GetAllPermissions()
  nameWithType: PermissionsRepository.GetAllPermissions()
- uid: User.Microservice.Repositories.PermissionsRepository.GetAllPermissions*
  name: GetAllPermissions
  href: api/User.Microservice.Repositories.PermissionsRepository.html#User_Microservice_Repositories_PermissionsRepository_GetAllPermissions_
  commentId: Overload:User.Microservice.Repositories.PermissionsRepository.GetAllPermissions
  isSpec: "True"
  fullName: User.Microservice.Repositories.PermissionsRepository.GetAllPermissions
  nameWithType: PermissionsRepository.GetAllPermissions
- uid: User.Microservice.Repositories.PermissionsRepository.GetPermissionById(System.Int32)
  name: GetPermissionById(int)
  href: api/User.Microservice.Repositories.PermissionsRepository.html#User_Microservice_Repositories_PermissionsRepository_GetPermissionById_System_Int32_
  commentId: M:User.Microservice.Repositories.PermissionsRepository.GetPermissionById(System.Int32)
  name.vb: GetPermissionById(Integer)
  fullName: User.Microservice.Repositories.PermissionsRepository.GetPermissionById(int)
  fullName.vb: User.Microservice.Repositories.PermissionsRepository.GetPermissionById(Integer)
  nameWithType: PermissionsRepository.GetPermissionById(int)
  nameWithType.vb: PermissionsRepository.GetPermissionById(Integer)
- uid: User.Microservice.Repositories.PermissionsRepository.GetPermissionById*
  name: GetPermissionById
  href: api/User.Microservice.Repositories.PermissionsRepository.html#User_Microservice_Repositories_PermissionsRepository_GetPermissionById_
  commentId: Overload:User.Microservice.Repositories.PermissionsRepository.GetPermissionById
  isSpec: "True"
  fullName: User.Microservice.Repositories.PermissionsRepository.GetPermissionById
  nameWithType: PermissionsRepository.GetPermissionById
- uid: User.Microservice.Repositories.PermissionsRepository.IsPermissionExists(User.Microservice.Models.PermissionsModel)
  name: IsPermissionExists(PermissionsModel)
  href: api/User.Microservice.Repositories.PermissionsRepository.html#User_Microservice_Repositories_PermissionsRepository_IsPermissionExists_User_Microservice_Models_PermissionsModel_
  commentId: M:User.Microservice.Repositories.PermissionsRepository.IsPermissionExists(User.Microservice.Models.PermissionsModel)
  fullName: User.Microservice.Repositories.PermissionsRepository.IsPermissionExists(User.Microservice.Models.PermissionsModel)
  nameWithType: PermissionsRepository.IsPermissionExists(PermissionsModel)
- uid: User.Microservice.Repositories.PermissionsRepository.IsPermissionExists*
  name: IsPermissionExists
  href: api/User.Microservice.Repositories.PermissionsRepository.html#User_Microservice_Repositories_PermissionsRepository_IsPermissionExists_
  commentId: Overload:User.Microservice.Repositories.PermissionsRepository.IsPermissionExists
  isSpec: "True"
  fullName: User.Microservice.Repositories.PermissionsRepository.IsPermissionExists
  nameWithType: PermissionsRepository.IsPermissionExists
- uid: User.Microservice.Repositories.PermissionsRepository.UpdatePermission(User.Microservice.Models.PermissionsModel)
  name: UpdatePermission(PermissionsModel)
  href: api/User.Microservice.Repositories.PermissionsRepository.html#User_Microservice_Repositories_PermissionsRepository_UpdatePermission_User_Microservice_Models_PermissionsModel_
  commentId: M:User.Microservice.Repositories.PermissionsRepository.UpdatePermission(User.Microservice.Models.PermissionsModel)
  fullName: User.Microservice.Repositories.PermissionsRepository.UpdatePermission(User.Microservice.Models.PermissionsModel)
  nameWithType: PermissionsRepository.UpdatePermission(PermissionsModel)
- uid: User.Microservice.Repositories.PermissionsRepository.UpdatePermission*
  name: UpdatePermission
  href: api/User.Microservice.Repositories.PermissionsRepository.html#User_Microservice_Repositories_PermissionsRepository_UpdatePermission_
  commentId: Overload:User.Microservice.Repositories.PermissionsRepository.UpdatePermission
  isSpec: "True"
  fullName: User.Microservice.Repositories.PermissionsRepository.UpdatePermission
  nameWithType: PermissionsRepository.UpdatePermission
- uid: User.Microservice.Repositories.PortalRepository
  name: PortalRepository
  href: api/User.Microservice.Repositories.PortalRepository.html
  commentId: T:User.Microservice.Repositories.PortalRepository
  fullName: User.Microservice.Repositories.PortalRepository
  nameWithType: PortalRepository
- uid: User.Microservice.Repositories.PortalRepository.#ctor(UserAPI.DBContexts.DbOperationsContext,Microsoft.Extensions.Logging.ILogger{User.Microservice.Repositories.PortalRepository})
  name: PortalRepository(DbOperationsContext, ILogger<PortalRepository>)
  href: api/User.Microservice.Repositories.PortalRepository.html#User_Microservice_Repositories_PortalRepository__ctor_UserAPI_DBContexts_DbOperationsContext_Microsoft_Extensions_Logging_ILogger_User_Microservice_Repositories_PortalRepository__
  commentId: M:User.Microservice.Repositories.PortalRepository.#ctor(UserAPI.DBContexts.DbOperationsContext,Microsoft.Extensions.Logging.ILogger{User.Microservice.Repositories.PortalRepository})
  name.vb: New(DbOperationsContext, ILogger(Of PortalRepository))
  fullName: User.Microservice.Repositories.PortalRepository.PortalRepository(UserAPI.DBContexts.DbOperationsContext, Microsoft.Extensions.Logging.ILogger<User.Microservice.Repositories.PortalRepository>)
  fullName.vb: User.Microservice.Repositories.PortalRepository.New(UserAPI.DBContexts.DbOperationsContext, Microsoft.Extensions.Logging.ILogger(Of User.Microservice.Repositories.PortalRepository))
  nameWithType: PortalRepository.PortalRepository(DbOperationsContext, ILogger<PortalRepository>)
  nameWithType.vb: PortalRepository.New(DbOperationsContext, ILogger(Of PortalRepository))
- uid: User.Microservice.Repositories.PortalRepository.#ctor*
  name: PortalRepository
  href: api/User.Microservice.Repositories.PortalRepository.html#User_Microservice_Repositories_PortalRepository__ctor_
  commentId: Overload:User.Microservice.Repositories.PortalRepository.#ctor
  isSpec: "True"
  name.vb: New
  fullName: User.Microservice.Repositories.PortalRepository.PortalRepository
  fullName.vb: User.Microservice.Repositories.PortalRepository.New
  nameWithType: PortalRepository.PortalRepository
  nameWithType.vb: PortalRepository.New
- uid: User.Microservice.Repositories.PortalRepository.AddPortal(User.Microservice.Models.PortalModel)
  name: AddPortal(PortalModel)
  href: api/User.Microservice.Repositories.PortalRepository.html#User_Microservice_Repositories_PortalRepository_AddPortal_User_Microservice_Models_PortalModel_
  commentId: M:User.Microservice.Repositories.PortalRepository.AddPortal(User.Microservice.Models.PortalModel)
  fullName: User.Microservice.Repositories.PortalRepository.AddPortal(User.Microservice.Models.PortalModel)
  nameWithType: PortalRepository.AddPortal(PortalModel)
- uid: User.Microservice.Repositories.PortalRepository.AddPortal*
  name: AddPortal
  href: api/User.Microservice.Repositories.PortalRepository.html#User_Microservice_Repositories_PortalRepository_AddPortal_
  commentId: Overload:User.Microservice.Repositories.PortalRepository.AddPortal
  isSpec: "True"
  fullName: User.Microservice.Repositories.PortalRepository.AddPortal
  nameWithType: PortalRepository.AddPortal
- uid: User.Microservice.Repositories.PortalRepository.DeletePortal(System.Int32)
  name: DeletePortal(int)
  href: api/User.Microservice.Repositories.PortalRepository.html#User_Microservice_Repositories_PortalRepository_DeletePortal_System_Int32_
  commentId: M:User.Microservice.Repositories.PortalRepository.DeletePortal(System.Int32)
  name.vb: DeletePortal(Integer)
  fullName: User.Microservice.Repositories.PortalRepository.DeletePortal(int)
  fullName.vb: User.Microservice.Repositories.PortalRepository.DeletePortal(Integer)
  nameWithType: PortalRepository.DeletePortal(int)
  nameWithType.vb: PortalRepository.DeletePortal(Integer)
- uid: User.Microservice.Repositories.PortalRepository.DeletePortal*
  name: DeletePortal
  href: api/User.Microservice.Repositories.PortalRepository.html#User_Microservice_Repositories_PortalRepository_DeletePortal_
  commentId: Overload:User.Microservice.Repositories.PortalRepository.DeletePortal
  isSpec: "True"
  fullName: User.Microservice.Repositories.PortalRepository.DeletePortal
  nameWithType: PortalRepository.DeletePortal
- uid: User.Microservice.Repositories.PortalRepository.GetAllPortals
  name: GetAllPortals()
  href: api/User.Microservice.Repositories.PortalRepository.html#User_Microservice_Repositories_PortalRepository_GetAllPortals
  commentId: M:User.Microservice.Repositories.PortalRepository.GetAllPortals
  fullName: User.Microservice.Repositories.PortalRepository.GetAllPortals()
  nameWithType: PortalRepository.GetAllPortals()
- uid: User.Microservice.Repositories.PortalRepository.GetAllPortals*
  name: GetAllPortals
  href: api/User.Microservice.Repositories.PortalRepository.html#User_Microservice_Repositories_PortalRepository_GetAllPortals_
  commentId: Overload:User.Microservice.Repositories.PortalRepository.GetAllPortals
  isSpec: "True"
  fullName: User.Microservice.Repositories.PortalRepository.GetAllPortals
  nameWithType: PortalRepository.GetAllPortals
- uid: User.Microservice.Repositories.PortalRepository.GetPortalById(System.Int32)
  name: GetPortalById(int)
  href: api/User.Microservice.Repositories.PortalRepository.html#User_Microservice_Repositories_PortalRepository_GetPortalById_System_Int32_
  commentId: M:User.Microservice.Repositories.PortalRepository.GetPortalById(System.Int32)
  name.vb: GetPortalById(Integer)
  fullName: User.Microservice.Repositories.PortalRepository.GetPortalById(int)
  fullName.vb: User.Microservice.Repositories.PortalRepository.GetPortalById(Integer)
  nameWithType: PortalRepository.GetPortalById(int)
  nameWithType.vb: PortalRepository.GetPortalById(Integer)
- uid: User.Microservice.Repositories.PortalRepository.GetPortalById*
  name: GetPortalById
  href: api/User.Microservice.Repositories.PortalRepository.html#User_Microservice_Repositories_PortalRepository_GetPortalById_
  commentId: Overload:User.Microservice.Repositories.PortalRepository.GetPortalById
  isSpec: "True"
  fullName: User.Microservice.Repositories.PortalRepository.GetPortalById
  nameWithType: PortalRepository.GetPortalById
- uid: User.Microservice.Repositories.PortalRepository.IsPortalExists(User.Microservice.Models.PortalModel)
  name: IsPortalExists(PortalModel)
  href: api/User.Microservice.Repositories.PortalRepository.html#User_Microservice_Repositories_PortalRepository_IsPortalExists_User_Microservice_Models_PortalModel_
  commentId: M:User.Microservice.Repositories.PortalRepository.IsPortalExists(User.Microservice.Models.PortalModel)
  fullName: User.Microservice.Repositories.PortalRepository.IsPortalExists(User.Microservice.Models.PortalModel)
  nameWithType: PortalRepository.IsPortalExists(PortalModel)
- uid: User.Microservice.Repositories.PortalRepository.IsPortalExists*
  name: IsPortalExists
  href: api/User.Microservice.Repositories.PortalRepository.html#User_Microservice_Repositories_PortalRepository_IsPortalExists_
  commentId: Overload:User.Microservice.Repositories.PortalRepository.IsPortalExists
  isSpec: "True"
  fullName: User.Microservice.Repositories.PortalRepository.IsPortalExists
  nameWithType: PortalRepository.IsPortalExists
- uid: User.Microservice.Repositories.PortalRepository.UpdatePortal(User.Microservice.Models.PortalModel)
  name: UpdatePortal(PortalModel)
  href: api/User.Microservice.Repositories.PortalRepository.html#User_Microservice_Repositories_PortalRepository_UpdatePortal_User_Microservice_Models_PortalModel_
  commentId: M:User.Microservice.Repositories.PortalRepository.UpdatePortal(User.Microservice.Models.PortalModel)
  fullName: User.Microservice.Repositories.PortalRepository.UpdatePortal(User.Microservice.Models.PortalModel)
  nameWithType: PortalRepository.UpdatePortal(PortalModel)
- uid: User.Microservice.Repositories.PortalRepository.UpdatePortal*
  name: UpdatePortal
  href: api/User.Microservice.Repositories.PortalRepository.html#User_Microservice_Repositories_PortalRepository_UpdatePortal_
  commentId: Overload:User.Microservice.Repositories.PortalRepository.UpdatePortal
  isSpec: "True"
  fullName: User.Microservice.Repositories.PortalRepository.UpdatePortal
  nameWithType: PortalRepository.UpdatePortal
- uid: User.Microservice.Repositories.Repository`1
  name: Repository<T>
  href: api/User.Microservice.Repositories.Repository-1.html
  commentId: T:User.Microservice.Repositories.Repository`1
  name.vb: Repository(Of T)
  fullName: User.Microservice.Repositories.Repository<T>
  fullName.vb: User.Microservice.Repositories.Repository(Of T)
  nameWithType: Repository<T>
  nameWithType.vb: Repository(Of T)
- uid: User.Microservice.Repositories.Repository`1.#ctor(UserAPI.DBContexts.DbOperationsContext,Microsoft.Extensions.Logging.ILogger{User.Microservice.Repositories.Repository{`0}},RawSqlExecuter)
  name: Repository(DbOperationsContext, ILogger<Repository<T>>, RawSqlExecuter)
  href: api/User.Microservice.Repositories.Repository-1.html#User_Microservice_Repositories_Repository_1__ctor_UserAPI_DBContexts_DbOperationsContext_Microsoft_Extensions_Logging_ILogger_User_Microservice_Repositories_Repository__0___RawSqlExecuter_
  commentId: M:User.Microservice.Repositories.Repository`1.#ctor(UserAPI.DBContexts.DbOperationsContext,Microsoft.Extensions.Logging.ILogger{User.Microservice.Repositories.Repository{`0}},RawSqlExecuter)
  name.vb: New(DbOperationsContext, ILogger(Of Repository(Of T)), RawSqlExecuter)
  fullName: User.Microservice.Repositories.Repository<T>.Repository(UserAPI.DBContexts.DbOperationsContext, Microsoft.Extensions.Logging.ILogger<User.Microservice.Repositories.Repository<T>>, RawSqlExecuter)
  fullName.vb: User.Microservice.Repositories.Repository(Of T).New(UserAPI.DBContexts.DbOperationsContext, Microsoft.Extensions.Logging.ILogger(Of User.Microservice.Repositories.Repository(Of T)), RawSqlExecuter)
  nameWithType: Repository<T>.Repository(DbOperationsContext, ILogger<Repository<T>>, RawSqlExecuter)
  nameWithType.vb: Repository(Of T).New(DbOperationsContext, ILogger(Of Repository(Of T)), RawSqlExecuter)
- uid: User.Microservice.Repositories.Repository`1.#ctor*
  name: Repository
  href: api/User.Microservice.Repositories.Repository-1.html#User_Microservice_Repositories_Repository_1__ctor_
  commentId: Overload:User.Microservice.Repositories.Repository`1.#ctor
  isSpec: "True"
  name.vb: New
  fullName: User.Microservice.Repositories.Repository<T>.Repository
  fullName.vb: User.Microservice.Repositories.Repository(Of T).New
  nameWithType: Repository<T>.Repository
  nameWithType.vb: Repository(Of T).New
- uid: User.Microservice.Repositories.Repository`1.GetAllPermissionStatus
  name: GetAllPermissionStatus()
  href: api/User.Microservice.Repositories.Repository-1.html#User_Microservice_Repositories_Repository_1_GetAllPermissionStatus
  commentId: M:User.Microservice.Repositories.Repository`1.GetAllPermissionStatus
  fullName: User.Microservice.Repositories.Repository<T>.GetAllPermissionStatus()
  fullName.vb: User.Microservice.Repositories.Repository(Of T).GetAllPermissionStatus()
  nameWithType: Repository<T>.GetAllPermissionStatus()
  nameWithType.vb: Repository(Of T).GetAllPermissionStatus()
- uid: User.Microservice.Repositories.Repository`1.GetAllPermissionStatus*
  name: GetAllPermissionStatus
  href: api/User.Microservice.Repositories.Repository-1.html#User_Microservice_Repositories_Repository_1_GetAllPermissionStatus_
  commentId: Overload:User.Microservice.Repositories.Repository`1.GetAllPermissionStatus
  isSpec: "True"
  fullName: User.Microservice.Repositories.Repository<T>.GetAllPermissionStatus
  fullName.vb: User.Microservice.Repositories.Repository(Of T).GetAllPermissionStatus
  nameWithType: Repository<T>.GetAllPermissionStatus
  nameWithType.vb: Repository(Of T).GetAllPermissionStatus
- uid: User.Microservice.Repositories.Repository`1.GetAllPersonaCounty
  name: GetAllPersonaCounty()
  href: api/User.Microservice.Repositories.Repository-1.html#User_Microservice_Repositories_Repository_1_GetAllPersonaCounty
  commentId: M:User.Microservice.Repositories.Repository`1.GetAllPersonaCounty
  fullName: User.Microservice.Repositories.Repository<T>.GetAllPersonaCounty()
  fullName.vb: User.Microservice.Repositories.Repository(Of T).GetAllPersonaCounty()
  nameWithType: Repository<T>.GetAllPersonaCounty()
  nameWithType.vb: Repository(Of T).GetAllPersonaCounty()
- uid: User.Microservice.Repositories.Repository`1.GetAllPersonaCounty*
  name: GetAllPersonaCounty
  href: api/User.Microservice.Repositories.Repository-1.html#User_Microservice_Repositories_Repository_1_GetAllPersonaCounty_
  commentId: Overload:User.Microservice.Repositories.Repository`1.GetAllPersonaCounty
  isSpec: "True"
  fullName: User.Microservice.Repositories.Repository<T>.GetAllPersonaCounty
  fullName.vb: User.Microservice.Repositories.Repository(Of T).GetAllPersonaCounty
  nameWithType: Repository<T>.GetAllPersonaCounty
  nameWithType.vb: Repository(Of T).GetAllPersonaCounty
- uid: User.Microservice.Repositories.Repository`1.GetAllPersonaState
  name: GetAllPersonaState()
  href: api/User.Microservice.Repositories.Repository-1.html#User_Microservice_Repositories_Repository_1_GetAllPersonaState
  commentId: M:User.Microservice.Repositories.Repository`1.GetAllPersonaState
  fullName: User.Microservice.Repositories.Repository<T>.GetAllPersonaState()
  fullName.vb: User.Microservice.Repositories.Repository(Of T).GetAllPersonaState()
  nameWithType: Repository<T>.GetAllPersonaState()
  nameWithType.vb: Repository(Of T).GetAllPersonaState()
- uid: User.Microservice.Repositories.Repository`1.GetAllPersonaState*
  name: GetAllPersonaState
  href: api/User.Microservice.Repositories.Repository-1.html#User_Microservice_Repositories_Repository_1_GetAllPersonaState_
  commentId: Overload:User.Microservice.Repositories.Repository`1.GetAllPersonaState
  isSpec: "True"
  fullName: User.Microservice.Repositories.Repository<T>.GetAllPersonaState
  fullName.vb: User.Microservice.Repositories.Repository(Of T).GetAllPersonaState
  nameWithType: Repository<T>.GetAllPersonaState
  nameWithType.vb: Repository(Of T).GetAllPersonaState
- uid: User.Microservice.Repositories.Repository`1.GetAllPersonaStatus
  name: GetAllPersonaStatus()
  href: api/User.Microservice.Repositories.Repository-1.html#User_Microservice_Repositories_Repository_1_GetAllPersonaStatus
  commentId: M:User.Microservice.Repositories.Repository`1.GetAllPersonaStatus
  fullName: User.Microservice.Repositories.Repository<T>.GetAllPersonaStatus()
  fullName.vb: User.Microservice.Repositories.Repository(Of T).GetAllPersonaStatus()
  nameWithType: Repository<T>.GetAllPersonaStatus()
  nameWithType.vb: Repository(Of T).GetAllPersonaStatus()
- uid: User.Microservice.Repositories.Repository`1.GetAllPersonaStatus*
  name: GetAllPersonaStatus
  href: api/User.Microservice.Repositories.Repository-1.html#User_Microservice_Repositories_Repository_1_GetAllPersonaStatus_
  commentId: Overload:User.Microservice.Repositories.Repository`1.GetAllPersonaStatus
  isSpec: "True"
  fullName: User.Microservice.Repositories.Repository<T>.GetAllPersonaStatus
  fullName.vb: User.Microservice.Repositories.Repository(Of T).GetAllPersonaStatus
  nameWithType: Repository<T>.GetAllPersonaStatus
  nameWithType.vb: Repository(Of T).GetAllPersonaStatus
- uid: User.Microservice.Repositories.Repository`1.GetAllRoleStatus
  name: GetAllRoleStatus()
  href: api/User.Microservice.Repositories.Repository-1.html#User_Microservice_Repositories_Repository_1_GetAllRoleStatus
  commentId: M:User.Microservice.Repositories.Repository`1.GetAllRoleStatus
  fullName: User.Microservice.Repositories.Repository<T>.GetAllRoleStatus()
  fullName.vb: User.Microservice.Repositories.Repository(Of T).GetAllRoleStatus()
  nameWithType: Repository<T>.GetAllRoleStatus()
  nameWithType.vb: Repository(Of T).GetAllRoleStatus()
- uid: User.Microservice.Repositories.Repository`1.GetAllRoleStatus*
  name: GetAllRoleStatus
  href: api/User.Microservice.Repositories.Repository-1.html#User_Microservice_Repositories_Repository_1_GetAllRoleStatus_
  commentId: Overload:User.Microservice.Repositories.Repository`1.GetAllRoleStatus
  isSpec: "True"
  fullName: User.Microservice.Repositories.Repository<T>.GetAllRoleStatus
  fullName.vb: User.Microservice.Repositories.Repository(Of T).GetAllRoleStatus
  nameWithType: Repository<T>.GetAllRoleStatus
  nameWithType.vb: Repository(Of T).GetAllRoleStatus
- uid: User.Microservice.Repositories.RolesMappingRepository
  name: RolesMappingRepository
  href: api/User.Microservice.Repositories.RolesMappingRepository.html
  commentId: T:User.Microservice.Repositories.RolesMappingRepository
  fullName: User.Microservice.Repositories.RolesMappingRepository
  nameWithType: RolesMappingRepository
- uid: User.Microservice.Repositories.RolesMappingRepository.#ctor(UserAPI.DBContexts.DbOperationsContext,Microsoft.Extensions.Logging.ILogger{User.Microservice.Repositories.RolesMappingRepository},RawSqlExecuter)
  name: RolesMappingRepository(DbOperationsContext, ILogger<RolesMappingRepository>, RawSqlExecuter)
  href: api/User.Microservice.Repositories.RolesMappingRepository.html#User_Microservice_Repositories_RolesMappingRepository__ctor_UserAPI_DBContexts_DbOperationsContext_Microsoft_Extensions_Logging_ILogger_User_Microservice_Repositories_RolesMappingRepository__RawSqlExecuter_
  commentId: M:User.Microservice.Repositories.RolesMappingRepository.#ctor(UserAPI.DBContexts.DbOperationsContext,Microsoft.Extensions.Logging.ILogger{User.Microservice.Repositories.RolesMappingRepository},RawSqlExecuter)
  name.vb: New(DbOperationsContext, ILogger(Of RolesMappingRepository), RawSqlExecuter)
  fullName: User.Microservice.Repositories.RolesMappingRepository.RolesMappingRepository(UserAPI.DBContexts.DbOperationsContext, Microsoft.Extensions.Logging.ILogger<User.Microservice.Repositories.RolesMappingRepository>, RawSqlExecuter)
  fullName.vb: User.Microservice.Repositories.RolesMappingRepository.New(UserAPI.DBContexts.DbOperationsContext, Microsoft.Extensions.Logging.ILogger(Of User.Microservice.Repositories.RolesMappingRepository), RawSqlExecuter)
  nameWithType: RolesMappingRepository.RolesMappingRepository(DbOperationsContext, ILogger<RolesMappingRepository>, RawSqlExecuter)
  nameWithType.vb: RolesMappingRepository.New(DbOperationsContext, ILogger(Of RolesMappingRepository), RawSqlExecuter)
- uid: User.Microservice.Repositories.RolesMappingRepository.#ctor*
  name: RolesMappingRepository
  href: api/User.Microservice.Repositories.RolesMappingRepository.html#User_Microservice_Repositories_RolesMappingRepository__ctor_
  commentId: Overload:User.Microservice.Repositories.RolesMappingRepository.#ctor
  isSpec: "True"
  name.vb: New
  fullName: User.Microservice.Repositories.RolesMappingRepository.RolesMappingRepository
  fullName.vb: User.Microservice.Repositories.RolesMappingRepository.New
  nameWithType: RolesMappingRepository.RolesMappingRepository
  nameWithType.vb: RolesMappingRepository.New
- uid: User.Microservice.Repositories.RolesMappingRepository.AddRoleMapping(User.Microservice.Models.RolesMappingModel)
  name: AddRoleMapping(RolesMappingModel)
  href: api/User.Microservice.Repositories.RolesMappingRepository.html#User_Microservice_Repositories_RolesMappingRepository_AddRoleMapping_User_Microservice_Models_RolesMappingModel_
  commentId: M:User.Microservice.Repositories.RolesMappingRepository.AddRoleMapping(User.Microservice.Models.RolesMappingModel)
  fullName: User.Microservice.Repositories.RolesMappingRepository.AddRoleMapping(User.Microservice.Models.RolesMappingModel)
  nameWithType: RolesMappingRepository.AddRoleMapping(RolesMappingModel)
- uid: User.Microservice.Repositories.RolesMappingRepository.AddRoleMapping*
  name: AddRoleMapping
  href: api/User.Microservice.Repositories.RolesMappingRepository.html#User_Microservice_Repositories_RolesMappingRepository_AddRoleMapping_
  commentId: Overload:User.Microservice.Repositories.RolesMappingRepository.AddRoleMapping
  isSpec: "True"
  fullName: User.Microservice.Repositories.RolesMappingRepository.AddRoleMapping
  nameWithType: RolesMappingRepository.AddRoleMapping
- uid: User.Microservice.Repositories.RolesMappingRepository.DeleteRoleMapping(System.Int32)
  name: DeleteRoleMapping(int)
  href: api/User.Microservice.Repositories.RolesMappingRepository.html#User_Microservice_Repositories_RolesMappingRepository_DeleteRoleMapping_System_Int32_
  commentId: M:User.Microservice.Repositories.RolesMappingRepository.DeleteRoleMapping(System.Int32)
  name.vb: DeleteRoleMapping(Integer)
  fullName: User.Microservice.Repositories.RolesMappingRepository.DeleteRoleMapping(int)
  fullName.vb: User.Microservice.Repositories.RolesMappingRepository.DeleteRoleMapping(Integer)
  nameWithType: RolesMappingRepository.DeleteRoleMapping(int)
  nameWithType.vb: RolesMappingRepository.DeleteRoleMapping(Integer)
- uid: User.Microservice.Repositories.RolesMappingRepository.DeleteRoleMapping*
  name: DeleteRoleMapping
  href: api/User.Microservice.Repositories.RolesMappingRepository.html#User_Microservice_Repositories_RolesMappingRepository_DeleteRoleMapping_
  commentId: Overload:User.Microservice.Repositories.RolesMappingRepository.DeleteRoleMapping
  isSpec: "True"
  fullName: User.Microservice.Repositories.RolesMappingRepository.DeleteRoleMapping
  nameWithType: RolesMappingRepository.DeleteRoleMapping
- uid: User.Microservice.Repositories.RolesMappingRepository.GetAllRolesMapping
  name: GetAllRolesMapping()
  href: api/User.Microservice.Repositories.RolesMappingRepository.html#User_Microservice_Repositories_RolesMappingRepository_GetAllRolesMapping
  commentId: M:User.Microservice.Repositories.RolesMappingRepository.GetAllRolesMapping
  fullName: User.Microservice.Repositories.RolesMappingRepository.GetAllRolesMapping()
  nameWithType: RolesMappingRepository.GetAllRolesMapping()
- uid: User.Microservice.Repositories.RolesMappingRepository.GetAllRolesMapping*
  name: GetAllRolesMapping
  href: api/User.Microservice.Repositories.RolesMappingRepository.html#User_Microservice_Repositories_RolesMappingRepository_GetAllRolesMapping_
  commentId: Overload:User.Microservice.Repositories.RolesMappingRepository.GetAllRolesMapping
  isSpec: "True"
  fullName: User.Microservice.Repositories.RolesMappingRepository.GetAllRolesMapping
  nameWithType: RolesMappingRepository.GetAllRolesMapping
- uid: User.Microservice.Repositories.RolesMappingRepository.GetRoleMappingById(System.Int32,System.Int32,System.String)
  name: GetRoleMappingById(int, int, string)
  href: api/User.Microservice.Repositories.RolesMappingRepository.html#User_Microservice_Repositories_RolesMappingRepository_GetRoleMappingById_System_Int32_System_Int32_System_String_
  commentId: M:User.Microservice.Repositories.RolesMappingRepository.GetRoleMappingById(System.Int32,System.Int32,System.String)
  name.vb: GetRoleMappingById(Integer, Integer, String)
  fullName: User.Microservice.Repositories.RolesMappingRepository.GetRoleMappingById(int, int, string)
  fullName.vb: User.Microservice.Repositories.RolesMappingRepository.GetRoleMappingById(Integer, Integer, String)
  nameWithType: RolesMappingRepository.GetRoleMappingById(int, int, string)
  nameWithType.vb: RolesMappingRepository.GetRoleMappingById(Integer, Integer, String)
- uid: User.Microservice.Repositories.RolesMappingRepository.GetRoleMappingById*
  name: GetRoleMappingById
  href: api/User.Microservice.Repositories.RolesMappingRepository.html#User_Microservice_Repositories_RolesMappingRepository_GetRoleMappingById_
  commentId: Overload:User.Microservice.Repositories.RolesMappingRepository.GetRoleMappingById
  isSpec: "True"
  fullName: User.Microservice.Repositories.RolesMappingRepository.GetRoleMappingById
  nameWithType: RolesMappingRepository.GetRoleMappingById
- uid: User.Microservice.Repositories.RolesMappingRepository.IsRoleMappingExists(User.Microservice.Models.RolesMappingModel)
  name: IsRoleMappingExists(RolesMappingModel)
  href: api/User.Microservice.Repositories.RolesMappingRepository.html#User_Microservice_Repositories_RolesMappingRepository_IsRoleMappingExists_User_Microservice_Models_RolesMappingModel_
  commentId: M:User.Microservice.Repositories.RolesMappingRepository.IsRoleMappingExists(User.Microservice.Models.RolesMappingModel)
  fullName: User.Microservice.Repositories.RolesMappingRepository.IsRoleMappingExists(User.Microservice.Models.RolesMappingModel)
  nameWithType: RolesMappingRepository.IsRoleMappingExists(RolesMappingModel)
- uid: User.Microservice.Repositories.RolesMappingRepository.IsRoleMappingExists*
  name: IsRoleMappingExists
  href: api/User.Microservice.Repositories.RolesMappingRepository.html#User_Microservice_Repositories_RolesMappingRepository_IsRoleMappingExists_
  commentId: Overload:User.Microservice.Repositories.RolesMappingRepository.IsRoleMappingExists
  isSpec: "True"
  fullName: User.Microservice.Repositories.RolesMappingRepository.IsRoleMappingExists
  nameWithType: RolesMappingRepository.IsRoleMappingExists
- uid: User.Microservice.Repositories.RolesMappingRepository.UpdateRoleMapping(User.Microservice.Models.RolesMappingModel)
  name: UpdateRoleMapping(RolesMappingModel)
  href: api/User.Microservice.Repositories.RolesMappingRepository.html#User_Microservice_Repositories_RolesMappingRepository_UpdateRoleMapping_User_Microservice_Models_RolesMappingModel_
  commentId: M:User.Microservice.Repositories.RolesMappingRepository.UpdateRoleMapping(User.Microservice.Models.RolesMappingModel)
  fullName: User.Microservice.Repositories.RolesMappingRepository.UpdateRoleMapping(User.Microservice.Models.RolesMappingModel)
  nameWithType: RolesMappingRepository.UpdateRoleMapping(RolesMappingModel)
- uid: User.Microservice.Repositories.RolesMappingRepository.UpdateRoleMapping*
  name: UpdateRoleMapping
  href: api/User.Microservice.Repositories.RolesMappingRepository.html#User_Microservice_Repositories_RolesMappingRepository_UpdateRoleMapping_
  commentId: Overload:User.Microservice.Repositories.RolesMappingRepository.UpdateRoleMapping
  isSpec: "True"
  fullName: User.Microservice.Repositories.RolesMappingRepository.UpdateRoleMapping
  nameWithType: RolesMappingRepository.UpdateRoleMapping
- uid: User.Microservice.Repositories.RolesRepository
  name: RolesRepository
  href: api/User.Microservice.Repositories.RolesRepository.html
  commentId: T:User.Microservice.Repositories.RolesRepository
  fullName: User.Microservice.Repositories.RolesRepository
  nameWithType: RolesRepository
- uid: User.Microservice.Repositories.RolesRepository.#ctor(UserAPI.DBContexts.DbOperationsContext,Microsoft.Extensions.Logging.ILogger{User.Microservice.Repositories.RolesRepository},RawSqlExecuter)
  name: RolesRepository(DbOperationsContext, ILogger<RolesRepository>, RawSqlExecuter)
  href: api/User.Microservice.Repositories.RolesRepository.html#User_Microservice_Repositories_RolesRepository__ctor_UserAPI_DBContexts_DbOperationsContext_Microsoft_Extensions_Logging_ILogger_User_Microservice_Repositories_RolesRepository__RawSqlExecuter_
  commentId: M:User.Microservice.Repositories.RolesRepository.#ctor(UserAPI.DBContexts.DbOperationsContext,Microsoft.Extensions.Logging.ILogger{User.Microservice.Repositories.RolesRepository},RawSqlExecuter)
  name.vb: New(DbOperationsContext, ILogger(Of RolesRepository), RawSqlExecuter)
  fullName: User.Microservice.Repositories.RolesRepository.RolesRepository(UserAPI.DBContexts.DbOperationsContext, Microsoft.Extensions.Logging.ILogger<User.Microservice.Repositories.RolesRepository>, RawSqlExecuter)
  fullName.vb: User.Microservice.Repositories.RolesRepository.New(UserAPI.DBContexts.DbOperationsContext, Microsoft.Extensions.Logging.ILogger(Of User.Microservice.Repositories.RolesRepository), RawSqlExecuter)
  nameWithType: RolesRepository.RolesRepository(DbOperationsContext, ILogger<RolesRepository>, RawSqlExecuter)
  nameWithType.vb: RolesRepository.New(DbOperationsContext, ILogger(Of RolesRepository), RawSqlExecuter)
- uid: User.Microservice.Repositories.RolesRepository.#ctor*
  name: RolesRepository
  href: api/User.Microservice.Repositories.RolesRepository.html#User_Microservice_Repositories_RolesRepository__ctor_
  commentId: Overload:User.Microservice.Repositories.RolesRepository.#ctor
  isSpec: "True"
  name.vb: New
  fullName: User.Microservice.Repositories.RolesRepository.RolesRepository
  fullName.vb: User.Microservice.Repositories.RolesRepository.New
  nameWithType: RolesRepository.RolesRepository
  nameWithType.vb: RolesRepository.New
- uid: User.Microservice.Repositories.RolesRepository.AddRole(User.Microservice.Models.RolesModel)
  name: AddRole(RolesModel)
  href: api/User.Microservice.Repositories.RolesRepository.html#User_Microservice_Repositories_RolesRepository_AddRole_User_Microservice_Models_RolesModel_
  commentId: M:User.Microservice.Repositories.RolesRepository.AddRole(User.Microservice.Models.RolesModel)
  fullName: User.Microservice.Repositories.RolesRepository.AddRole(User.Microservice.Models.RolesModel)
  nameWithType: RolesRepository.AddRole(RolesModel)
- uid: User.Microservice.Repositories.RolesRepository.AddRole*
  name: AddRole
  href: api/User.Microservice.Repositories.RolesRepository.html#User_Microservice_Repositories_RolesRepository_AddRole_
  commentId: Overload:User.Microservice.Repositories.RolesRepository.AddRole
  isSpec: "True"
  fullName: User.Microservice.Repositories.RolesRepository.AddRole
  nameWithType: RolesRepository.AddRole
- uid: User.Microservice.Repositories.RolesRepository.DeleteRole(System.Int32)
  name: DeleteRole(int)
  href: api/User.Microservice.Repositories.RolesRepository.html#User_Microservice_Repositories_RolesRepository_DeleteRole_System_Int32_
  commentId: M:User.Microservice.Repositories.RolesRepository.DeleteRole(System.Int32)
  name.vb: DeleteRole(Integer)
  fullName: User.Microservice.Repositories.RolesRepository.DeleteRole(int)
  fullName.vb: User.Microservice.Repositories.RolesRepository.DeleteRole(Integer)
  nameWithType: RolesRepository.DeleteRole(int)
  nameWithType.vb: RolesRepository.DeleteRole(Integer)
- uid: User.Microservice.Repositories.RolesRepository.DeleteRole*
  name: DeleteRole
  href: api/User.Microservice.Repositories.RolesRepository.html#User_Microservice_Repositories_RolesRepository_DeleteRole_
  commentId: Overload:User.Microservice.Repositories.RolesRepository.DeleteRole
  isSpec: "True"
  fullName: User.Microservice.Repositories.RolesRepository.DeleteRole
  nameWithType: RolesRepository.DeleteRole
- uid: User.Microservice.Repositories.RolesRepository.GetAllRoles
  name: GetAllRoles()
  href: api/User.Microservice.Repositories.RolesRepository.html#User_Microservice_Repositories_RolesRepository_GetAllRoles
  commentId: M:User.Microservice.Repositories.RolesRepository.GetAllRoles
  fullName: User.Microservice.Repositories.RolesRepository.GetAllRoles()
  nameWithType: RolesRepository.GetAllRoles()
- uid: User.Microservice.Repositories.RolesRepository.GetAllRoles*
  name: GetAllRoles
  href: api/User.Microservice.Repositories.RolesRepository.html#User_Microservice_Repositories_RolesRepository_GetAllRoles_
  commentId: Overload:User.Microservice.Repositories.RolesRepository.GetAllRoles
  isSpec: "True"
  fullName: User.Microservice.Repositories.RolesRepository.GetAllRoles
  nameWithType: RolesRepository.GetAllRoles
- uid: User.Microservice.Repositories.RolesRepository.GetRoleById(System.Int32)
  name: GetRoleById(int)
  href: api/User.Microservice.Repositories.RolesRepository.html#User_Microservice_Repositories_RolesRepository_GetRoleById_System_Int32_
  commentId: M:User.Microservice.Repositories.RolesRepository.GetRoleById(System.Int32)
  name.vb: GetRoleById(Integer)
  fullName: User.Microservice.Repositories.RolesRepository.GetRoleById(int)
  fullName.vb: User.Microservice.Repositories.RolesRepository.GetRoleById(Integer)
  nameWithType: RolesRepository.GetRoleById(int)
  nameWithType.vb: RolesRepository.GetRoleById(Integer)
- uid: User.Microservice.Repositories.RolesRepository.GetRoleById*
  name: GetRoleById
  href: api/User.Microservice.Repositories.RolesRepository.html#User_Microservice_Repositories_RolesRepository_GetRoleById_
  commentId: Overload:User.Microservice.Repositories.RolesRepository.GetRoleById
  isSpec: "True"
  fullName: User.Microservice.Repositories.RolesRepository.GetRoleById
  nameWithType: RolesRepository.GetRoleById
- uid: User.Microservice.Repositories.RolesRepository.IsRoleExists(User.Microservice.Models.RolesModel)
  name: IsRoleExists(RolesModel)
  href: api/User.Microservice.Repositories.RolesRepository.html#User_Microservice_Repositories_RolesRepository_IsRoleExists_User_Microservice_Models_RolesModel_
  commentId: M:User.Microservice.Repositories.RolesRepository.IsRoleExists(User.Microservice.Models.RolesModel)
  fullName: User.Microservice.Repositories.RolesRepository.IsRoleExists(User.Microservice.Models.RolesModel)
  nameWithType: RolesRepository.IsRoleExists(RolesModel)
- uid: User.Microservice.Repositories.RolesRepository.IsRoleExists*
  name: IsRoleExists
  href: api/User.Microservice.Repositories.RolesRepository.html#User_Microservice_Repositories_RolesRepository_IsRoleExists_
  commentId: Overload:User.Microservice.Repositories.RolesRepository.IsRoleExists
  isSpec: "True"
  fullName: User.Microservice.Repositories.RolesRepository.IsRoleExists
  nameWithType: RolesRepository.IsRoleExists
- uid: User.Microservice.Repositories.RolesRepository.UpdateRole(User.Microservice.Models.RolesModel)
  name: UpdateRole(RolesModel)
  href: api/User.Microservice.Repositories.RolesRepository.html#User_Microservice_Repositories_RolesRepository_UpdateRole_User_Microservice_Models_RolesModel_
  commentId: M:User.Microservice.Repositories.RolesRepository.UpdateRole(User.Microservice.Models.RolesModel)
  fullName: User.Microservice.Repositories.RolesRepository.UpdateRole(User.Microservice.Models.RolesModel)
  nameWithType: RolesRepository.UpdateRole(RolesModel)
- uid: User.Microservice.Repositories.RolesRepository.UpdateRole*
  name: UpdateRole
  href: api/User.Microservice.Repositories.RolesRepository.html#User_Microservice_Repositories_RolesRepository_UpdateRole_
  commentId: Overload:User.Microservice.Repositories.RolesRepository.UpdateRole
  isSpec: "True"
  fullName: User.Microservice.Repositories.RolesRepository.UpdateRole
  nameWithType: RolesRepository.UpdateRole
- uid: User.Microservice.ServiceData
  name: User.Microservice.ServiceData
  href: api/User.Microservice.ServiceData.html
  commentId: N:User.Microservice.ServiceData
  fullName: User.Microservice.ServiceData
  nameWithType: User.Microservice.ServiceData
- uid: User.Microservice.ServiceData.PermissionsData
  name: PermissionsData
  href: api/User.Microservice.ServiceData.PermissionsData.html
  commentId: T:User.Microservice.ServiceData.PermissionsData
  fullName: User.Microservice.ServiceData.PermissionsData
  nameWithType: PermissionsData
- uid: User.Microservice.ServiceData.PermissionsData.GetPermissions
  name: GetPermissions()
  href: api/User.Microservice.ServiceData.PermissionsData.html#User_Microservice_ServiceData_PermissionsData_GetPermissions
  commentId: M:User.Microservice.ServiceData.PermissionsData.GetPermissions
  fullName: User.Microservice.ServiceData.PermissionsData.GetPermissions()
  nameWithType: PermissionsData.GetPermissions()
- uid: User.Microservice.ServiceData.PermissionsData.GetPermissions*
  name: GetPermissions
  href: api/User.Microservice.ServiceData.PermissionsData.html#User_Microservice_ServiceData_PermissionsData_GetPermissions_
  commentId: Overload:User.Microservice.ServiceData.PermissionsData.GetPermissions
  isSpec: "True"
  fullName: User.Microservice.ServiceData.PermissionsData.GetPermissions
  nameWithType: PermissionsData.GetPermissions
- uid: User.Microservice.ServiceData.PermissionsData.GetPermissionStatuses
  name: GetPermissionStatuses()
  href: api/User.Microservice.ServiceData.PermissionsData.html#User_Microservice_ServiceData_PermissionsData_GetPermissionStatuses
  commentId: M:User.Microservice.ServiceData.PermissionsData.GetPermissionStatuses
  fullName: User.Microservice.ServiceData.PermissionsData.GetPermissionStatuses()
  nameWithType: PermissionsData.GetPermissionStatuses()
- uid: User.Microservice.ServiceData.PermissionsData.GetPermissionStatuses*
  name: GetPermissionStatuses
  href: api/User.Microservice.ServiceData.PermissionsData.html#User_Microservice_ServiceData_PermissionsData_GetPermissionStatuses_
  commentId: Overload:User.Microservice.ServiceData.PermissionsData.GetPermissionStatuses
  isSpec: "True"
  fullName: User.Microservice.ServiceData.PermissionsData.GetPermissionStatuses
  nameWithType: PermissionsData.GetPermissionStatuses
- uid: User.Microservice.ServiceData.PersonaData
  name: PersonaData
  href: api/User.Microservice.ServiceData.PersonaData.html
  commentId: T:User.Microservice.ServiceData.PersonaData
  fullName: User.Microservice.ServiceData.PersonaData
  nameWithType: PersonaData
- uid: User.Microservice.ServiceData.PersonaData.GetPersonaCounties
  name: GetPersonaCounties()
  href: api/User.Microservice.ServiceData.PersonaData.html#User_Microservice_ServiceData_PersonaData_GetPersonaCounties
  commentId: M:User.Microservice.ServiceData.PersonaData.GetPersonaCounties
  fullName: User.Microservice.ServiceData.PersonaData.GetPersonaCounties()
  nameWithType: PersonaData.GetPersonaCounties()
- uid: User.Microservice.ServiceData.PersonaData.GetPersonaCounties*
  name: GetPersonaCounties
  href: api/User.Microservice.ServiceData.PersonaData.html#User_Microservice_ServiceData_PersonaData_GetPersonaCounties_
  commentId: Overload:User.Microservice.ServiceData.PersonaData.GetPersonaCounties
  isSpec: "True"
  fullName: User.Microservice.ServiceData.PersonaData.GetPersonaCounties
  nameWithType: PersonaData.GetPersonaCounties
- uid: User.Microservice.ServiceData.PersonaData.GetPersonaStates
  name: GetPersonaStates()
  href: api/User.Microservice.ServiceData.PersonaData.html#User_Microservice_ServiceData_PersonaData_GetPersonaStates
  commentId: M:User.Microservice.ServiceData.PersonaData.GetPersonaStates
  fullName: User.Microservice.ServiceData.PersonaData.GetPersonaStates()
  nameWithType: PersonaData.GetPersonaStates()
- uid: User.Microservice.ServiceData.PersonaData.GetPersonaStates*
  name: GetPersonaStates
  href: api/User.Microservice.ServiceData.PersonaData.html#User_Microservice_ServiceData_PersonaData_GetPersonaStates_
  commentId: Overload:User.Microservice.ServiceData.PersonaData.GetPersonaStates
  isSpec: "True"
  fullName: User.Microservice.ServiceData.PersonaData.GetPersonaStates
  nameWithType: PersonaData.GetPersonaStates
- uid: User.Microservice.ServiceData.PersonaData.GetPersonaStatuses
  name: GetPersonaStatuses()
  href: api/User.Microservice.ServiceData.PersonaData.html#User_Microservice_ServiceData_PersonaData_GetPersonaStatuses
  commentId: M:User.Microservice.ServiceData.PersonaData.GetPersonaStatuses
  fullName: User.Microservice.ServiceData.PersonaData.GetPersonaStatuses()
  nameWithType: PersonaData.GetPersonaStatuses()
- uid: User.Microservice.ServiceData.PersonaData.GetPersonaStatuses*
  name: GetPersonaStatuses
  href: api/User.Microservice.ServiceData.PersonaData.html#User_Microservice_ServiceData_PersonaData_GetPersonaStatuses_
  commentId: Overload:User.Microservice.ServiceData.PersonaData.GetPersonaStatuses
  isSpec: "True"
  fullName: User.Microservice.ServiceData.PersonaData.GetPersonaStatuses
  nameWithType: PersonaData.GetPersonaStatuses
- uid: User.Microservice.ServiceData.RolesData
  name: RolesData
  href: api/User.Microservice.ServiceData.RolesData.html
  commentId: T:User.Microservice.ServiceData.RolesData
  fullName: User.Microservice.ServiceData.RolesData
  nameWithType: RolesData
- uid: User.Microservice.ServiceData.RolesData.GetRoles
  name: GetRoles()
  href: api/User.Microservice.ServiceData.RolesData.html#User_Microservice_ServiceData_RolesData_GetRoles
  commentId: M:User.Microservice.ServiceData.RolesData.GetRoles
  fullName: User.Microservice.ServiceData.RolesData.GetRoles()
  nameWithType: RolesData.GetRoles()
- uid: User.Microservice.ServiceData.RolesData.GetRoles*
  name: GetRoles
  href: api/User.Microservice.ServiceData.RolesData.html#User_Microservice_ServiceData_RolesData_GetRoles_
  commentId: Overload:User.Microservice.ServiceData.RolesData.GetRoles
  isSpec: "True"
  fullName: User.Microservice.ServiceData.RolesData.GetRoles
  nameWithType: RolesData.GetRoles
- uid: User.Microservice.ServiceData.RolesData.GetRoleStatuses
  name: GetRoleStatuses()
  href: api/User.Microservice.ServiceData.RolesData.html#User_Microservice_ServiceData_RolesData_GetRoleStatuses
  commentId: M:User.Microservice.ServiceData.RolesData.GetRoleStatuses
  fullName: User.Microservice.ServiceData.RolesData.GetRoleStatuses()
  nameWithType: RolesData.GetRoleStatuses()
- uid: User.Microservice.ServiceData.RolesData.GetRoleStatuses*
  name: GetRoleStatuses
  href: api/User.Microservice.ServiceData.RolesData.html#User_Microservice_ServiceData_RolesData_GetRoleStatuses_
  commentId: Overload:User.Microservice.ServiceData.RolesData.GetRoleStatuses
  isSpec: "True"
  fullName: User.Microservice.ServiceData.RolesData.GetRoleStatuses
  nameWithType: RolesData.GetRoleStatuses
- uid: User.Microservice.ServiceDataSeeder
  name: User.Microservice.ServiceDataSeeder
  href: api/User.Microservice.ServiceDataSeeder.html
  commentId: N:User.Microservice.ServiceDataSeeder
  fullName: User.Microservice.ServiceDataSeeder
  nameWithType: User.Microservice.ServiceDataSeeder
- uid: User.Microservice.ServiceDataSeeder.DataSeeder
  name: DataSeeder
  href: api/User.Microservice.ServiceDataSeeder.DataSeeder.html
  commentId: T:User.Microservice.ServiceDataSeeder.DataSeeder
  fullName: User.Microservice.ServiceDataSeeder.DataSeeder
  nameWithType: DataSeeder
- uid: User.Microservice.ServiceDataSeeder.DataSeeder.#ctor(UserAPI.DBContexts.DbOperationsContext,RawSqlExecuter)
  name: DataSeeder(DbOperationsContext, RawSqlExecuter)
  href: api/User.Microservice.ServiceDataSeeder.DataSeeder.html#User_Microservice_ServiceDataSeeder_DataSeeder__ctor_UserAPI_DBContexts_DbOperationsContext_RawSqlExecuter_
  commentId: M:User.Microservice.ServiceDataSeeder.DataSeeder.#ctor(UserAPI.DBContexts.DbOperationsContext,RawSqlExecuter)
  name.vb: New(DbOperationsContext, RawSqlExecuter)
  fullName: User.Microservice.ServiceDataSeeder.DataSeeder.DataSeeder(UserAPI.DBContexts.DbOperationsContext, RawSqlExecuter)
  fullName.vb: User.Microservice.ServiceDataSeeder.DataSeeder.New(UserAPI.DBContexts.DbOperationsContext, RawSqlExecuter)
  nameWithType: DataSeeder.DataSeeder(DbOperationsContext, RawSqlExecuter)
  nameWithType.vb: DataSeeder.New(DbOperationsContext, RawSqlExecuter)
- uid: User.Microservice.ServiceDataSeeder.DataSeeder.#ctor*
  name: DataSeeder
  href: api/User.Microservice.ServiceDataSeeder.DataSeeder.html#User_Microservice_ServiceDataSeeder_DataSeeder__ctor_
  commentId: Overload:User.Microservice.ServiceDataSeeder.DataSeeder.#ctor
  isSpec: "True"
  name.vb: New
  fullName: User.Microservice.ServiceDataSeeder.DataSeeder.DataSeeder
  fullName.vb: User.Microservice.ServiceDataSeeder.DataSeeder.New
  nameWithType: DataSeeder.DataSeeder
  nameWithType.vb: DataSeeder.New
- uid: User.Microservice.ServiceDataSeeder.DataSeeder.DeleteOperation(UserAPI.DBContexts.DbOperationsContext)
  name: DeleteOperation(DbOperationsContext)
  href: api/User.Microservice.ServiceDataSeeder.DataSeeder.html#User_Microservice_ServiceDataSeeder_DataSeeder_DeleteOperation_UserAPI_DBContexts_DbOperationsContext_
  commentId: M:User.Microservice.ServiceDataSeeder.DataSeeder.DeleteOperation(UserAPI.DBContexts.DbOperationsContext)
  fullName: User.Microservice.ServiceDataSeeder.DataSeeder.DeleteOperation(UserAPI.DBContexts.DbOperationsContext)
  nameWithType: DataSeeder.DeleteOperation(DbOperationsContext)
- uid: User.Microservice.ServiceDataSeeder.DataSeeder.DeleteOperation*
  name: DeleteOperation
  href: api/User.Microservice.ServiceDataSeeder.DataSeeder.html#User_Microservice_ServiceDataSeeder_DataSeeder_DeleteOperation_
  commentId: Overload:User.Microservice.ServiceDataSeeder.DataSeeder.DeleteOperation
  isSpec: "True"
  fullName: User.Microservice.ServiceDataSeeder.DataSeeder.DeleteOperation
  nameWithType: DataSeeder.DeleteOperation
- uid: User.Microservice.ServiceDataSeeder.DataSeeder.InsertOperation(UserAPI.DBContexts.DbOperationsContext)
  name: InsertOperation(DbOperationsContext)
  href: api/User.Microservice.ServiceDataSeeder.DataSeeder.html#User_Microservice_ServiceDataSeeder_DataSeeder_InsertOperation_UserAPI_DBContexts_DbOperationsContext_
  commentId: M:User.Microservice.ServiceDataSeeder.DataSeeder.InsertOperation(UserAPI.DBContexts.DbOperationsContext)
  fullName: User.Microservice.ServiceDataSeeder.DataSeeder.InsertOperation(UserAPI.DBContexts.DbOperationsContext)
  nameWithType: DataSeeder.InsertOperation(DbOperationsContext)
- uid: User.Microservice.ServiceDataSeeder.DataSeeder.InsertOperation*
  name: InsertOperation
  href: api/User.Microservice.ServiceDataSeeder.DataSeeder.html#User_Microservice_ServiceDataSeeder_DataSeeder_InsertOperation_
  commentId: Overload:User.Microservice.ServiceDataSeeder.DataSeeder.InsertOperation
  isSpec: "True"
  fullName: User.Microservice.ServiceDataSeeder.DataSeeder.InsertOperation
  nameWithType: DataSeeder.InsertOperation
- uid: User.Microservice.ServiceDataSeeder.DataSeeder.UpdateOperation(UserAPI.DBContexts.DbOperationsContext)
  name: UpdateOperation(DbOperationsContext)
  href: api/User.Microservice.ServiceDataSeeder.DataSeeder.html#User_Microservice_ServiceDataSeeder_DataSeeder_UpdateOperation_UserAPI_DBContexts_DbOperationsContext_
  commentId: M:User.Microservice.ServiceDataSeeder.DataSeeder.UpdateOperation(UserAPI.DBContexts.DbOperationsContext)
  fullName: User.Microservice.ServiceDataSeeder.DataSeeder.UpdateOperation(UserAPI.DBContexts.DbOperationsContext)
  nameWithType: DataSeeder.UpdateOperation(DbOperationsContext)
- uid: User.Microservice.ServiceDataSeeder.DataSeeder.UpdateOperation*
  name: UpdateOperation
  href: api/User.Microservice.ServiceDataSeeder.DataSeeder.html#User_Microservice_ServiceDataSeeder_DataSeeder_UpdateOperation_
  commentId: Overload:User.Microservice.ServiceDataSeeder.DataSeeder.UpdateOperation
  isSpec: "True"
  fullName: User.Microservice.ServiceDataSeeder.DataSeeder.UpdateOperation
  nameWithType: DataSeeder.UpdateOperation
- uid: User.Microservice.ServiceInterfaces
  name: User.Microservice.ServiceInterfaces
  href: api/User.Microservice.ServiceInterfaces.html
  commentId: N:User.Microservice.ServiceInterfaces
  fullName: User.Microservice.ServiceInterfaces
  nameWithType: User.Microservice.ServiceInterfaces
- uid: User.Microservice.ServiceInterfaces.IDataSeeder
  name: IDataSeeder
  href: api/User.Microservice.ServiceInterfaces.IDataSeeder.html
  commentId: T:User.Microservice.ServiceInterfaces.IDataSeeder
  fullName: User.Microservice.ServiceInterfaces.IDataSeeder
  nameWithType: IDataSeeder
- uid: User.Microservice.ServiceInterfaces.IDataSeeder.DeleteOperation(UserAPI.DBContexts.DbOperationsContext)
  name: DeleteOperation(DbOperationsContext)
  href: api/User.Microservice.ServiceInterfaces.IDataSeeder.html#User_Microservice_ServiceInterfaces_IDataSeeder_DeleteOperation_UserAPI_DBContexts_DbOperationsContext_
  commentId: M:User.Microservice.ServiceInterfaces.IDataSeeder.DeleteOperation(UserAPI.DBContexts.DbOperationsContext)
  fullName: User.Microservice.ServiceInterfaces.IDataSeeder.DeleteOperation(UserAPI.DBContexts.DbOperationsContext)
  nameWithType: IDataSeeder.DeleteOperation(DbOperationsContext)
- uid: User.Microservice.ServiceInterfaces.IDataSeeder.DeleteOperation*
  name: DeleteOperation
  href: api/User.Microservice.ServiceInterfaces.IDataSeeder.html#User_Microservice_ServiceInterfaces_IDataSeeder_DeleteOperation_
  commentId: Overload:User.Microservice.ServiceInterfaces.IDataSeeder.DeleteOperation
  isSpec: "True"
  fullName: User.Microservice.ServiceInterfaces.IDataSeeder.DeleteOperation
  nameWithType: IDataSeeder.DeleteOperation
- uid: User.Microservice.ServiceInterfaces.IDataSeeder.InsertOperation(UserAPI.DBContexts.DbOperationsContext)
  name: InsertOperation(DbOperationsContext)
  href: api/User.Microservice.ServiceInterfaces.IDataSeeder.html#User_Microservice_ServiceInterfaces_IDataSeeder_InsertOperation_UserAPI_DBContexts_DbOperationsContext_
  commentId: M:User.Microservice.ServiceInterfaces.IDataSeeder.InsertOperation(UserAPI.DBContexts.DbOperationsContext)
  fullName: User.Microservice.ServiceInterfaces.IDataSeeder.InsertOperation(UserAPI.DBContexts.DbOperationsContext)
  nameWithType: IDataSeeder.InsertOperation(DbOperationsContext)
- uid: User.Microservice.ServiceInterfaces.IDataSeeder.InsertOperation*
  name: InsertOperation
  href: api/User.Microservice.ServiceInterfaces.IDataSeeder.html#User_Microservice_ServiceInterfaces_IDataSeeder_InsertOperation_
  commentId: Overload:User.Microservice.ServiceInterfaces.IDataSeeder.InsertOperation
  isSpec: "True"
  fullName: User.Microservice.ServiceInterfaces.IDataSeeder.InsertOperation
  nameWithType: IDataSeeder.InsertOperation
- uid: User.Microservice.ServiceInterfaces.IDataSeeder.UpdateOperation(UserAPI.DBContexts.DbOperationsContext)
  name: UpdateOperation(DbOperationsContext)
  href: api/User.Microservice.ServiceInterfaces.IDataSeeder.html#User_Microservice_ServiceInterfaces_IDataSeeder_UpdateOperation_UserAPI_DBContexts_DbOperationsContext_
  commentId: M:User.Microservice.ServiceInterfaces.IDataSeeder.UpdateOperation(UserAPI.DBContexts.DbOperationsContext)
  fullName: User.Microservice.ServiceInterfaces.IDataSeeder.UpdateOperation(UserAPI.DBContexts.DbOperationsContext)
  nameWithType: IDataSeeder.UpdateOperation(DbOperationsContext)
- uid: User.Microservice.ServiceInterfaces.IDataSeeder.UpdateOperation*
  name: UpdateOperation
  href: api/User.Microservice.ServiceInterfaces.IDataSeeder.html#User_Microservice_ServiceInterfaces_IDataSeeder_UpdateOperation_
  commentId: Overload:User.Microservice.ServiceInterfaces.IDataSeeder.UpdateOperation
  isSpec: "True"
  fullName: User.Microservice.ServiceInterfaces.IDataSeeder.UpdateOperation
  nameWithType: IDataSeeder.UpdateOperation
- uid: UserAPI.Controllers
  name: UserAPI.Controllers
  href: api/UserAPI.Controllers.html
  commentId: N:UserAPI.Controllers
  fullName: UserAPI.Controllers
  nameWithType: UserAPI.Controllers
- uid: UserAPI.Controllers.CommonsController
  name: CommonsController
  href: api/UserAPI.Controllers.CommonsController.html
  commentId: T:UserAPI.Controllers.CommonsController
  fullName: UserAPI.Controllers.CommonsController
  nameWithType: CommonsController
- uid: UserAPI.Controllers.CommonsController.#ctor(Microsoft.Extensions.Logging.ILogger{UserAPI.Controllers.CommonsController},User.Microservice.Interfaces.IRepository{User.Microservice.Models.RoleStatusModel},User.Microservice.Interfaces.IRepository{User.Microservice.Models.PersonaStatusModel},User.Microservice.Interfaces.IRepository{User.Microservice.Models.PersonaStateModel},User.Microservice.Interfaces.IRepository{User.Microservice.Models.PersonaCountyModel},User.Microservice.Interfaces.IRepository{User.Microservice.Models.PermissionStatusModel})
  name: CommonsController(ILogger<CommonsController>, IRepository<RoleStatusModel>, IRepository<PersonaStatusModel>, IRepository<PersonaStateModel>, IRepository<PersonaCountyModel>, IRepository<PermissionStatusModel>)
  href: api/UserAPI.Controllers.CommonsController.html#UserAPI_Controllers_CommonsController__ctor_Microsoft_Extensions_Logging_ILogger_UserAPI_Controllers_CommonsController__User_Microservice_Interfaces_IRepository_User_Microservice_Models_RoleStatusModel__User_Microservice_Interfaces_IRepository_User_Microservice_Models_PersonaStatusModel__User_Microservice_Interfaces_IRepository_User_Microservice_Models_PersonaStateModel__User_Microservice_Interfaces_IRepository_User_Microservice_Models_PersonaCountyModel__User_Microservice_Interfaces_IRepository_User_Microservice_Models_PermissionStatusModel__
  commentId: M:UserAPI.Controllers.CommonsController.#ctor(Microsoft.Extensions.Logging.ILogger{UserAPI.Controllers.CommonsController},User.Microservice.Interfaces.IRepository{User.Microservice.Models.RoleStatusModel},User.Microservice.Interfaces.IRepository{User.Microservice.Models.PersonaStatusModel},User.Microservice.Interfaces.IRepository{User.Microservice.Models.PersonaStateModel},User.Microservice.Interfaces.IRepository{User.Microservice.Models.PersonaCountyModel},User.Microservice.Interfaces.IRepository{User.Microservice.Models.PermissionStatusModel})
  name.vb: New(ILogger(Of CommonsController), IRepository(Of RoleStatusModel), IRepository(Of PersonaStatusModel), IRepository(Of PersonaStateModel), IRepository(Of PersonaCountyModel), IRepository(Of PermissionStatusModel))
  fullName: UserAPI.Controllers.CommonsController.CommonsController(Microsoft.Extensions.Logging.ILogger<UserAPI.Controllers.CommonsController>, User.Microservice.Interfaces.IRepository<User.Microservice.Models.RoleStatusModel>, User.Microservice.Interfaces.IRepository<User.Microservice.Models.PersonaStatusModel>, User.Microservice.Interfaces.IRepository<User.Microservice.Models.PersonaStateModel>, User.Microservice.Interfaces.IRepository<User.Microservice.Models.PersonaCountyModel>, User.Microservice.Interfaces.IRepository<User.Microservice.Models.PermissionStatusModel>)
  fullName.vb: UserAPI.Controllers.CommonsController.New(Microsoft.Extensions.Logging.ILogger(Of UserAPI.Controllers.CommonsController), User.Microservice.Interfaces.IRepository(Of User.Microservice.Models.RoleStatusModel), User.Microservice.Interfaces.IRepository(Of User.Microservice.Models.PersonaStatusModel), User.Microservice.Interfaces.IRepository(Of User.Microservice.Models.PersonaStateModel), User.Microservice.Interfaces.IRepository(Of User.Microservice.Models.PersonaCountyModel), User.Microservice.Interfaces.IRepository(Of User.Microservice.Models.PermissionStatusModel))
  nameWithType: CommonsController.CommonsController(ILogger<CommonsController>, IRepository<RoleStatusModel>, IRepository<PersonaStatusModel>, IRepository<PersonaStateModel>, IRepository<PersonaCountyModel>, IRepository<PermissionStatusModel>)
  nameWithType.vb: CommonsController.New(ILogger(Of CommonsController), IRepository(Of RoleStatusModel), IRepository(Of PersonaStatusModel), IRepository(Of PersonaStateModel), IRepository(Of PersonaCountyModel), IRepository(Of PermissionStatusModel))
- uid: UserAPI.Controllers.CommonsController.#ctor*
  name: CommonsController
  href: api/UserAPI.Controllers.CommonsController.html#UserAPI_Controllers_CommonsController__ctor_
  commentId: Overload:UserAPI.Controllers.CommonsController.#ctor
  isSpec: "True"
  name.vb: New
  fullName: UserAPI.Controllers.CommonsController.CommonsController
  fullName.vb: UserAPI.Controllers.CommonsController.New
  nameWithType: CommonsController.CommonsController
  nameWithType.vb: CommonsController.New
- uid: UserAPI.Controllers.CommonsController.GetAllPermissionStatus
  name: GetAllPermissionStatus()
  href: api/UserAPI.Controllers.CommonsController.html#UserAPI_Controllers_CommonsController_GetAllPermissionStatus
  commentId: M:UserAPI.Controllers.CommonsController.GetAllPermissionStatus
  fullName: UserAPI.Controllers.CommonsController.GetAllPermissionStatus()
  nameWithType: CommonsController.GetAllPermissionStatus()
- uid: UserAPI.Controllers.CommonsController.GetAllPermissionStatus*
  name: GetAllPermissionStatus
  href: api/UserAPI.Controllers.CommonsController.html#UserAPI_Controllers_CommonsController_GetAllPermissionStatus_
  commentId: Overload:UserAPI.Controllers.CommonsController.GetAllPermissionStatus
  isSpec: "True"
  fullName: UserAPI.Controllers.CommonsController.GetAllPermissionStatus
  nameWithType: CommonsController.GetAllPermissionStatus
- uid: UserAPI.Controllers.CommonsController.GetAllPersonaCounty
  name: GetAllPersonaCounty()
  href: api/UserAPI.Controllers.CommonsController.html#UserAPI_Controllers_CommonsController_GetAllPersonaCounty
  commentId: M:UserAPI.Controllers.CommonsController.GetAllPersonaCounty
  fullName: UserAPI.Controllers.CommonsController.GetAllPersonaCounty()
  nameWithType: CommonsController.GetAllPersonaCounty()
- uid: UserAPI.Controllers.CommonsController.GetAllPersonaCounty*
  name: GetAllPersonaCounty
  href: api/UserAPI.Controllers.CommonsController.html#UserAPI_Controllers_CommonsController_GetAllPersonaCounty_
  commentId: Overload:UserAPI.Controllers.CommonsController.GetAllPersonaCounty
  isSpec: "True"
  fullName: UserAPI.Controllers.CommonsController.GetAllPersonaCounty
  nameWithType: CommonsController.GetAllPersonaCounty
- uid: UserAPI.Controllers.CommonsController.GetAllPersonaState
  name: GetAllPersonaState()
  href: api/UserAPI.Controllers.CommonsController.html#UserAPI_Controllers_CommonsController_GetAllPersonaState
  commentId: M:UserAPI.Controllers.CommonsController.GetAllPersonaState
  fullName: UserAPI.Controllers.CommonsController.GetAllPersonaState()
  nameWithType: CommonsController.GetAllPersonaState()
- uid: UserAPI.Controllers.CommonsController.GetAllPersonaState*
  name: GetAllPersonaState
  href: api/UserAPI.Controllers.CommonsController.html#UserAPI_Controllers_CommonsController_GetAllPersonaState_
  commentId: Overload:UserAPI.Controllers.CommonsController.GetAllPersonaState
  isSpec: "True"
  fullName: UserAPI.Controllers.CommonsController.GetAllPersonaState
  nameWithType: CommonsController.GetAllPersonaState
- uid: UserAPI.Controllers.CommonsController.GetAllPersonaStatus
  name: GetAllPersonaStatus()
  href: api/UserAPI.Controllers.CommonsController.html#UserAPI_Controllers_CommonsController_GetAllPersonaStatus
  commentId: M:UserAPI.Controllers.CommonsController.GetAllPersonaStatus
  fullName: UserAPI.Controllers.CommonsController.GetAllPersonaStatus()
  nameWithType: CommonsController.GetAllPersonaStatus()
- uid: UserAPI.Controllers.CommonsController.GetAllPersonaStatus*
  name: GetAllPersonaStatus
  href: api/UserAPI.Controllers.CommonsController.html#UserAPI_Controllers_CommonsController_GetAllPersonaStatus_
  commentId: Overload:UserAPI.Controllers.CommonsController.GetAllPersonaStatus
  isSpec: "True"
  fullName: UserAPI.Controllers.CommonsController.GetAllPersonaStatus
  nameWithType: CommonsController.GetAllPersonaStatus
- uid: UserAPI.Controllers.CommonsController.GetAllRoleStatus
  name: GetAllRoleStatus()
  href: api/UserAPI.Controllers.CommonsController.html#UserAPI_Controllers_CommonsController_GetAllRoleStatus
  commentId: M:UserAPI.Controllers.CommonsController.GetAllRoleStatus
  fullName: UserAPI.Controllers.CommonsController.GetAllRoleStatus()
  nameWithType: CommonsController.GetAllRoleStatus()
- uid: UserAPI.Controllers.CommonsController.GetAllRoleStatus*
  name: GetAllRoleStatus
  href: api/UserAPI.Controllers.CommonsController.html#UserAPI_Controllers_CommonsController_GetAllRoleStatus_
  commentId: Overload:UserAPI.Controllers.CommonsController.GetAllRoleStatus
  isSpec: "True"
  fullName: UserAPI.Controllers.CommonsController.GetAllRoleStatus
  nameWithType: CommonsController.GetAllRoleStatus
- uid: UserAPI.DBContexts
  name: UserAPI.DBContexts
  href: api/UserAPI.DBContexts.html
  commentId: N:UserAPI.DBContexts
  fullName: UserAPI.DBContexts
  nameWithType: UserAPI.DBContexts
- uid: UserAPI.DBContexts.DbOperationsContext
  name: DbOperationsContext
  href: api/UserAPI.DBContexts.DbOperationsContext.html
  commentId: T:UserAPI.DBContexts.DbOperationsContext
  fullName: UserAPI.DBContexts.DbOperationsContext
  nameWithType: DbOperationsContext
- uid: UserAPI.DBContexts.DbOperationsContext.#ctor(Microsoft.EntityFrameworkCore.DbContextOptions{UserAPI.DBContexts.DbOperationsContext})
  name: DbOperationsContext(DbContextOptions<DbOperationsContext>)
  href: api/UserAPI.DBContexts.DbOperationsContext.html#UserAPI_DBContexts_DbOperationsContext__ctor_Microsoft_EntityFrameworkCore_DbContextOptions_UserAPI_DBContexts_DbOperationsContext__
  commentId: M:UserAPI.DBContexts.DbOperationsContext.#ctor(Microsoft.EntityFrameworkCore.DbContextOptions{UserAPI.DBContexts.DbOperationsContext})
  name.vb: New(DbContextOptions(Of DbOperationsContext))
  fullName: UserAPI.DBContexts.DbOperationsContext.DbOperationsContext(Microsoft.EntityFrameworkCore.DbContextOptions<UserAPI.DBContexts.DbOperationsContext>)
  fullName.vb: UserAPI.DBContexts.DbOperationsContext.New(Microsoft.EntityFrameworkCore.DbContextOptions(Of UserAPI.DBContexts.DbOperationsContext))
  nameWithType: DbOperationsContext.DbOperationsContext(DbContextOptions<DbOperationsContext>)
  nameWithType.vb: DbOperationsContext.New(DbContextOptions(Of DbOperationsContext))
- uid: UserAPI.DBContexts.DbOperationsContext.#ctor*
  name: DbOperationsContext
  href: api/UserAPI.DBContexts.DbOperationsContext.html#UserAPI_DBContexts_DbOperationsContext__ctor_
  commentId: Overload:UserAPI.DBContexts.DbOperationsContext.#ctor
  isSpec: "True"
  name.vb: New
  fullName: UserAPI.DBContexts.DbOperationsContext.DbOperationsContext
  fullName.vb: UserAPI.DBContexts.DbOperationsContext.New
  nameWithType: DbOperationsContext.DbOperationsContext
  nameWithType.vb: DbOperationsContext.New
- uid: UserAPI.DBContexts.DbOperationsContext.InstanceCount
  name: InstanceCount
  href: api/UserAPI.DBContexts.DbOperationsContext.html#UserAPI_DBContexts_DbOperationsContext_InstanceCount
  commentId: F:UserAPI.DBContexts.DbOperationsContext.InstanceCount
  fullName: UserAPI.DBContexts.DbOperationsContext.InstanceCount
  nameWithType: DbOperationsContext.InstanceCount
- uid: UserAPI.DBContexts.DbOperationsContext.OnModelCreating(Microsoft.EntityFrameworkCore.ModelBuilder)
  name: OnModelCreating(ModelBuilder)
  href: api/UserAPI.DBContexts.DbOperationsContext.html#UserAPI_DBContexts_DbOperationsContext_OnModelCreating_Microsoft_EntityFrameworkCore_ModelBuilder_
  commentId: M:UserAPI.DBContexts.DbOperationsContext.OnModelCreating(Microsoft.EntityFrameworkCore.ModelBuilder)
  fullName: UserAPI.DBContexts.DbOperationsContext.OnModelCreating(Microsoft.EntityFrameworkCore.ModelBuilder)
  nameWithType: DbOperationsContext.OnModelCreating(ModelBuilder)
- uid: UserAPI.DBContexts.DbOperationsContext.OnModelCreating*
  name: OnModelCreating
  href: api/UserAPI.DBContexts.DbOperationsContext.html#UserAPI_DBContexts_DbOperationsContext_OnModelCreating_
  commentId: Overload:UserAPI.DBContexts.DbOperationsContext.OnModelCreating
  isSpec: "True"
  fullName: UserAPI.DBContexts.DbOperationsContext.OnModelCreating
  nameWithType: DbOperationsContext.OnModelCreating
- uid: UserAPI.DBContexts.DbOperationsContext.Permissions
  name: Permissions
  href: api/UserAPI.DBContexts.DbOperationsContext.html#UserAPI_DBContexts_DbOperationsContext_Permissions
  commentId: P:UserAPI.DBContexts.DbOperationsContext.Permissions
  fullName: UserAPI.DBContexts.DbOperationsContext.Permissions
  nameWithType: DbOperationsContext.Permissions
- uid: UserAPI.DBContexts.DbOperationsContext.Permissions*
  name: Permissions
  href: api/UserAPI.DBContexts.DbOperationsContext.html#UserAPI_DBContexts_DbOperationsContext_Permissions_
  commentId: Overload:UserAPI.DBContexts.DbOperationsContext.Permissions
  isSpec: "True"
  fullName: UserAPI.DBContexts.DbOperationsContext.Permissions
  nameWithType: DbOperationsContext.Permissions
- uid: UserAPI.DBContexts.DbOperationsContext.PermissionsMappings
  name: PermissionsMappings
  href: api/UserAPI.DBContexts.DbOperationsContext.html#UserAPI_DBContexts_DbOperationsContext_PermissionsMappings
  commentId: P:UserAPI.DBContexts.DbOperationsContext.PermissionsMappings
  fullName: UserAPI.DBContexts.DbOperationsContext.PermissionsMappings
  nameWithType: DbOperationsContext.PermissionsMappings
- uid: UserAPI.DBContexts.DbOperationsContext.PermissionsMappings*
  name: PermissionsMappings
  href: api/UserAPI.DBContexts.DbOperationsContext.html#UserAPI_DBContexts_DbOperationsContext_PermissionsMappings_
  commentId: Overload:UserAPI.DBContexts.DbOperationsContext.PermissionsMappings
  isSpec: "True"
  fullName: UserAPI.DBContexts.DbOperationsContext.PermissionsMappings
  nameWithType: DbOperationsContext.PermissionsMappings
- uid: UserAPI.DBContexts.DbOperationsContext.PermissionStatuses
  name: PermissionStatuses
  href: api/UserAPI.DBContexts.DbOperationsContext.html#UserAPI_DBContexts_DbOperationsContext_PermissionStatuses
  commentId: P:UserAPI.DBContexts.DbOperationsContext.PermissionStatuses
  fullName: UserAPI.DBContexts.DbOperationsContext.PermissionStatuses
  nameWithType: DbOperationsContext.PermissionStatuses
- uid: UserAPI.DBContexts.DbOperationsContext.PermissionStatuses*
  name: PermissionStatuses
  href: api/UserAPI.DBContexts.DbOperationsContext.html#UserAPI_DBContexts_DbOperationsContext_PermissionStatuses_
  commentId: Overload:UserAPI.DBContexts.DbOperationsContext.PermissionStatuses
  isSpec: "True"
  fullName: UserAPI.DBContexts.DbOperationsContext.PermissionStatuses
  nameWithType: DbOperationsContext.PermissionStatuses
- uid: UserAPI.DBContexts.DbOperationsContext.PersonaCounties
  name: PersonaCounties
  href: api/UserAPI.DBContexts.DbOperationsContext.html#UserAPI_DBContexts_DbOperationsContext_PersonaCounties
  commentId: P:UserAPI.DBContexts.DbOperationsContext.PersonaCounties
  fullName: UserAPI.DBContexts.DbOperationsContext.PersonaCounties
  nameWithType: DbOperationsContext.PersonaCounties
- uid: UserAPI.DBContexts.DbOperationsContext.PersonaCounties*
  name: PersonaCounties
  href: api/UserAPI.DBContexts.DbOperationsContext.html#UserAPI_DBContexts_DbOperationsContext_PersonaCounties_
  commentId: Overload:UserAPI.DBContexts.DbOperationsContext.PersonaCounties
  isSpec: "True"
  fullName: UserAPI.DBContexts.DbOperationsContext.PersonaCounties
  nameWithType: DbOperationsContext.PersonaCounties
- uid: UserAPI.DBContexts.DbOperationsContext.Personas
  name: Personas
  href: api/UserAPI.DBContexts.DbOperationsContext.html#UserAPI_DBContexts_DbOperationsContext_Personas
  commentId: P:UserAPI.DBContexts.DbOperationsContext.Personas
  fullName: UserAPI.DBContexts.DbOperationsContext.Personas
  nameWithType: DbOperationsContext.Personas
- uid: UserAPI.DBContexts.DbOperationsContext.Personas*
  name: Personas
  href: api/UserAPI.DBContexts.DbOperationsContext.html#UserAPI_DBContexts_DbOperationsContext_Personas_
  commentId: Overload:UserAPI.DBContexts.DbOperationsContext.Personas
  isSpec: "True"
  fullName: UserAPI.DBContexts.DbOperationsContext.Personas
  nameWithType: DbOperationsContext.Personas
- uid: UserAPI.DBContexts.DbOperationsContext.PersonaStates
  name: PersonaStates
  href: api/UserAPI.DBContexts.DbOperationsContext.html#UserAPI_DBContexts_DbOperationsContext_PersonaStates
  commentId: P:UserAPI.DBContexts.DbOperationsContext.PersonaStates
  fullName: UserAPI.DBContexts.DbOperationsContext.PersonaStates
  nameWithType: DbOperationsContext.PersonaStates
- uid: UserAPI.DBContexts.DbOperationsContext.PersonaStates*
  name: PersonaStates
  href: api/UserAPI.DBContexts.DbOperationsContext.html#UserAPI_DBContexts_DbOperationsContext_PersonaStates_
  commentId: Overload:UserAPI.DBContexts.DbOperationsContext.PersonaStates
  isSpec: "True"
  fullName: UserAPI.DBContexts.DbOperationsContext.PersonaStates
  nameWithType: DbOperationsContext.PersonaStates
- uid: UserAPI.DBContexts.DbOperationsContext.PersonaStatuses
  name: PersonaStatuses
  href: api/UserAPI.DBContexts.DbOperationsContext.html#UserAPI_DBContexts_DbOperationsContext_PersonaStatuses
  commentId: P:UserAPI.DBContexts.DbOperationsContext.PersonaStatuses
  fullName: UserAPI.DBContexts.DbOperationsContext.PersonaStatuses
  nameWithType: DbOperationsContext.PersonaStatuses
- uid: UserAPI.DBContexts.DbOperationsContext.PersonaStatuses*
  name: PersonaStatuses
  href: api/UserAPI.DBContexts.DbOperationsContext.html#UserAPI_DBContexts_DbOperationsContext_PersonaStatuses_
  commentId: Overload:UserAPI.DBContexts.DbOperationsContext.PersonaStatuses
  isSpec: "True"
  fullName: UserAPI.DBContexts.DbOperationsContext.PersonaStatuses
  nameWithType: DbOperationsContext.PersonaStatuses
- uid: UserAPI.DBContexts.DbOperationsContext.Portals
  name: Portals
  href: api/UserAPI.DBContexts.DbOperationsContext.html#UserAPI_DBContexts_DbOperationsContext_Portals
  commentId: P:UserAPI.DBContexts.DbOperationsContext.Portals
  fullName: UserAPI.DBContexts.DbOperationsContext.Portals
  nameWithType: DbOperationsContext.Portals
- uid: UserAPI.DBContexts.DbOperationsContext.Portals*
  name: Portals
  href: api/UserAPI.DBContexts.DbOperationsContext.html#UserAPI_DBContexts_DbOperationsContext_Portals_
  commentId: Overload:UserAPI.DBContexts.DbOperationsContext.Portals
  isSpec: "True"
  fullName: UserAPI.DBContexts.DbOperationsContext.Portals
  nameWithType: DbOperationsContext.Portals
- uid: UserAPI.DBContexts.DbOperationsContext.Roles
  name: Roles
  href: api/UserAPI.DBContexts.DbOperationsContext.html#UserAPI_DBContexts_DbOperationsContext_Roles
  commentId: P:UserAPI.DBContexts.DbOperationsContext.Roles
  fullName: UserAPI.DBContexts.DbOperationsContext.Roles
  nameWithType: DbOperationsContext.Roles
- uid: UserAPI.DBContexts.DbOperationsContext.Roles*
  name: Roles
  href: api/UserAPI.DBContexts.DbOperationsContext.html#UserAPI_DBContexts_DbOperationsContext_Roles_
  commentId: Overload:UserAPI.DBContexts.DbOperationsContext.Roles
  isSpec: "True"
  fullName: UserAPI.DBContexts.DbOperationsContext.Roles
  nameWithType: DbOperationsContext.Roles
- uid: UserAPI.DBContexts.DbOperationsContext.RolesMappings
  name: RolesMappings
  href: api/UserAPI.DBContexts.DbOperationsContext.html#UserAPI_DBContexts_DbOperationsContext_RolesMappings
  commentId: P:UserAPI.DBContexts.DbOperationsContext.RolesMappings
  fullName: UserAPI.DBContexts.DbOperationsContext.RolesMappings
  nameWithType: DbOperationsContext.RolesMappings
- uid: UserAPI.DBContexts.DbOperationsContext.RolesMappings*
  name: RolesMappings
  href: api/UserAPI.DBContexts.DbOperationsContext.html#UserAPI_DBContexts_DbOperationsContext_RolesMappings_
  commentId: Overload:UserAPI.DBContexts.DbOperationsContext.RolesMappings
  isSpec: "True"
  fullName: UserAPI.DBContexts.DbOperationsContext.RolesMappings
  nameWithType: DbOperationsContext.RolesMappings
- uid: UserAPI.DBContexts.DbOperationsContext.RoleStatuses
  name: RoleStatuses
  href: api/UserAPI.DBContexts.DbOperationsContext.html#UserAPI_DBContexts_DbOperationsContext_RoleStatuses
  commentId: P:UserAPI.DBContexts.DbOperationsContext.RoleStatuses
  fullName: UserAPI.DBContexts.DbOperationsContext.RoleStatuses
  nameWithType: DbOperationsContext.RoleStatuses
- uid: UserAPI.DBContexts.DbOperationsContext.RoleStatuses*
  name: RoleStatuses
  href: api/UserAPI.DBContexts.DbOperationsContext.html#UserAPI_DBContexts_DbOperationsContext_RoleStatuses_
  commentId: Overload:UserAPI.DBContexts.DbOperationsContext.RoleStatuses
  isSpec: "True"
  fullName: UserAPI.DBContexts.DbOperationsContext.RoleStatuses
  nameWithType: DbOperationsContext.RoleStatuses
- uid: UserAPI.Models
  name: UserAPI.Models
  href: api/UserAPI.Models.html
  commentId: N:UserAPI.Models
  fullName: UserAPI.Models
  nameWithType: UserAPI.Models
- uid: UserAPI.Models.PersonaModel
  name: PersonaModel
  href: api/UserAPI.Models.PersonaModel.html
  commentId: T:UserAPI.Models.PersonaModel
  fullName: UserAPI.Models.PersonaModel
  nameWithType: PersonaModel
- uid: UserAPI.Models.PersonaModel.CreatedBy
  name: CreatedBy
  href: api/UserAPI.Models.PersonaModel.html#UserAPI_Models_PersonaModel_CreatedBy
  commentId: P:UserAPI.Models.PersonaModel.CreatedBy
  fullName: UserAPI.Models.PersonaModel.CreatedBy
  nameWithType: PersonaModel.CreatedBy
- uid: UserAPI.Models.PersonaModel.CreatedBy*
  name: CreatedBy
  href: api/UserAPI.Models.PersonaModel.html#UserAPI_Models_PersonaModel_CreatedBy_
  commentId: Overload:UserAPI.Models.PersonaModel.CreatedBy
  isSpec: "True"
  fullName: UserAPI.Models.PersonaModel.CreatedBy
  nameWithType: PersonaModel.CreatedBy
- uid: UserAPI.Models.PersonaModel.CreatedOn
  name: CreatedOn
  href: api/UserAPI.Models.PersonaModel.html#UserAPI_Models_PersonaModel_CreatedOn
  commentId: P:UserAPI.Models.PersonaModel.CreatedOn
  fullName: UserAPI.Models.PersonaModel.CreatedOn
  nameWithType: PersonaModel.CreatedOn
- uid: UserAPI.Models.PersonaModel.CreatedOn*
  name: CreatedOn
  href: api/UserAPI.Models.PersonaModel.html#UserAPI_Models_PersonaModel_CreatedOn_
  commentId: Overload:UserAPI.Models.PersonaModel.CreatedOn
  isSpec: "True"
  fullName: UserAPI.Models.PersonaModel.CreatedOn
  nameWithType: PersonaModel.CreatedOn
- uid: UserAPI.Models.PersonaModel.FirstName
  name: FirstName
  href: api/UserAPI.Models.PersonaModel.html#UserAPI_Models_PersonaModel_FirstName
  commentId: P:UserAPI.Models.PersonaModel.FirstName
  fullName: UserAPI.Models.PersonaModel.FirstName
  nameWithType: PersonaModel.FirstName
- uid: UserAPI.Models.PersonaModel.FirstName*
  name: FirstName
  href: api/UserAPI.Models.PersonaModel.html#UserAPI_Models_PersonaModel_FirstName_
  commentId: Overload:UserAPI.Models.PersonaModel.FirstName
  isSpec: "True"
  fullName: UserAPI.Models.PersonaModel.FirstName
  nameWithType: PersonaModel.FirstName
- uid: UserAPI.Models.PersonaModel.LastName
  name: LastName
  href: api/UserAPI.Models.PersonaModel.html#UserAPI_Models_PersonaModel_LastName
  commentId: P:UserAPI.Models.PersonaModel.LastName
  fullName: UserAPI.Models.PersonaModel.LastName
  nameWithType: PersonaModel.LastName
- uid: UserAPI.Models.PersonaModel.LastName*
  name: LastName
  href: api/UserAPI.Models.PersonaModel.html#UserAPI_Models_PersonaModel_LastName_
  commentId: Overload:UserAPI.Models.PersonaModel.LastName
  isSpec: "True"
  fullName: UserAPI.Models.PersonaModel.LastName
  nameWithType: PersonaModel.LastName
- uid: UserAPI.Models.PersonaModel.ModifiedBy
  name: ModifiedBy
  href: api/UserAPI.Models.PersonaModel.html#UserAPI_Models_PersonaModel_ModifiedBy
  commentId: P:UserAPI.Models.PersonaModel.ModifiedBy
  fullName: UserAPI.Models.PersonaModel.ModifiedBy
  nameWithType: PersonaModel.ModifiedBy
- uid: UserAPI.Models.PersonaModel.ModifiedBy*
  name: ModifiedBy
  href: api/UserAPI.Models.PersonaModel.html#UserAPI_Models_PersonaModel_ModifiedBy_
  commentId: Overload:UserAPI.Models.PersonaModel.ModifiedBy
  isSpec: "True"
  fullName: UserAPI.Models.PersonaModel.ModifiedBy
  nameWithType: PersonaModel.ModifiedBy
- uid: UserAPI.Models.PersonaModel.ModifiedOn
  name: ModifiedOn
  href: api/UserAPI.Models.PersonaModel.html#UserAPI_Models_PersonaModel_ModifiedOn
  commentId: P:UserAPI.Models.PersonaModel.ModifiedOn
  fullName: UserAPI.Models.PersonaModel.ModifiedOn
  nameWithType: PersonaModel.ModifiedOn
- uid: UserAPI.Models.PersonaModel.ModifiedOn*
  name: ModifiedOn
  href: api/UserAPI.Models.PersonaModel.html#UserAPI_Models_PersonaModel_ModifiedOn_
  commentId: Overload:UserAPI.Models.PersonaModel.ModifiedOn
  isSpec: "True"
  fullName: UserAPI.Models.PersonaModel.ModifiedOn
  nameWithType: PersonaModel.ModifiedOn
- uid: UserAPI.Models.PersonaModel.PersonaAddress
  name: PersonaAddress
  href: api/UserAPI.Models.PersonaModel.html#UserAPI_Models_PersonaModel_PersonaAddress
  commentId: P:UserAPI.Models.PersonaModel.PersonaAddress
  fullName: UserAPI.Models.PersonaModel.PersonaAddress
  nameWithType: PersonaModel.PersonaAddress
- uid: UserAPI.Models.PersonaModel.PersonaAddress*
  name: PersonaAddress
  href: api/UserAPI.Models.PersonaModel.html#UserAPI_Models_PersonaModel_PersonaAddress_
  commentId: Overload:UserAPI.Models.PersonaModel.PersonaAddress
  isSpec: "True"
  fullName: UserAPI.Models.PersonaModel.PersonaAddress
  nameWithType: PersonaModel.PersonaAddress
- uid: UserAPI.Models.PersonaModel.PersonaCountyID
  name: PersonaCountyID
  href: api/UserAPI.Models.PersonaModel.html#UserAPI_Models_PersonaModel_PersonaCountyID
  commentId: P:UserAPI.Models.PersonaModel.PersonaCountyID
  fullName: UserAPI.Models.PersonaModel.PersonaCountyID
  nameWithType: PersonaModel.PersonaCountyID
- uid: UserAPI.Models.PersonaModel.PersonaCountyID*
  name: PersonaCountyID
  href: api/UserAPI.Models.PersonaModel.html#UserAPI_Models_PersonaModel_PersonaCountyID_
  commentId: Overload:UserAPI.Models.PersonaModel.PersonaCountyID
  isSpec: "True"
  fullName: UserAPI.Models.PersonaModel.PersonaCountyID
  nameWithType: PersonaModel.PersonaCountyID
- uid: UserAPI.Models.PersonaModel.PersonaDateOfBirth
  name: PersonaDateOfBirth
  href: api/UserAPI.Models.PersonaModel.html#UserAPI_Models_PersonaModel_PersonaDateOfBirth
  commentId: P:UserAPI.Models.PersonaModel.PersonaDateOfBirth
  fullName: UserAPI.Models.PersonaModel.PersonaDateOfBirth
  nameWithType: PersonaModel.PersonaDateOfBirth
- uid: UserAPI.Models.PersonaModel.PersonaDateOfBirth*
  name: PersonaDateOfBirth
  href: api/UserAPI.Models.PersonaModel.html#UserAPI_Models_PersonaModel_PersonaDateOfBirth_
  commentId: Overload:UserAPI.Models.PersonaModel.PersonaDateOfBirth
  isSpec: "True"
  fullName: UserAPI.Models.PersonaModel.PersonaDateOfBirth
  nameWithType: PersonaModel.PersonaDateOfBirth
- uid: UserAPI.Models.PersonaModel.PersonaEmailAddress
  name: PersonaEmailAddress
  href: api/UserAPI.Models.PersonaModel.html#UserAPI_Models_PersonaModel_PersonaEmailAddress
  commentId: P:UserAPI.Models.PersonaModel.PersonaEmailAddress
  fullName: UserAPI.Models.PersonaModel.PersonaEmailAddress
  nameWithType: PersonaModel.PersonaEmailAddress
- uid: UserAPI.Models.PersonaModel.PersonaEmailAddress*
  name: PersonaEmailAddress
  href: api/UserAPI.Models.PersonaModel.html#UserAPI_Models_PersonaModel_PersonaEmailAddress_
  commentId: Overload:UserAPI.Models.PersonaModel.PersonaEmailAddress
  isSpec: "True"
  fullName: UserAPI.Models.PersonaModel.PersonaEmailAddress
  nameWithType: PersonaModel.PersonaEmailAddress
- uid: UserAPI.Models.PersonaModel.PersonaGender
  name: PersonaGender
  href: api/UserAPI.Models.PersonaModel.html#UserAPI_Models_PersonaModel_PersonaGender
  commentId: P:UserAPI.Models.PersonaModel.PersonaGender
  fullName: UserAPI.Models.PersonaModel.PersonaGender
  nameWithType: PersonaModel.PersonaGender
- uid: UserAPI.Models.PersonaModel.PersonaGender*
  name: PersonaGender
  href: api/UserAPI.Models.PersonaModel.html#UserAPI_Models_PersonaModel_PersonaGender_
  commentId: Overload:UserAPI.Models.PersonaModel.PersonaGender
  isSpec: "True"
  fullName: UserAPI.Models.PersonaModel.PersonaGender
  nameWithType: PersonaModel.PersonaGender
- uid: UserAPI.Models.PersonaModel.PersonaID
  name: PersonaID
  href: api/UserAPI.Models.PersonaModel.html#UserAPI_Models_PersonaModel_PersonaID
  commentId: P:UserAPI.Models.PersonaModel.PersonaID
  fullName: UserAPI.Models.PersonaModel.PersonaID
  nameWithType: PersonaModel.PersonaID
- uid: UserAPI.Models.PersonaModel.PersonaID*
  name: PersonaID
  href: api/UserAPI.Models.PersonaModel.html#UserAPI_Models_PersonaModel_PersonaID_
  commentId: Overload:UserAPI.Models.PersonaModel.PersonaID
  isSpec: "True"
  fullName: UserAPI.Models.PersonaModel.PersonaID
  nameWithType: PersonaModel.PersonaID
- uid: UserAPI.Models.PersonaModel.PersonaImageUrl
  name: PersonaImageUrl
  href: api/UserAPI.Models.PersonaModel.html#UserAPI_Models_PersonaModel_PersonaImageUrl
  commentId: P:UserAPI.Models.PersonaModel.PersonaImageUrl
  fullName: UserAPI.Models.PersonaModel.PersonaImageUrl
  nameWithType: PersonaModel.PersonaImageUrl
- uid: UserAPI.Models.PersonaModel.PersonaImageUrl*
  name: PersonaImageUrl
  href: api/UserAPI.Models.PersonaModel.html#UserAPI_Models_PersonaModel_PersonaImageUrl_
  commentId: Overload:UserAPI.Models.PersonaModel.PersonaImageUrl
  isSpec: "True"
  fullName: UserAPI.Models.PersonaModel.PersonaImageUrl
  nameWithType: PersonaModel.PersonaImageUrl
- uid: UserAPI.Models.PersonaModel.PersonaNickName
  name: PersonaNickName
  href: api/UserAPI.Models.PersonaModel.html#UserAPI_Models_PersonaModel_PersonaNickName
  commentId: P:UserAPI.Models.PersonaModel.PersonaNickName
  fullName: UserAPI.Models.PersonaModel.PersonaNickName
  nameWithType: PersonaModel.PersonaNickName
- uid: UserAPI.Models.PersonaModel.PersonaNickName*
  name: PersonaNickName
  href: api/UserAPI.Models.PersonaModel.html#UserAPI_Models_PersonaModel_PersonaNickName_
  commentId: Overload:UserAPI.Models.PersonaModel.PersonaNickName
  isSpec: "True"
  fullName: UserAPI.Models.PersonaModel.PersonaNickName
  nameWithType: PersonaModel.PersonaNickName
- uid: UserAPI.Models.PersonaModel.PersonaOccupation
  name: PersonaOccupation
  href: api/UserAPI.Models.PersonaModel.html#UserAPI_Models_PersonaModel_PersonaOccupation
  commentId: P:UserAPI.Models.PersonaModel.PersonaOccupation
  fullName: UserAPI.Models.PersonaModel.PersonaOccupation
  nameWithType: PersonaModel.PersonaOccupation
- uid: UserAPI.Models.PersonaModel.PersonaOccupation*
  name: PersonaOccupation
  href: api/UserAPI.Models.PersonaModel.html#UserAPI_Models_PersonaModel_PersonaOccupation_
  commentId: Overload:UserAPI.Models.PersonaModel.PersonaOccupation
  isSpec: "True"
  fullName: UserAPI.Models.PersonaModel.PersonaOccupation
  nameWithType: PersonaModel.PersonaOccupation
- uid: UserAPI.Models.PersonaModel.PersonaStateID
  name: PersonaStateID
  href: api/UserAPI.Models.PersonaModel.html#UserAPI_Models_PersonaModel_PersonaStateID
  commentId: P:UserAPI.Models.PersonaModel.PersonaStateID
  fullName: UserAPI.Models.PersonaModel.PersonaStateID
  nameWithType: PersonaModel.PersonaStateID
- uid: UserAPI.Models.PersonaModel.PersonaStateID*
  name: PersonaStateID
  href: api/UserAPI.Models.PersonaModel.html#UserAPI_Models_PersonaModel_PersonaStateID_
  commentId: Overload:UserAPI.Models.PersonaModel.PersonaStateID
  isSpec: "True"
  fullName: UserAPI.Models.PersonaModel.PersonaStateID
  nameWithType: PersonaModel.PersonaStateID
- uid: UserAPI.Models.PersonaModel.PersonaStatusID
  name: PersonaStatusID
  href: api/UserAPI.Models.PersonaModel.html#UserAPI_Models_PersonaModel_PersonaStatusID
  commentId: P:UserAPI.Models.PersonaModel.PersonaStatusID
  fullName: UserAPI.Models.PersonaModel.PersonaStatusID
  nameWithType: PersonaModel.PersonaStatusID
- uid: UserAPI.Models.PersonaModel.PersonaStatusID*
  name: PersonaStatusID
  href: api/UserAPI.Models.PersonaModel.html#UserAPI_Models_PersonaModel_PersonaStatusID_
  commentId: Overload:UserAPI.Models.PersonaModel.PersonaStatusID
  isSpec: "True"
  fullName: UserAPI.Models.PersonaModel.PersonaStatusID
  nameWithType: PersonaModel.PersonaStatusID
- uid: UserAPI.Models.PersonaModel.PortalID
  name: PortalID
  href: api/UserAPI.Models.PersonaModel.html#UserAPI_Models_PersonaModel_PortalID
  commentId: P:UserAPI.Models.PersonaModel.PortalID
  fullName: UserAPI.Models.PersonaModel.PortalID
  nameWithType: PersonaModel.PortalID
- uid: UserAPI.Models.PersonaModel.PortalID*
  name: PortalID
  href: api/UserAPI.Models.PersonaModel.html#UserAPI_Models_PersonaModel_PortalID_
  commentId: Overload:UserAPI.Models.PersonaModel.PortalID
  isSpec: "True"
  fullName: UserAPI.Models.PersonaModel.PortalID
  nameWithType: PersonaModel.PortalID
- uid: UserAPI.Models.PersonaModel.TuvimaEmailAddress
  name: TuvimaEmailAddress
  href: api/UserAPI.Models.PersonaModel.html#UserAPI_Models_PersonaModel_TuvimaEmailAddress
  commentId: P:UserAPI.Models.PersonaModel.TuvimaEmailAddress
  fullName: UserAPI.Models.PersonaModel.TuvimaEmailAddress
  nameWithType: PersonaModel.TuvimaEmailAddress
- uid: UserAPI.Models.PersonaModel.TuvimaEmailAddress*
  name: TuvimaEmailAddress
  href: api/UserAPI.Models.PersonaModel.html#UserAPI_Models_PersonaModel_TuvimaEmailAddress_
  commentId: Overload:UserAPI.Models.PersonaModel.TuvimaEmailAddress
  isSpec: "True"
  fullName: UserAPI.Models.PersonaModel.TuvimaEmailAddress
  nameWithType: PersonaModel.TuvimaEmailAddress
- uid: UserAPI.Repositories
  name: UserAPI.Repositories
  href: api/UserAPI.Repositories.html
  commentId: N:UserAPI.Repositories
  fullName: UserAPI.Repositories
  nameWithType: UserAPI.Repositories
- uid: UserAPI.Repositories.PersonaRepository
  name: PersonaRepository
  href: api/UserAPI.Repositories.PersonaRepository.html
  commentId: T:UserAPI.Repositories.PersonaRepository
  fullName: UserAPI.Repositories.PersonaRepository
  nameWithType: PersonaRepository
- uid: UserAPI.Repositories.PersonaRepository.#ctor(UserAPI.DBContexts.DbOperationsContext,Microsoft.Extensions.Logging.ILogger{UserAPI.Repositories.PersonaRepository},RawSqlExecuter)
  name: PersonaRepository(DbOperationsContext, ILogger<PersonaRepository>, RawSqlExecuter)
  href: api/UserAPI.Repositories.PersonaRepository.html#UserAPI_Repositories_PersonaRepository__ctor_UserAPI_DBContexts_DbOperationsContext_Microsoft_Extensions_Logging_ILogger_UserAPI_Repositories_PersonaRepository__RawSqlExecuter_
  commentId: M:UserAPI.Repositories.PersonaRepository.#ctor(UserAPI.DBContexts.DbOperationsContext,Microsoft.Extensions.Logging.ILogger{UserAPI.Repositories.PersonaRepository},RawSqlExecuter)
  name.vb: New(DbOperationsContext, ILogger(Of PersonaRepository), RawSqlExecuter)
  fullName: UserAPI.Repositories.PersonaRepository.PersonaRepository(UserAPI.DBContexts.DbOperationsContext, Microsoft.Extensions.Logging.ILogger<UserAPI.Repositories.PersonaRepository>, RawSqlExecuter)
  fullName.vb: UserAPI.Repositories.PersonaRepository.New(UserAPI.DBContexts.DbOperationsContext, Microsoft.Extensions.Logging.ILogger(Of UserAPI.Repositories.PersonaRepository), RawSqlExecuter)
  nameWithType: PersonaRepository.PersonaRepository(DbOperationsContext, ILogger<PersonaRepository>, RawSqlExecuter)
  nameWithType.vb: PersonaRepository.New(DbOperationsContext, ILogger(Of PersonaRepository), RawSqlExecuter)
- uid: UserAPI.Repositories.PersonaRepository.#ctor*
  name: PersonaRepository
  href: api/UserAPI.Repositories.PersonaRepository.html#UserAPI_Repositories_PersonaRepository__ctor_
  commentId: Overload:UserAPI.Repositories.PersonaRepository.#ctor
  isSpec: "True"
  name.vb: New
  fullName: UserAPI.Repositories.PersonaRepository.PersonaRepository
  fullName.vb: UserAPI.Repositories.PersonaRepository.New
  nameWithType: PersonaRepository.PersonaRepository
  nameWithType.vb: PersonaRepository.New
- uid: UserAPI.Repositories.PersonaRepository.AddPersona(User.Microservice.Models.PersonaModel)
  name: AddPersona(PersonaModel)
  href: api/UserAPI.Repositories.PersonaRepository.html#UserAPI_Repositories_PersonaRepository_AddPersona_User_Microservice_Models_PersonaModel_
  commentId: M:UserAPI.Repositories.PersonaRepository.AddPersona(User.Microservice.Models.PersonaModel)
  fullName: UserAPI.Repositories.PersonaRepository.AddPersona(User.Microservice.Models.PersonaModel)
  nameWithType: PersonaRepository.AddPersona(PersonaModel)
- uid: UserAPI.Repositories.PersonaRepository.AddPersona*
  name: AddPersona
  href: api/UserAPI.Repositories.PersonaRepository.html#UserAPI_Repositories_PersonaRepository_AddPersona_
  commentId: Overload:UserAPI.Repositories.PersonaRepository.AddPersona
  isSpec: "True"
  fullName: UserAPI.Repositories.PersonaRepository.AddPersona
  nameWithType: PersonaRepository.AddPersona
- uid: UserAPI.Repositories.PersonaRepository.DeletePersona(System.Int32)
  name: DeletePersona(int)
  href: api/UserAPI.Repositories.PersonaRepository.html#UserAPI_Repositories_PersonaRepository_DeletePersona_System_Int32_
  commentId: M:UserAPI.Repositories.PersonaRepository.DeletePersona(System.Int32)
  name.vb: DeletePersona(Integer)
  fullName: UserAPI.Repositories.PersonaRepository.DeletePersona(int)
  fullName.vb: UserAPI.Repositories.PersonaRepository.DeletePersona(Integer)
  nameWithType: PersonaRepository.DeletePersona(int)
  nameWithType.vb: PersonaRepository.DeletePersona(Integer)
- uid: UserAPI.Repositories.PersonaRepository.DeletePersona*
  name: DeletePersona
  href: api/UserAPI.Repositories.PersonaRepository.html#UserAPI_Repositories_PersonaRepository_DeletePersona_
  commentId: Overload:UserAPI.Repositories.PersonaRepository.DeletePersona
  isSpec: "True"
  fullName: UserAPI.Repositories.PersonaRepository.DeletePersona
  nameWithType: PersonaRepository.DeletePersona
- uid: UserAPI.Repositories.PersonaRepository.GetAllPersona
  name: GetAllPersona()
  href: api/UserAPI.Repositories.PersonaRepository.html#UserAPI_Repositories_PersonaRepository_GetAllPersona
  commentId: M:UserAPI.Repositories.PersonaRepository.GetAllPersona
  fullName: UserAPI.Repositories.PersonaRepository.GetAllPersona()
  nameWithType: PersonaRepository.GetAllPersona()
- uid: UserAPI.Repositories.PersonaRepository.GetAllPersona*
  name: GetAllPersona
  href: api/UserAPI.Repositories.PersonaRepository.html#UserAPI_Repositories_PersonaRepository_GetAllPersona_
  commentId: Overload:UserAPI.Repositories.PersonaRepository.GetAllPersona
  isSpec: "True"
  fullName: UserAPI.Repositories.PersonaRepository.GetAllPersona
  nameWithType: PersonaRepository.GetAllPersona
- uid: UserAPI.Repositories.PersonaRepository.GetPersonaById(System.String)
  name: GetPersonaById(string)
  href: api/UserAPI.Repositories.PersonaRepository.html#UserAPI_Repositories_PersonaRepository_GetPersonaById_System_String_
  commentId: M:UserAPI.Repositories.PersonaRepository.GetPersonaById(System.String)
  name.vb: GetPersonaById(String)
  fullName: UserAPI.Repositories.PersonaRepository.GetPersonaById(string)
  fullName.vb: UserAPI.Repositories.PersonaRepository.GetPersonaById(String)
  nameWithType: PersonaRepository.GetPersonaById(string)
  nameWithType.vb: PersonaRepository.GetPersonaById(String)
- uid: UserAPI.Repositories.PersonaRepository.GetPersonaById*
  name: GetPersonaById
  href: api/UserAPI.Repositories.PersonaRepository.html#UserAPI_Repositories_PersonaRepository_GetPersonaById_
  commentId: Overload:UserAPI.Repositories.PersonaRepository.GetPersonaById
  isSpec: "True"
  fullName: UserAPI.Repositories.PersonaRepository.GetPersonaById
  nameWithType: PersonaRepository.GetPersonaById
- uid: UserAPI.Repositories.PersonaRepository.IsPersonaExists(User.Microservice.Models.PersonaModel)
  name: IsPersonaExists(PersonaModel)
  href: api/UserAPI.Repositories.PersonaRepository.html#UserAPI_Repositories_PersonaRepository_IsPersonaExists_User_Microservice_Models_PersonaModel_
  commentId: M:UserAPI.Repositories.PersonaRepository.IsPersonaExists(User.Microservice.Models.PersonaModel)
  fullName: UserAPI.Repositories.PersonaRepository.IsPersonaExists(User.Microservice.Models.PersonaModel)
  nameWithType: PersonaRepository.IsPersonaExists(PersonaModel)
- uid: UserAPI.Repositories.PersonaRepository.IsPersonaExists*
  name: IsPersonaExists
  href: api/UserAPI.Repositories.PersonaRepository.html#UserAPI_Repositories_PersonaRepository_IsPersonaExists_
  commentId: Overload:UserAPI.Repositories.PersonaRepository.IsPersonaExists
  isSpec: "True"
  fullName: UserAPI.Repositories.PersonaRepository.IsPersonaExists
  nameWithType: PersonaRepository.IsPersonaExists
- uid: UserAPI.Repositories.PersonaRepository.UpdatePersona(User.Microservice.Models.PersonaModel)
  name: UpdatePersona(PersonaModel)
  href: api/UserAPI.Repositories.PersonaRepository.html#UserAPI_Repositories_PersonaRepository_UpdatePersona_User_Microservice_Models_PersonaModel_
  commentId: M:UserAPI.Repositories.PersonaRepository.UpdatePersona(User.Microservice.Models.PersonaModel)
  fullName: UserAPI.Repositories.PersonaRepository.UpdatePersona(User.Microservice.Models.PersonaModel)
  nameWithType: PersonaRepository.UpdatePersona(PersonaModel)
- uid: UserAPI.Repositories.PersonaRepository.UpdatePersona*
  name: UpdatePersona
  href: api/UserAPI.Repositories.PersonaRepository.html#UserAPI_Repositories_PersonaRepository_UpdatePersona_
  commentId: Overload:UserAPI.Repositories.PersonaRepository.UpdatePersona
  isSpec: "True"
  fullName: UserAPI.Repositories.PersonaRepository.UpdatePersona
  nameWithType: PersonaRepository.UpdatePersona
